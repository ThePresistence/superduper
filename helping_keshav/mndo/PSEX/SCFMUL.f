      SUBROUTINE SCFMUL (ARRAY,LM5,ICALL,SCFCAL,ENERGX,CGX,CNORMX,N)
C     *
C     CONTROL ROUTINE FOR MULTIPLE CI CALCULATIONS.
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     ARRAY     AVAILABLE BUFFER (S).
C     LM5       DIMENSION OF ARRAY (I).
C     ICALL     CONTROL AND ERROR FLAG (I,O).
C     SCFCAL    EXTERNAL ROUTINE FOR ENERGY EVALUATION (I).
C     ENERGX    CI STATE ENERGIES (O).
C     CGX       ASSOCIATE CI GRADIENTS (O).
C     CNORMX    ASSOCIATE CI GRADIENT NORM (O).
C     N         TOTAL NUMBER OF ATOMS, QM+MM (I).
C     *
C     ICALL DEFINES THE TYPE OF CALCULATION IN SUBROUTINE SCF.
C     SEE SUBROUTINE SCF FOR THE LIST OF POSSIBLE VALUES.
C     FIRST SCF CALL FROM SFFMUL USES THE INPUT VALUE OF ICALL.
C     SUBSEQUENT CALLS USE MODIFIED ICALL (LAST DIGIT ICALL2=3)
C     TO ALLOW FOR SIMPLIFIED CI CALCULATIONS IN SCFCAL.
C     THE INPUT VALUE OF ICALL IS RESTORED AND RETURNED AT THE END.
C     *
C     ICALL  ALSO SERVES AS AN ERROR FLAG FOR SUBROUTINE SCFCAL.
C      -1    RETURNED FROM SCFCAL IF THERE IS NO SCF CONVERGENCE
C     *
C     FOR MULSTA, THE FOLLOWING ARE ALSO OUTPUT IN /ERGM/
C     GRADX     CI GRADIENTS FOR OPTIMIZATION
C     GNORMX    NORMS OF CI GRADIENTS FOR OPTIMIZATION
C     (To avoid refactoring legacy code for the time being,
C     ENERGX is not currently output via ERGM)
C     *
      USE LIMIT, ONLY: LM1, LMV, LM1M, LMPROP, LMSTAT, LMGRD
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      EXTERNAL SCFCAL
      COMMON
     ./CGRAD / CG(3,LM1+LM1M)
     ./CIPRP / CIPROP(LMPROP,LMSTAT),ICISYM(LMSTAT)
     ./CIROOT/ IROOTA(8)
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./DFP   / X(LMV),NVAR
     ./ERG   / E,G(LMV),GNORM,CNORM
     ./ERGM  / DUMMY(LMGRD),GRADX(LMV,LMGRD),GNORMX(LMGRD)
     ./GRDORG/ IGRST(LMGRD),ISTATE,JSTATE,ISTMUL(LMGRD)
     ./INOPT2/ IN2(300)
     ./NBFILE/ NBF(20)
      DIMENSION ARRAY(LM5)
      DIMENSION ENERGX(LMGRD)
      DIMENSION CGX(3,LM1+LM1M,LMGRD),CNORMX(LMGRD)
      DIMENSION CNRMTX(LMGRD)
C *** SAVE VALUES OF CONTROL VARIABLES.
      ICALL0 = ICALL
      ICALL1 = ICALL/10
      ICALL2 = ICALL-10*ICALL1
      IOUTCI = IN2(133)
      LROOT  = IN2(140)
C *** FILE NUMBERS.
      NB6    = NBF(6)
C *** INPUT OPTIONS.
      MPRINT = IN2(41)
      NPRINT = IN2(72)
      NUMATM = IN2(120)
      IROOT  = IN2(139)
      MULTCI = IN2(142)
      KEEPCI = IN2(158)
      NCIGRD = IN2(159)
C *** INITIALIZATION.
      CGX(1:3,1:N,1:NCIGRD) = 0.0D0
      CNORMX(1:NCIGRD) = 0.0D0
      GNORMX(1:NCIGRD) = 0.0D0
C *** SET INITIAL TIME AND PRINT OPTION.
      IF(MPRINT.GE.0) CALL CPUSEC(T1)
C
C *** LOOP OVER ALL CI CALCULATIONS.
C     THE FIRST CI CALCULATION IS STANDARD (ACCORDING TO ICALL).
C     ICALL=0,10,20: ONLY ENERGIES ARE REQUESTED, NO FURTHER CI RUNS.
C     ICALL=1,21: STANDARD CI CALCULATION OF ENERGY AND GRADIENT IN THE
C      FIRST RUN, SUBSEQUENT CI CALCULATIONS WITH ICALL=3,23 TO COMPUTE
C      ONLY THE GRADIENT FOR THE CHOSEN CI STATE (ISTATE).
C     ICALL=22: ONLY GRADIENTS ARE REQUESTED, TREATED AS ICALL=21 TO
C      ENSURE THAT THE CI WAVEFUNCTION IS AVAILABLE.
C     THE SIMPLIFIED CI GRADIENT RUNS WITH ICALL=3,23 ARE AUTOMATICALLY
C      INITIATED UNLESS PROHIBITED BY INPUT (KEEPCI=-1) OR THE 
C      MULTIPLICITY CHANGES (MULTCI=-1).
C     THE RELEVANT CI STATE IS LOCALLY DEFINED IN ISTATE AND IN2(140).
      IADDG  = 3
      IF(KEEPCI.EQ.-1 .OR. MULTCI.EQ.-1) IADDG = 1
      IF(ICALL2.EQ.2) ICALL = 10*ICALL1+1
      IF(ICALL.EQ.10) IN2(133) = MAX(1,IOUTCI)
C     CHECK THAT THE HIGHEST STATE GRADIENT REQUESTED CAN ACTUALLY
C     BE COMPUTED
      IF(IROOT.GT.0) THEN
         IF(IGRST(NCIGRD) .GT. IROOT) THEN
            WRITE(NB6,200) IGRST(NCIGRD), IROOT
            STOP 'SCFMUL'
         END IF
      ELSE
C        TOTAL NUMBER OF CI ROOTS OF ALL IRREDUCIBLE REPRESENTATIONS.
         NROOTA = SUM(IROOTA(1:8))
         IF(IGRST(NCIGRD) .GT. NROOTA) THEN
            WRITE(NB6,210) IGRST(NCIGRD), NROOTA
            STOP 'SCFMUL'
         END IF
      END IF
      DO 10 I=1,NCIGRD
         ISTATE = IGRST(I)
         JSTATE = 0
         IF(MPRINT.GE.1) THEN
            WRITE(NB6,300)
            WRITE(NB6,300)
            WRITE(NB6,310)
            WRITE(NB6,400) ISTATE
            WRITE(NB6,310)
         ENDIF
         IN2(140) = IGRST(I)
         IF(MULTCI.EQ.-1) IN2(142) = ISTMUL(I)
         IF(I.GT.1) ICALL = 10*ICALL1+IADDG
         CALL SCF (ARRAY,LM5,ICALL,SCFCAL)
         IF(ICALL.EQ.-1) GOTO 100
         IF(MULTCI.EQ.-1) THEN
C        ENERGIES MUST BE TAKEN WITH THE CORRECT MULTIPLICITY
            ENERGX(I) = CIPROP(1,IGRST(I))
         ELSE IF(I.EQ.1) THEN
            DO J = 1, NCIGRD
               ENERGX(J) = CIPROP(1,IGRST(J))
            END DO
            IF(ICALL2.EQ.0) GO TO 20
         ENDIF
         CALL DCOPY (3*N,CG,1,CGX(1,1,I),1)
         CALL DCOPY (NVAR,G,1,GRADX(1,I),1)
         CNORMX(I) = CNORM
         GNORMX(I) = GNORM
         IF(NUMATM.GT.0) THEN
            CNRMTX(I) = SQRT(DDOT(3*N,CG,1,CG,1))
         ENDIF
   10 CONTINUE
   20 CONTINUE
C *** PRINTING SECTION.
      IF(MPRINT.GE.1 .OR. NPRINT.GE.2) THEN
         CALL CPUSEC (T2)
         WRITE(NB6,500) T2-T1
         WRITE(NB6,300)
         WRITE(NB6,310)
         WRITE(NB6,510)
         IF(ICALL2.EQ.0) THEN
            WRITE(NB6,520)
         ELSE IF(NUMATM.GT.0) THEN
            WRITE(NB6,530)
         ELSE
            WRITE(NB6,540)
         ENDIF
         DO 30 I=1,NCIGRD
            IF(ICALL2.EQ.0) THEN
               WRITE(NB6,550) I, IGRST(I), ENERGX(I)
            ELSE IF(NUMATM.GT.0) THEN
               WRITE(NB6,550) I, IGRST(I), ENERGX(I), 
     1                        CNORMX(I), CNRMTX(I), GNORMX(I)
            ELSE
               WRITE(NB6,550) I, IGRST(I), ENERGX(I), 
     1                        CNORMX(I), GNORMX(I)
            ENDIF
   30    CONTINUE
         WRITE(NB6,310)
      ENDIF
C
C *** RESET CONTROL VARIABLES.
      ICALL = ICALL0
  100 CONTINUE 
      IN2(133) = IOUTCI
      IN2(140) = LROOT
      IN2(142) = MULTCI
      RETURN
  200 FORMAT (/  1X,'ERROR: GRADIENT FOR STATE ',I2,
     1              ' CANNOT BE COMPUTED.',
     1        /  1X,'IROOT = ',I2,' IS TOO LOW.')
  210 FORMAT (/  1X,'ERROR: GRADIENT FOR STATE ',I2,
     1              ' CANNOT BE COMPUTED.',
     1        /  1X,'ONLY ',I2,' STATES SPECIFIED.')
  300 FORMAT (/  1X)  
  310 FORMAT (   1X,71('-'))
  400 FORMAT (   1X,'CI CALCULATION FOR STATE: ',I2) 
  500 FORMAT (/////1X,'TIME FOR MULTIPLE CI RUNS   ',F10.3,' SECONDS')
  510 FORMAT (   1X,'SUMMARY OF MULTIPLE CI CALCULATIONS') 
  520 FORMAT (//  1X,'   I  STATE',11X,'ENERGY'/)
  530 FORMAT (/  1X,33X,'CARTESIAN     CARTESIAN    OPTIMIZING',
     1        /  1X,'   I  STATE',11X,
     1              'ENERGY       QM NORM    QM+MM NORM          NORM'/)
  540 FORMAT (/  1X,33X,'CARTESIAN    OPTIMIZING',
     1        /  1X,'   I  STATE',11X,
     1              'ENERGY       QM NORM          NORM'/)
  550 FORMAT (   1X,I4,I5,5X,4F14.5)
      END
