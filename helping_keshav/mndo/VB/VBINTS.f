      SUBROUTINE VBINTS (H,W,S,B,COR,HO,LM2,LM4,LM6,LM9)
C     *
C     INTEGRALS FOR MNDO AND RELATED METHODS.
C     *
C     NOTATION. I=INPUT, O=OUTPUT.
C     H(LM4)    CORE HAMILTONIAN MATRIX (O).
C     W(LM9)    TWO-ELECTRON INTEGRALS (O).
C     S(LM4)    OVERLAP MATRIX (O).
C     B(LM4)    RESONANCE MATRIX (O).
C     COR()     LOCAL CORE MATRIX (O).
C     HO(LM4)   ORTHOGONALIZATION CORRECTIONS (O).
C     *
      USE LIMIT, ONLY: LM1, LMX, LMZ
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (IZERO=0)
      LOGICAL NOTOMI,OM2,OM3,OM4,ODM2,ODM3
      COMMON
     ./ATOMC / COORD(3,LM1)
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./CONSTF/ A0,AFACT,EV,EVCAL,PI,W1,W2,BIGEXP
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./DPARM1/ UDD(LMZ),ZD(LMZ),BETAD(LMZ)
     ./ENERGT/ EE,ENUCLR,EAT,ATHEAT
     ./EXTRA1/ RI(22),CORE(10,2),REPT(10,2),WW(2025)
     ./EXTRA2/ SIJ(14),T(14),YY(675)
      COMMON
     ./INDEX / INDX(LMX)
     ./INDEXW/ NW(LM1)
     ./INOPT2/ IN2(300)
     ./PARDER/ TORE(LMZ),EHEAT(LMZ),EISOL(LMZ)
     ./PAROPT/ USS(LMZ),UPP(LMZ),ZS(LMZ),ZP(LMZ),BETAS(LMZ),BETAP(LMZ),
     .         ALP(LMZ)
      DIMENSION H(LM4),W(LM9)
      DIMENSION S(LM4),B(LM4),HO(LM4)
      DIMENSION COR(LM2,LM2)
C *** INPUT OPTIONS.
      IOP    = IN2(2)
C *** INITIALIZE SOME VARIABLES.
      NOTOMI = IOP.NE.-5 .AND. IOP.NE.-6 .AND. IOP.NE.-8 .AND. IOP.NE.-9
     1         .AND. IOP.NE.-22 .AND. IOP.NE.-23
      OM2    = IOP.EQ.-6 .AND. NUMAT.GT.2
      OM3    = IOP.EQ.-8 .AND. NUMAT.GT.2
      OM4    = IOP.EQ.-9 
      ODM2   = IOP.EQ.-22 .AND. NUMAT.GT.2
      ODM3   = IOP.EQ.-23 .AND. NUMAT.GT.2
      IJPAIR = INDX(NUMAT)+NUMAT
      KR     = 0
      ENUCLR = ZERO
      H(1:LM4) = ZERO
      S(1:LM4) = ZERO
      IF(OM2 .OR. OM3 .OR. OM4 .OR. ODM2 .OR. ODM3) THEN
         NORBS  = NLAST(NUMAT)
         B(1:LM4) = ZERO
         HO(1:LM4) = ZERO
         COR(1:NORBS,1:NUMAT) = ZERO
      ENDIF
C
C *** DIAGONAL ONE-CENTER TERMS.
      DO 70 I=1,NUMAT
      NI     = NAT(I)
      IA     = NFIRST(I)
      LL     = INDX(IA)+IA
      H(LL)  = USS(NI)
      S(LL)  = ONE
      IORBS  = NLAST(I)-IA+1
      IF(IORBS.GE.4) THEN
         DO 50 J=IA+1,IA+3
         LL     = INDX(J)+J
         H(LL)  = UPP(NI)
         S(LL)  = ONE
   50    CONTINUE
         IF(IORBS.GE.9) THEN
            DO 60 J=IA+4,IA+8
            LL     = INDX(J)+J
            H(LL)  = UDD(NI)
            S(LL)  = ONE
   60       CONTINUE
         ENDIF
      ENDIF
   70 CONTINUE
C
C *** LOOP OVER ATOM PAIRS FOR OFFDIAGONAL TWO-CENTER TERMS.
C     ATOMS I AND J ARE IDENTIFIED AT THE BEGINNING OF THE LOOP.
      DO 80 IJ=2,IJPAIR
      I      = NINT(SQRT(TWO*IJ))
      J      = IJ-INDX(I)
      IF(I.EQ.J) GO TO 80
      NI     = NAT(I)
      NJ     = NAT(J)
      IA     = NFIRST(I)
      JA     = NFIRST(J)
      IS     = INDX(IA)+IA
      JS     = INDX(JA)+JA
      IORBS  = NLAST(I)-IA+1
      JORBS  = NLAST(J)-JA+1
      ISHELL = I
      JSHELL = J
C *** SPECIAL SECTION FOR H-H PAIR.
      IF(NI.EQ.1 .AND. NJ.EQ.1 .AND. IORBS.EQ.1 .AND. JORBS.EQ.1
     1           .AND. NOTOMI) THEN
         CALL HHPAIR (J,I,COORD,SIJSS,HIJ,WIJ,EN)
         S(INDX(IA)+JA) = SIJSS
         H(INDX(IA)+JA) = HIJ
         H(IS)  = H(IS)-WIJ
         H(JS)  = H(JS)-WIJ
         ENUCLR = ENUCLR+EN
         IJP    = (NW(J)-1)*LM6+NW(I)
         W(IJP) = WIJ
         GO TO 80
      ENDIF
C *** DISTANCE R (AU) AND ROTATION MATRIX.
      CALL ROTMAT (J,I,JORBS,IORBS,NUMAT,COORD,R,YY)
C *** TWO-ELECTRON INTEGRALS.
      IW     = INDX(IORBS)+IORBS
      JW     = INDX(JORBS)+JORBS
C     TWO-ELECTRON INTEGRALS IN LOCAL COORDINATES.
      IF(NOTOMI) THEN
C        COMPUTE AND STORE THE SEMIEMPIRICAL INTEGRALS.
         CALL REPP (NI,NJ,R,RI,CORE)
         IF(IORBS.GE.9 .OR. JORBS.GE.9) THEN
            CALL REPPD (NI,NJ,R,RI,CORE,WW,IW,JW,1)
         ENDIF
      ELSE
C        COMPUTE AND STORE THE ANALYTICAL INTEGRALS.
         CALL REPGAU (R,RI,ISHELL,JSHELL,NI,NJ,IZERO)
         CALL CORDEF (RI,REPT,NI,NJ)
C        SCALE THE ANALYTICAL INTEGRALS.
         CALL GSCALE (R,RI,FKO,NI,NJ)
C        SAVE INTEGRALS TO BE USED FOR CORE-ELECTRON ATTRACTIONS.
         CALL CORDEF (RI,CORE,NI,NJ)
      ENDIF
C     TRANSFORM TWO-ELECTRON INTEGRALS TO MOLECULAR COORDINATES.
      IP     = NW(I)
      JP     = NW(J)
      IF(IORBS.LE.4 .AND. JORBS.LE.4) THEN
         CALL ROTATE (IW,JW,IP,JP,KR,RI,YY,W,W,LM6,LM9,0)
      ELSE
         CALL ROTD  (WW,YY,IW,JW)
         CALL W2MAT (IP,JP,WW,W,LM6,IW,JW)
      ENDIF
C *** OVERLAP AND RESONANCE INTEGRALS.
      IF(NOTOMI) THEN
         CALL BETAIJ (NI,NJ,R,SIJ,T)
         CALL ROTBET (IA,JA,IORBS,JORBS,T,YY,H,LM4)
      ELSE
         CALL BETOM  (IZERO,ISHELL,JSHELL,NI,NJ,R,SIJ,T)
         IF(OM2 .OR. OM3 .OR. OM4 .OR. ODM2 .OR. ODM3) THEN
            CALL ROTBET (IA,JA,IORBS,JORBS,T,YY,B,LM4)
         ELSE
            CALL ROTBET (IA,JA,IORBS,JORBS,T,YY,H,LM4)
         ENDIF
      ENDIF
      CALL ROTBET (IA,JA,IORBS,JORBS,SIJ,YY,S,LM4)
C *** CORE-ELECTRON ATTRACTIONS.
      IF(NOTOMI) THEN
         CALL ROTCOH (IA,JA,IORBS,JORBS,IS,JS,CORE,YY,H,LM4)
      ELSE
C        SAVE LOCAL CORE INTEGRALS FOR USE IN BETORT (OM2 OR ODM2).
         IF(OM2 .OR. ODM2) THEN
            COR(IA,J) = USS(NI)+CORE(1,1)
            COR(JA,I) = USS(NJ)+CORE(1,2)
            IF(IORBS.GE.4) THEN
               TEMP = UPP(NI)+(CORE(3,1)+TWO*CORE(4,1))/THREE
               COR(IA+1,J) = TEMP
               COR(IA+2,J) = TEMP
               COR(IA+3,J) = TEMP
            ENDIF
            IF(JORBS.GE.4) THEN
               TEMP = UPP(NJ)+(CORE(3,2)+TWO*CORE(4,2))/THREE
               COR(JA+1,I) = TEMP
               COR(JA+2,I) = TEMP
               COR(JA+3,I) = TEMP
            ENDIF
         ENDIF
C        UPDATE CORE-ELECTRON ATTRACTIONS (OM1,OM2,ODM2).
         CALL COROM  (ISHELL,JSHELL,NI,NJ,R,FKO,CORE,REPT,SIJ,T)
         CALL ROTCOH (IA,JA,IORBS,JORBS,IS,JS,CORE,YY,H,LM4)
      ENDIF
C *** CORE-CORE REPULSIONS.
      IF(NOTOMI) THEN
         WIJ = RI(1)
         CALL CORREP (I,J,NI,NJ,R,WIJ,EN)
      ELSE
         EN  = FKO*TORE(NI)*TORE(NJ)*EV/R
      ENDIF
      ENUCLR = ENUCLR+EN
   80 CONTINUE
C
C *** ORTHOGONALIZATION CORRECTIONS FOR RESONANCE INTEGRALS.
      IF(OM2 .OR. OM3 .OR. OM4 .OR. ODM2 .OR. ODM3) THEN
         IF(OM2 .OR. ODM2) THEN
            H(1:LM4) = H(1:LM4)+B(1:LM4)
            CALL BETORT (HO,S,B,COR,B,LM2,LM4,IZERO)
         ELSE IF(OM3 .OR. ODM3) THEN
            H(1:LM4) = H(1:LM4)+B(1:LM4)
            CALL BETOR3 (HO,S,B,B,LM2,LM4,IZERO)
         ELSE IF(OM4) THEN
            CALL BETLOW (HO,S,B,LM2,LM4)
         ENDIF
         H(1:LM4) = H(1:LM4)+HO(1:LM4)
      ENDIF
C
C *** STORE MNDO INTEGRALS IN SQUARE FORM, IF NECESSARY.
      CALL WSTORE (W,LM6,1)
      RETURN
      END
