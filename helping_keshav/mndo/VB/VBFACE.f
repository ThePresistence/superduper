      SUBROUTINE VBFACE (A,LM5,ICALL)
C     *
C     INTERFACE ROUTINE FOR SEMIEMPIRICAL VALENCE BOND TREATMENT.
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     A(LM5)    AVAILABLE BUFFER (S).
C     ICALL     CONTROL AND ERROR FLAG (I,O).
C     SEE SUBROUTINE SCF FOR DEFINITION OF ICALL.
C     *
      USE LIMIT, ONLY: LM1
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      COMMON
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./ENERGT/ EE,ENUCLR,EAT,ATHEAT
     ./INOPT2/ IN2(300)
     ./LIMITS/ LM2,LM3,LM4,LM6,LM7,LM8,LM9
     ./LMGRAD/ LG1,LG2,LG3,LG4,LG5,LG6,LG7,LG8
     ./LMSCF / LS1,LS2,LS3,LS4,LS5,LS6,LS7,LS8,LS9
     ./NBFILE/ NBF(20)
     ./ORBITS/ NUMB,NORBS,NMOS,NALPHA,NBETA
      DIMENSION A(LM5)
      DIMENSION WTRANS(LM4,LM4)
C     *
C *** FILE NUMBERS.
      NB6 = NBF(6)
C *** INPUT OPTIONS.
      NPRINT = IN2(72)
      IVBOVR = IN2(214)
C *** INTEGRAL CALCULATION FOR MNDO AND RELATED METHODS.
      CALL VBINTS (A(LS7),A(LS9),A(LG1),A(LG2),A(LG3),A(LG4),
     1             LM2,LM4,LM6,LM9)
C *** TRANSFORMATION OF ONE-ELECTRON AND TWO-ELECTRON INTEGRALS.
      IF(IVBOVR.GE.2) THEN
         CALL SHALF  (A(LS1),A(LS2),A(LS6),A(LS3),A(LG1),LM2,LM3,LM4,1,
     1                NPRINT)
         CALL OAOCAL (A(LS6),A(LS7),A(LS9),A(LG2),WTRANS,NFIRST,NLAST,
     1                NUMAT,LM2,LM4,LM6,NPRINT,NB6,IVBOVR)
         IF(NPRINT.GT.7) THEN
            WRITE(NB6,500)
            CALL MATPRT (A(LG2),NORBS,NORBS,LM2,LM2)
         ENDIF
      ELSE
         CALL SQUARE (A(LS7),A(LG2),NORBS,LM2,LM4)
      ENDIF
C *** SAVE INTEGRALS FOR VALENCE BOND ROUTINES.
      CALL VBSAVE (A(LG1),A(LS9),LM2,LM4,LM6,ENUCLR,
     1             A(LG2),A(LS1),WTRANS)
      RETURN
  500 FORMAT(// 1X,'TRANSFORMED CORE HAMILTONIAN AS SQUARE MATRIX')
      END
C     ******************************************************************
      SUBROUTINE SHALF (C,E,F,Q,S,LM2,LM3,LM4,MODE,NPRINT)
C     *
C     COMPUTE S**(+1/2) MATRIX FROM GIVEN OVERLAP MATRIX.
C     *
C     NOTATION.
C     C       EIGENVECTORS OF OVERLAP MATRIX (S).
C     E       EIGENVALUES  OF OVERLAP MATRIX (S).
C     F       COPY OF OVERLAP MATRIX (S).
C     F       S**(+1/2) MATRIX (O).
C     Q       DIAGONALIZATION BUFFER (S).
C     S       OVERLAP MATRIX (I,O), LOWER TRIANGLE, UNCHANGED.
C     MODE=0  RETURN F AS LOWER TRIANGLE.
C     MODE=1  RETURN F AS SQUARE MATRIX.
C     NPRINT  PRINTING FLAG.
C     *
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./NBFILE/ NBF(20)
     ./ORBITS/ NUMB,NORBS,NMOS,NALPHA,NBETA
      DIMENSION C(LM2,LM2),E(LM2),F(LM4),Q(LM2,5),S(LM4)
C *** FILE NUMBERS.
      NB6    = NBF(6)
C *** COPY OVERLAP INTEGRALS.
      F(1:LM4) = S(1:LM4)
      IF(NPRINT.GE.5) THEN
         WRITE(NB6,500)
         CALL VECPRT (S,LM4,NORBS)
      ENDIF
C *** DIAGONALIZE OVERLAP MATRIX.
      CALL TDIAG (F,C,E,Q,LM4,LM2,NORBS,NORBS)
      IF(NPRINT.GE.5) THEN
         WRITE(NB6,510)
         CALL MATOUT (C,E,NORBS,NORBS,LM2,LM3)
      ENDIF
C *** COMPUTE SQUARE ROOTS OF EIGENVALUES.
      E(1:NORBS) = SQRT(ABS(E(1:NORBS)))
C *** COMPUTE AND SAVE S**(+1/2) MATRIX.
      IJ     = 0
      DO 30 I=1,NORBS
      DO 20 J=1,I
      IJ     = IJ+1
      F(IJ)  = ZERO
      DO 10 K=1,NORBS
      F(IJ)  = F(IJ)+C(I,K)*E(K)*C(J,K)
   10 CONTINUE
   20 CONTINUE
   30 CONTINUE
      IF(NPRINT.GE.5) THEN
         WRITE(NB6,520)
         CALL VECPRT (F,LM4,NORBS)
      ENDIF
C *** GENERATE SQUARE MATRIX FROM LOWER TRIANGLE.
      IF(MODE.EQ.1) CALL SQUARE(F,F,NORBS,LM2,LM4)
      RETURN
  500 FORMAT(///1X,'OVERLAP MATRIX (DEBUG PRINT FROM SHALF)'/)
  510 FORMAT(///1X,'EIGENVALUES AND EIGENVECTORS OF OVERLAP MATRIX'/)
  520 FORMAT(///1X,'SQUARE ROOT OF OVERLAP MATRIX'/)
      END
C     ******************************************************************
      SUBROUTINE OAOCAL (C,H,W,HTRANS,WTRANS,NFIRST,NLAST,
     1                   NUMAT,LM2,LM4,LM6,NPRINT,NB6,IVBOVR)
C     *
C     INTERFACE TO INTEGRAL TRANSFORMATION ROUTINES.
C     *
C     NOTATION.
C     C       TRANSFORMATION MATRIX S**(+1/2) (I).
C     H       ORIGINAL CORE HAMILTONIAN MATRIX (I).
C     W       ORIGINAL TWO-ELECTRON AO INTEGRALS (I).
C     HTRANS  TRANSFORMED CORE HAMILTONIAN MATRIX (O).
C     WTRANS  TRANSFORMED TWO-ELECTRON AO INTEGRALS (O).
C     NUMAT   NUMBER OF ATOMS (I).
C     LM2     LEADING DIMENSION OF C AND HTRANS (I).
C     LM4     LEADING DIMENSION OF H AND WTRANS (I).
C     LM6     LEADING DIMENSION OF W (I).
C     NFIRST  NUMBER OF FIRST ORBITAL AT GIVEN ATOM (I).
C     NLAST   NUMBER OF LAST  ORBITAL AT GIVEN ATOM (I).
C     NPRINT  PRINTING FLAG (I).
C     NB6     PRINTING UNIT (I).
C     IVBOVR  OPTION FOR TRANSFORMATION (I).
C     *
      USE OAOINT
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION C(LM2,LM2),H(LM4),W(LM6,LM6)
      DIMENSION HTRANS(LM2,LM2),WTRANS(LM4,LM4)
      DIMENSION NFIRST(NUMAT),NLAST(NUMAT)
      CALL OAOTRA (C,H,W,HTRANS,WTRANS,NFIRST,NLAST,NPRINT,NB6,IVBOVR)
      RETURN
      END
C     ******************************************************************
      SUBROUTINE VBSAVE (S,W,LM2,LM4,LM6,ENUCLR,HHF,SSF,WTRANS)
C     *
C     INTERFACE TO XMVB VALENCE-BOND CODE FROM THE WU GROUP (XIAMEN).
C     *
C     NOTATION.
C     S(LM4)           Overlap matrix.
C     W(LM6,LM6)       Original two-electron integrals.
C     ENUCLR           Core repulsion energy.
C     HHF(LM2,LM2)     Core Hamiltonian matrix.
C     SSF(LM2,LM2)     Buffer for square overlap matrix.
C     WTRANS(LM4,LM4)  Transformed two-electron integrals.
C     *
C     Core Hamiltonian matrix HHF for ivbovr.lt.2: original.
C     Core Hamiltonian matrix HHF for ivbovr.ge.2: transformed.
C     *
      USE LIMIT, ONLY: LM1
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./INOPT2/ IN2(300)
     ./NBFILE/ NBF(20)
     ./ORBITS/ NUMB,NORBS,NMOS,NALPHA,NBETA
      DIMENSION SMNDO(LM4),WMNDO(LM6,LM6)
      DIMENSION SSF(LM2,LM2),HHF(LM2,LM2)
      DIMENSION WTRANS(LM4,LM4)
C *** INPUT VARIABLES.
      NMUL   = MAX(1,IN2(66))
      NPRINT = IN2(72)
      ISEVB  = IN2(213)
      IVBOVR = IN2(214)
C *** INITIALIZATION.
      NEL    = NALPHA+NBETA
      NOR    = (NEL+NMUL-1)/2
C *** Print data passed from the MNDO code.
      IF(NPRINT.GE.5) THEN
         NB6 = NBF(6)
         WRITE(NB6,500)
         WRITE(NB6,510) ISEVB,IVBOVR,NEL,NMUL,NUMAT
         WRITE(NB6,520) (NLAST(I)-NFIRST(I)+1,I=1,NUMAT)
         WRITE(NB6,530) ENUCLR
         WRITE(NB6,540) ((SSF(J,I),J=1,I),I=1,NORBS)
         WRITE(NB6,550) ((HHF(J,I),J=1,I),I=1,NORBS)
         IF(IVBOVR.LE.2) THEN
            WRITE(NB6,560) ((WMNDO(J,I),J=1,I),I=1,LM6)
         ELSE
            WRITE(NB6,560) ((WTRANS(J,I),J=1,I),I=1,LM4)
         ENDIF
      ENDIF
C *** Save data passed from the MNDO code on file nb3.
      IF(ISEVB.NE.0) THEN
         NB3 = NBF(3)
         WRITE(NB3,*) ISEVB,IVBOVR,NEL,NMUL,NUMAT
         WRITE(NB3,*) (NLAST(I)-NFIRST(I)+1,I=1,NUMAT)
         WRITE(NB3,*) ENUCLR
         WRITE(NB3,*) ((SSF(J,I),J=1,I),I=1,NORBS)
         WRITE(NB3,*) ((HHF(J,I),J=1,I),I=1,NORBS)
         IF(IVBOVR.LE.2) THEN
            WRITE(NB3,*) ((WMNDO(J,I),J=1,I),I=1,LM6)
         ELSE
            WRITE(NB3,*) ((WTRANS(J,I),J=1,I),I=1,LM4)
         ENDIF
         IF(ISEVB.LT.0) THEN
            NB6 = NBF(6)
            WRITE(NB6,570) NB3
            STOP 'VBSAVE'
         ENDIF
      ENDIF
      RETURN
  500 FORMAT(// 1X,'DEBUG PRINT FROM VB INTERFACE - ROUTINE VBSAVE.')
  510 FORMAT(/  1X,'ISEVB,IVBOVR,NEL,NMUL,NUMAT:',5I5)
  520 FORMAT(/  1X,'NBASIS:',10I5, / (8X,10I5))
  530 FORMAT(/  1X,'ENUCLR:',F20.12)
  540 FORMAT(/  1X,'OVERLAP INTEGRALS:', / (1X,5D17.8))
  550 FORMAT(/  1X,'CORE HAMILTONIAN :', / (1X,5D17.8))
  560 FORMAT(/  1X,'TWO-ELECTRON INTEGRALS :', / (1X,5D17.8))
  570 FORMAT(// 1X,'VB DATA SAVED ON FILE',I2,'. STOP.') 
      END
