      SUBROUTINE FRAGMS (PSA,JPSA,IPSA)
C     *
C     CONTROL ROUTINE FOR FRAGMENT RHF-SCF CALCULATIONS.
C     USED TO GET INITIAL BLOCK-DIAGONAL GUESS OF THE DENSITY MATRIX.
C     USED TO STORE SPARSE INITIAL DENSITY MATRIX IN CSR FORMAT.
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     PSA       SPARSE DENSITY MATRIX IN COMPRESSED ROW FORMAT (O).
C     IPSA      POINTERS FOR SPARSE MATRIX IN CSR FORMAT (O).
C     JPSA      COLUMN INDICES FOR SPARSE MATRIX IN CSR FORMAT (O).
C     *
      USE LIMIT, ONLY: LM1, LMZ
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTERFACE
         SUBROUTINE SPAPRT (A,IIA,JJA,N)
         IMPLICIT NONE
         DOUBLE PRECISION, DIMENSION (:), POINTER ::A
         INTEGER, DIMENSION (:), POINTER :: IIA,JJA
         INTEGER N
         END SUBROUTINE SPAPRT

         SUBROUTINE FILFRG (IPFS,I2FS,P,LM2F,PSA,JPSA,IPSA,NPSA,NORBS)
         IMPLICIT NONE
         DOUBLE PRECISION, POINTER :: PSA(:)
         INTEGER, POINTER :: IPSA(:),JPSA(:)
         INTEGER IPFS,I2FS,LM2F,NPSA,NORBS
         DOUBLE PRECISION P(LM2F,LM2F)
         END SUBROUTINE FILFRG

         SUBROUTINE SRTFRG (PSA,JPSA,IPSA,QSA,JQSA,IQSA,NPSA,
     1                      NUMATS,NORBSS,NFS,NLS,MAP,INVMAP,JPRINT)
         IMPLICIT DOUBLE PRECISION (A-H,O-Z)
         DOUBLE PRECISION, POINTER :: PSA(:)
         INTEGER, POINTER :: IPSA(:),JPSA(:)
         DIMENSION QSA(NPSA),JQSA(NPSA),IQSA(NORBSS+1)
         DIMENSION NFS(NUMATS),NLS(NUMATS)
         DIMENSION MAP(NUMATS),INVMAP(NUMATS)
         END SUBROUTINE SRTFRG
      END INTERFACE
      COMMON
     ./ATOMC / COORD(3,LM1)
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./CONSTF/ A0,AFACT,EV,EVCAL,PI,W1,W2,BIGEXP
     ./DPARM / LORBS(LMZ)
     ./FRGMT1/ NFRAGS(LM1),NCHRGS(LM1)
     ./INOPT2/ IN2(300)
     ./IJWORK/ IIATM(LM1),IIORB(LM1),I2ORB(LM1),NNATM(LM1),NNORB(LM1),
     .         NNCHG(LM1),MAP(LM1),INVMAP(LM1),IWORK(4*LM1)
     ./NBFILE/ NBF(20)
     ./ORBITS/ NUMB,NORBS,NMOS,NALPHA,NBETA
C     AUTOMATIC LOCAL ARRAYS FOR STORING MOLECULAR DATA.
      DIMENSION COORDS(3,NUMAT),NATS(NUMAT),NFS(NUMAT),NLS(NUMAT)
C     ALLOCATABLE WORKING ARRAY FOR FRAGMENT RHF-SCF CALCULATIONS.
      DOUBLE PRECISION, ALLOCATABLE :: ARRAY(:)
C     POINTER ARRAYS FOR DENSITY MATRIX IN COMPRESSED ROW FORMAT.
      DOUBLE PRECISION, POINTER :: PSA(:)
      INTEGER, POINTER :: IPSA(:),JPSA(:)
C     ALLOCATABLE WORKING ARRAY FOR COPY OF DENSITY MATRIX.
      DOUBLE PRECISION, ALLOCATABLE :: QSA(:)
      INTEGER, ALLOCATABLE :: IQSA(:),JQSA(:)
C     *
C *** CHECK WHETHER DENSITY MATRIX IS AVAILABLE.
      IF(IN2(67).LT.0) RETURN
C *** FILE NUMBERS.
      NB6    = NBF(6)
C *** DEFINE LOCAL VARIABLES FOR THIS ROUTINE.
      IOP    = IN2(2)
      JPRINT = IN2(42)
      INPFRG = IN2(59) 
      KHARGE = IN2(65)
      KTRIAL = IN2(67)
      NPRINT = IN2(72)
      NORBSS = NORBS
C *** DEALLOCATE ANY EXISTING ARRAYS FOR DENSITY MATRIX.
      IF(ASSOCIATED(PSA)) THEN
         DEALLOCATE (PSA,IPSA,JPSA,STAT=ie)
            IF (ie.NE.0) CALL XERALL (ie,'FRAGMT','PSA',1,1)
         IF(JPRINT.GE.5) WRITE(NB6,700)
      ENDIF
C
C *** SPECIAL CASE: THERE IS ONLY A SINGLE FRAGMENT.
      IF(INPFRG.LT.0) THEN
C        DYNAMIC MEMORY ALLOCATION FOR SCF TREATMENT.
         CALL DYNFRG (LM5X,LM2F,LM4F,LM6F,LM9F,
     1                LS1F,LS2F,LS3F,LS5F,LS6F,LS7F,LS8F,LS9F,
     2                LG1F,LG2F,LG3F,LG4F,JPRINT)
C        ALLOCATE REQUIRED MEMORY.
         ALLOCATE (ARRAY(LM5X),STAT=IERR)
            IF (IERR.NE.0) CALL XERALL (IERR,'FRAGMT','ARRAY',LM5X,0)
C        PERFORM RHF-SCF CALCULATION.
         CALL SCFFRG (ARRAY,LM5X,NITER,LM2F,LM4F,LM6F,LM9F,
     1                LS1F,LS2F,LS3F,LS5F,LS6F,LS7F,LS8F,LS9F,
     2                LG1F,LG2F,LG3F,LG4F)
C        COPY FRAGMENT DENSITY INTO MOLECULAR DENSITY ARRAY.
C        FILL SPARSE MATRIX IN CSR FORMAT (PSA,JPSA,IPSA).
         NPSA = NORBS*NORBS
         ALLOCATE (PSA(NPSA),JPSA(NPSA),IPSA(NORBS+1),STAT=IERR)
            IF (IERR.NE.0) CALL XERALL (IERR,'FRAGMT','PSA',NPSA,0)
         IPSA(NORBS+1) = NPSA+1
         IF(JPRINT.GE.5) WRITE(NB6,710)
         CALL SQUARE (ARRAY(LS8F),ARRAY(LS8F),NORBS,LM2F,LM4F)
         CALL FILFRG(1,1,ARRAY(LS8F),LM2F,PSA,JPSA,IPSA,NPSA,NORBS)
         IF(JPRINT.GE.5) WRITE(NB6,720) NPSA
C        DEALLOCATE REQUIRED MEMORY.
         DEALLOCATE (ARRAY,STAT=IERR)
            IF (IERR.NE.0) CALL XERALL (IERR,'FRAGMT','ARRAY',LM5X,1)
         GO TO 100
      ENDIF
C
C *** GENERAL CASE: THERE IS MORE THAN ONE FRAGMENT.
C *** SAVE MOLECULAR INPUT DATA.
      NUMATS = NUMAT
      DO 10 I=1,NUMAT
      COORDS(1,I) = COORD(1,I)
      COORDS(2,I) = COORD(2,I)
      COORDS(3,I) = COORD(3,I)
      NATS(I)     = NAT(I)
      NFS(I)      = NFIRST(I)
      NLS(I)      = NLAST(I)
   10 CONTINUE
C *** READ FRAGMENT DATA (NFRAGS,NCHRGS).
C     CALL MOVED TO INPUT SECTION.
C     CALL INFRG (NUMAT,NFRAGS,NCHRGS)
C *** GET NUMBER OF FRAGMENTS (NFRAG) AND TOTAL CHARGE (NCHRG).
C     DETERMINE NUMBER OF ATOMS (NNATM) AND ORBITALS (NNORB) OF
C     EACH FRAGMENT AND THE CORRESPONDING MAXIMA (MAXATS,MAXORB).
      NFRAG  = 1
      DO 15 I=1,NUMAT
      NFRAG  = MAX(NFRAG,NFRAGS(I))
   15 CONTINUE
      DO 20 I=1,NFRAG
      NNATM(I) = 0
      NNORB(I) = 0
      NNCHG(I) = 0
   20 CONTINUE
      NCHRG  = 0
      DO 30 I=1,NUMAT
      NCHRG  = NCHRG+NCHRGS(I)
      IFRAG  = NFRAGS(I)
      NNATM(IFRAG) = NNATM(IFRAG)+1
      NNORB(IFRAG) = NNORB(IFRAG)+LORBS(NAT(I))
      NNCHG(IFRAG) = NNCHG(IFRAG)+NCHRGS(I)
   30 CONTINUE
      MAXATS = 1
      MAXORB = 1
      DO 35 I=1,NFRAG
      MAXATS = MAX(MAXATS,NNATM(I))
      MAXORB = MAX(MAXORB,NNORB(I))
   35 CONTINUE
C *** DETERMINE MAXIMUM NUMBER OF DENSITY MATRIX ELEMENTS (NPSA)
C     AS WELL AS FIRST ATOM (IIATM), FIRST ORBITAL (IIORB), AND
C     FIRST DENSITY MATRIX ELEMENT (I2ORB) OF EACH FRAGMENT.
C     GENERATE FORWARD MAPPING (MAP) SUCH THAT MAP(I) IS THE
C     NUMBER OF THE ATOM ENCOUNTERED DURING THE CONSECUTIVE
C     FRAGMENT CALCULATIONS THAT CORRESPONDS TO THE I-TH ATOM
C     IN THE MOLECULE (ORIGINAL INPUT).
C     GENERATE INVERSE MAPPING (INVMAP) SUCH THAT INVMAP(II)
C     IS THE NUMBER OF THE ATOM IN THE MOLECULE (ORIGINAL INPUT)
C     THAT CORRESPONDS TO THE II-TH ATOM ENCOUNTERED DURING THE 
C     CONSECUTIVE FRAGMENT CALCULATIONS.
      II     = 0
      NATM   = 0
      NORB   = 0
      NPSA   = 0
      DO 45 IFRAG=1,NFRAG
      IIATM(IFRAG) = NATM+1
      IIORB(IFRAG) = NORB+1
      I2ORB(IFRAG) = NPSA+1
      NATM   = NATM+NNATM(IFRAG)
      NORB   = NORB+NNORB(IFRAG)
      NPSA   = NPSA+NNORB(IFRAG)**2
      DO 40 I=1,NUMATS
      IF(IFRAG.EQ.NFRAGS(I)) THEN
         II  = II+1
         INVMAP(II) = I
         MAP(I) = II
      ENDIF
   40 CONTINUE
   45 CONTINUE
C *** DETERMINE MAXIMUM REQUIRED MEMORY FOR FRAGMENT RHF-SCF (LM5MAX).
C     LOOP OVER FRAGMENTS, EXTRACT FRAGMENT DATA VIA DEFFREG, AND GET
C     MEMORY ALLOCATION FROM DYNFRG.
      LPRINT = 0
      LM5MAX = 0
      DO 50 IFRAG=1,NFRAG
      CALL DEFFRG (IFRAG,COORDS,NUMATS,NATS,NFRAGS,NCHRGS,LPRINT)
      CALL DYNFRG (LM5X,LM2F,LM4F,LM6F,LM9F,
     1             LS1F,LS2F,LS3F,LS5F,LS6F,LS7F,LS8F,LS9F,
     2             LG1F,LG2F,LG3F,LG4F,LPRINT)
      LM5MAX = MAX(LM5MAX,LM5X)
   50 CONTINUE
C *** PRINT FRAGMENT DATA.
      IF(JPRINT.GE.2) THEN
         WRITE(NB6,510) NFRAG,MAXATS,MAXORB,NCHRG,NPSA,LM5MAX
      ENDIF
      IF(JPRINT.GE.5) THEN
         WRITE(NB6,520)
         DO 60 I=1,NFRAG
         WRITE(NB6,530) I,IIATM(I),IIORB(I),I2ORB(I),NNATM(I),
     1                  NNORB(I),NNCHG(I)
   60    CONTINUE
         WRITE(NB6,540) (MAP(II),II=1,NUMATS)
         WRITE(NB6,550) (INVMAP(II),II=1,NUMATS)
      ELSE IF(JPRINT.GE.2) THEN
         WRITE(NB6,560)
      ENDIF
C     *
C *** ALLOCATE MAXIMUM REQUIRED MEMORY FOR FRAGMENT RHF-SCF.
      ALLOCATE (ARRAY(LM5MAX),STAT=IERR)
C *** INITIALIZE DENSITY MATRIX OF MOLECULE.
C     ALLOCATE CORRESPONDING ARRAYS.
      ALLOCATE (PSA(NPSA),JPSA(NPSA),IPSA(NORBSS+1),STAT=IERR)
         IF (IERR.NE.0) CALL XERALL (IERR,'FRAGMT','PSA',NPSA,0)
      IPSA(NORBSS+1) = NPSA+1
C     *
C *** LOOP OVER FRAGMENTS AND GENERATE DENSITY MATRIX.
      DO 70 IFRAG=1,NFRAG
C *** EXTRACT FRAGMENT DATA FROM MOLECULAR DATA.
      CALL DEFFRG (IFRAG,COORDS,NUMATS,NATS,NFRAGS,NCHRGS,JPRINT)
C *** DYNAMIC MEMORY ALLOCATION FOR CURRENT FRAGMENT.
      CALL DYNFRG (LM5X,LM2F,LM4F,LM6F,LM9F,
     1             LS1F,LS2F,LS3F,LS5F,LS6F,LS7F,LS8F,LS9F,
     2             LG1F,LG2F,LG3F,LG4F,JPRINT)
C *** FURTHER INITIALIZATION FOR CURRENT FRAGMENT.
C     DEFINITION OF PAIR INDICES.
      CALL DYNINT
C     DEFINITION OF GAUSSIAN BASIS SET.
      IF(IOP.EQ.-5 .OR. IOP.EQ.-6 .OR. IOP.EQ.-8 .OR. IOP.EQ.-9 .OR.
     1   IOP.EQ.-22 .OR. IOP.EQ.-23) THEN
         CALL GTOMIN (0,0,JPRINT)
         IF(IOP.EQ.-5) CALL ECPDEF (JPRINT)
      ENDIF
C *** PERFORM RHF-SCF CALCULATION FOR FRAGMENT.
      IN2(65) = NNCHG(IFRAG)
      CALL SCFFRG (ARRAY,LM5X,NITER,LM2F,LM4F,LM6F,LM9F,
     1             LS1F,LS2F,LS3F,LS5F,LS6F,LS7F,LS8F,LS9F,
     2             LG1F,LG2F,LG3F,LG4F)
      IF(JPRINT.GE.2 .AND. JPRINT.LT.5) WRITE(NB6,570) IFRAG,NITER
C *** COPY FRAGMENT DENSITY INTO MOLECULAR DENSITY ARRAY.
C     USE SQUARE FRAGMENT DENSITY MATRIX FOR CONVENIENCE.
C     FILL SPARSE MATRIX IN CSR FORMAT (PSA,JPSA,IPSA).
      CALL SQUARE (ARRAY(LS8F),ARRAY(LS8F),NORBS,LM2F,LM4F)
      IPFS = IIORB(IFRAG)
      I2FS = I2ORB(IFRAG)
      CALL FILFRG(IPFS,I2FS,ARRAY(LS8F),LM2F,PSA,JPSA,IPSA,NPSA,NORBS)
   70 CONTINUE
C *** DEALLOCATE MEMORY REQUIRED FOR RHF-SCF FRAGMENT CALCULATIONS.
      DEALLOCATE (ARRAY,STAT=IERR)
         IF (IERR.NE.0) CALL XERALL (IERR,'FRAGMT','ARRAY',LM5MAX,1)
C     *
C     REORDER COLUMNS OF SPARSE INITIAL DENSITY MATRIX, IF NECESSARY.
      DO 75 II=2,NUMATS
      IF(MAP(II).LT.MAP(II-1)) GO TO 80
   75 CONTINUE
      GO TO 85
   80 CONTINUE
C     ALLOCATE AUXILIARY ARRAYS FOR SORT OF DENSITY MATRIX.
      ALLOCATE(QSA(NPSA),JQSA(NPSA),IQSA(NORBSS+1),STAT=IERR)
      IQSA(NORBSS+1) = NPSA+1
C     SORT COLUMNS ACCORDING TO MAP.
      CALL SRTFRG (PSA,JPSA,IPSA,QSA,JQSA,IQSA,NPSA,
     1             NUMATS,NORBSS,NFS,NLS,MAP,INVMAP,JPRINT)
C     COPY SORTED DATA TO ORIGINAL ARRAYS.
      PSA(1:NPSA)  = QSA(1:NPSA)
      JPSA(1:NPSA) = JQSA(1:NPSA) 
      IPSA(1:NORBSS+1) = IQSA(1:NORBSS+1)
      DEALLOCATE (QSA,JQSA,IQSA,STAT=IERR)
         IF (IERR.NE.0) CALL XERALL (IERR,'FRAGMT','ARRAY',NPSA,1)
   85 CONTINUE
C     *
C *** REDEFINE MOLECULAR INPUT DATA.
      IF(JPRINT.GE.2) THEN
         WRITE(NB6,620)
      ENDIF
      NUMAT  = NUMATS
      DO 90 I=1,NUMAT
      COORD(1,I) = COORDS(1,I)
      COORD(2,I) = COORDS(2,I)
      COORD(3,I) = COORDS(3,I)
      NAT(I)     = NATS(I)
      NFIRST(I)  = NFS(I)
   90 CONTINUE
C     REDEFINE MOLECULAR CONTROL VARIABLES.
      IN2(65) = KHARGE
      CALL INPUTS
C     DEFINITION OF PAIR INDICES.
      CALL DYNINT
C     DEFINITION OF GAUSSIAN BASIS SET.
      IF(IOP.EQ.-5 .OR. IOP.EQ.-6 .OR. IOP.EQ.-8 .OR. IOP.EQ.-9 .OR.
     1   IOP.EQ.-22 .OR. IOP.EQ.-23) THEN
         CALL GTOMIN (0,0,JPRINT)
         IF(IOP.EQ.-5) CALL ECPDEF (JPRINT)
      ENDIF
C     *
C *** PRINT INITIAL FRAGMENT-BASED DENSITY MATRIX.
  100 CONTINUE
      IF(JPRINT.GE.5 .OR. NPRINT.GE.5) THEN
         IF(INPFRG.LT.0) WRITE(NB6,500) NITER
         WRITE(NB6,600)
         CALL SPAPRT (PSA,IPSA,JPSA,NORBSS)
      ENDIF
C *** RESET KTRIAL.
      IN2(67) = -1
      RETURN
  500 FORMAT(///1X,'GENERATION OF AN INITIAL DENSITY MATRIX.',
     1       /  1X,'ONE SINGLE FRAGMENT, NUMBER OF SCF ITERATIONS',I6)
  510 FORMAT(///1X,'RHF CALCULATIONS FOR FRAGMENTS TO GENERATE INITIAL',
     1          1X,'BLOCK-DIAGONAL DENSITY MATRIX.',
     2       // 1X,'TOTAL NUMBER OF FRAGMENTS              ',I10,
     3       /  1X,'MAXIMUM NUMBER OF ATOMS PER FRAGMENT   ',I10,
     4       /  1X,'MAXIMUM NUMBER OF ORBITALS PER FRAGMENT',I10,
     5       /  1X,'TOTAL CHARGE OF FULL SYSTEM            ',I10,
     6       /  1X,'TOTAL NUMBER OF DENSITY MATRIX ELEMENTS',I10,
     7       /  1X,'MAXIMUM MEMORY REQUIRED FOR RHF        ',I10)
  520 FORMAT(///1X,'TECHNICAL INFORMATION ON FRAGMENTS.',
     1       // 5X,'I   IIATM   IIORB   I2ORB   NNATM   NNORB   NNCHG'/)
  530 FORMAT(   1X,I5,6I8)
  540 FORMAT(///1X,'THE ORIGINAL ATOMS APPEAR DURING THE CONSECUTIVE',
     1          1X,'FRAGMENT CALCULATIONS',
     2       /  1X,'IN THE FOLLOWING ORDER (MAP).',
     3       //(1X,10I5))
  550 FORMAT(///1X,'THE ORDER OF ATOMS IN THE CONSECUTIVE FRAGMENT',
     1          1X,'CALCULATIONS IS GIVEN BY',
     2       /  1X,'THE FOLLOWING ORIGINAL ATOM NUMBERS (INVMAP).',
     3       //(1X,10I5))
  560 FORMAT(/  1X)
  570 FORMAT(   1X,'FRAGMENT',I4,' DONE, NUMBER OF SCF ITERATIONS',I6)
  600 FORMAT(///1X,'INITIAL DENSITY MATRIX',
     1          1X,'IN COMPRESSED SPARSE ROW FORMAT'/)
  620 FORMAT(///1X,'RHF CALCULATIONS FOR FRAGMENTS HAVE BEEN FINISHED.',
     1       /  1X,'REDEFINITION OF CONTROL VARIABLES FOR MOLECULE.')
  700 FORMAT(/  1X,'FRAGMT: SPARSE DENSITY MATRIX DEALLOCATED (PSA).')
  710 FORMAT(/  1X,'FRAGMT: SPARSE DENSITY MATRIX ALLOCATED (PSA).')
  720 FORMAT(   1X,'FRAGMT: SPARSE DENSITY MATRIX FILLED. NPSA =',I6)
      END
