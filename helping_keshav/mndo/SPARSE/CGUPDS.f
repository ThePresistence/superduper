      SUBROUTINE CGUPDS (Q8,JQ8,IQ8,HS,JHS,IHS,GS,JGS,IGS,N,FILTALL,
     +                   CUTM,NITER,ICG,NPRINT)
C     *
C *** CONJUGATE GRADIENT UPDATE OF SEARCH DIRECTION (H).
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     HS(*)     OLD/NEW SEARCH DIRECTION MATRIX (I,O).
C     Q8(*)     GRADIENT FOR NEW DENSITY MATRIX (I).
C     GS(*)     GRADIENT FOR OLD DENSITY MATRIX (I).
C     IX(N+1)   POINTERS FOR SPARSE MATRICES IN CSR FORMAT (S).
C               X=GS,HS,Q8.
C     JX(*)     COLUMN INDICES FOR SPARSE MATRICES IN CSR FORMAT (S).
C               X=GS,HS,Q8.
C     N         NUMBER OF ORBITALS (I).
C     FILTALL   FLAG FOR REMOVING SMALL ELEMENTS IN SUM A+B (I).
C     CUTM      CUTOFF FOR SMALL MATRIX ELEMENTS (I).
C     NITER     NUMBER OF CURRENT SCF ITERATION (I).
C     ICG       NUMBER OF CURRENT CG CYCLE (I).
C     NPRINT    PRINTING FLAG (I).
C     *
      USE module3
      IMPLICIT NONE
      LOGICAL :: FILTALL
      COMMON
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./INOPT2/ IN2(300)
     ./NBFILE/ NBF(20)
      INTEGER :: ie,N4,N,MCGUPD,NPRINT,ICG,NB6,NBF,IN2,NITER,I
      DOUBLE PRECISION :: GAMMA,DOTHQ,DOTHG,DOTQQ,DOTGQ,DOTGG,CUTM,
     +                    ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
      INTEGER, ALLOCATABLE :: IW(:)
      DOUBLE PRECISION, DIMENSION (:), POINTER :: Q8,GS,HS,WR
      INTEGER, DIMENSION (:), POINTER :: IQ8,JQ8,JGS,IGS,JHS,IHS
C
C *** INITIALIZATION.
      MCGUPD = IN2(178)
      ALLOCATE (WR(N),STAT=ie)
         IF(ie.NE.0) CALL XERALL (ie,'CGDMSS','WR',N,0)
C *** EVALUATE DOT PRODUCTS.
      DOTGG = DOT_PRODUCT(GS,GS)
      CALL TRACENP (N,Q8,JQ8,IQ8,GS,JGS,IGS,WR,DOTGQ)
      DOTQQ = DOT_PRODUCT(Q8,Q8)
C *** POLAK-RIBIERE FORMULA FOR MCGUPD.LE.0 (DEFAULT).
C     FLETCHER-REEVES FORMULA FOR MCGUPD.EQ.1.
C     HESTENES-STIEFEL FORMULA OTHERWISE.
C     HESTENES-STIEFEL FORMULA NOT IMPLEMENTED ELSEWHERE (CGUPD).
      IF(MCGUPD.LE.0) THEN
         GAMMA = (DOTQQ-DOTGQ)/DOTGG
      ELSE IF(MCGUPD.EQ.1) THEN
         GAMMA = DOTQQ/DOTGG
      ELSE
         CALL TRACENP (N,Q8,JQ8,IQ8,HS,JHS,IHS,WR,DOTHQ)
         CALL TRACENP (N,GS,JGS,IGS,HS,JHS,IHS,WR,DOTHG)
         GAMMA = (DOTQQ-DOTGQ)/(DOTHQ-DOTHG)
      ENDIF
      DEALLOCATE (WR,STAT=ie)
         IF(ie.NE.0) CALL XERALL (ie,'CGDMSS','WR',N,1)
      NULLIFY (WR)
C
C *** COPY NEW GRADIENT (Q8->G).
      N4=IQ8(N+1)-1
      DEALLOCATE (GS,JGS,STAT=ie)
         IF(ie.NE.0) CALL XERALL (ie,'CGDMSS','GS',N4,1)
      NULLIFY (GS,JGS)
      ALLOCATE (GS(N4),JGS(N4),STAT=ie)
         IF(ie.NE.0) CALL XERALL (ie,'CGDMSS','GS',N4,0)
      CALL copmatp (N,Q8,JQ8,IQ8,GS,JGS,IGS,1)
      ALLOCATE (IW(N),STAT=ie)
         IF(ie.NE.0) CALL XERALL (ie,'CGDMSS','IW',N,0)
C
C *** UPDATE SEARCH DIRECTION (H).
C
C     SCALE PREVIOUS SEARCH DIRECTION (Q8=GAMMA*HS).
      DEALLOCATE (Q8,JQ8,STAT=ie)
         IF(ie.NE.0) CALL XERALL (ie,'CGDMSS','Q8',N4,1)
      NULLIFY (Q8,JQ8)
      N4=IHS(N+1)-1
      ALLOCATE (Q8(N4),JQ8(N4),STAT=ie)
         IF(ie.NE.0) CALL XERALL (ie,'CGDMSS','Q8',N4,0)
      CALL copmatp (N,HS,JHS,IHS,Q8,JQ8,IQ8,1)
      DO 10 I=1,N4
      Q8(I)  = GAMMA*Q8(I)
   10 CONTINUE
C
C     SYMBOLIC ADDITION TO GET NUMBER OF ELEMENTS (N4).
      CALL aplbdgp (N,JQ8,IQ8,JGS,IGS,N4,IW)
      DEALLOCATE (HS,JHS,STAT=ie)
         IF(ie.NE.0) CALL XERALL (ie,'CGDMSS','HS',N4,1)
      NULLIFY (HS,JHS)
      ALLOCATE (HS(N4),JHS(N4),STAT=ie)
         IF(ie.NE.0) CALL XERALL (ie,'CGDMSS','Q8',N4,0)
C     ACTUAL UPDATE (HS=GAMMA*HS+GS).
      CALL aplbp (N,Q8,JQ8,IQ8,GS,JGS,IGS,HS,JHS,IHS,N4,IW,ie)
         IF(ie.NE.0) CALL XERSPA (ie,'aplb','CGDMSS',2)
      DEALLOCATE (IW,STAT=ie)
         IF(ie.NE.0) CALL XERALL (ie,'CGDMSS','IW',N4,1)
C
C     REMOVE SMALL ELEMENTS.
      IF(FILTALL) THEN
         CALL filterp (N,1,CUTM,HS,JHS,IHS,HS,JHS,IHS,N4,ie)
           IF(ie.ne.0) CALL XERSPA (ie,'filter','CGDMSS',1)
      ENDIF
      DEALLOCATE (Q8,JQ8,IQ8,STAT=ie)
         IF(ie.NE.0) CALL XERALL (ie,'CGDMSS','Q8',N4,1)
      NULLIFY (Q8,JQ8,IQ8)
C
C *** DEBUG PRINT.
      IF(NPRINT.GE.7) THEN
         NB6 = NBF(6)
         WRITE(NB6,590) NITER,ICG,DOTGG,DOTGQ,DOTQQ,GAMMA
         IF(NPRINT.GE.9) THEN
            WRITE(NB6,600) NITER,ICG
            CALL SPAPRT (HS,IHS,JHS,N)
         ENDIF
      ENDIF
      RETURN
  590 FORMAT(/  1X,'CGDMS : NITER,ICG,DOTGG,DOTGQ,DOTQQ,GAMMA',
     1       /  1X,'CGDMS : ',I5,I3,3X,4G20.10)
  600 FORMAT(// 1X,'CGDMS : UPDATED SEARCH DIRECTION (H).',
     1       /  1X,'CGDMS : NITER =',I3,'   ICG =',I3/)
      END
