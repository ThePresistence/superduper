      SUBROUTINE DMSCOFS (FS,IFS,JFS,HS,IHS,JHS,GS,IGS,JGS,PS,IPS,
     +                    JPS,N,NPRINT,B,C,D,FILT,CUTM)
C     *
C     COEFFICIENTS FROM ANALYTIC DMS LINE SEARCH.
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     FS(*)     FOCK MATRIX (I).
C     GS(*)     GRADIENT MATRIX (I).
C     HS(*)     SEARCH DIRECTION MATRIX (I).
C     PS(*)     DENSITY MATRIX (I).
C     Q1(*)     SCRATCH PRODUCT MATRIX (S)
C     Q2(*)     SCRATCH PRODUCT MATRIX (S), SUM HP+(HP)t (O).
C     IX(N+1)   POINTERS FOR SPARSE MATRICES IN CSR FORMAT (S).
C               X=FS,GS,HS,PS,Q1,Q2.
C     JX(*)     COLUMN INDICES FOR SPARSE MATRICES IN CSR FORMAT (S).
C               X=FS,GS,HS,PS,Q1,Q2.
C     N         NUMBER OF ORBITALS (I).
C     NPRINT    PRINTING FLAG (I).
C     B         FIRST  COEFFICIENT (O).
C     C         SECOND COEFFICIENT (O).
C     D         THIRD  COEFFICIENT (O).
C     FILT      FLAG FOR REMOVING SMALL ELEMENTS IN PRODUCT A*B (I).
C     CUTM      CUTOFF FOR SMALL MATRIX ELEMENTS (I).
C     *
C     TRACENP(N,A,..,B,..) COMPUTES THE TRACE OF THE A(transpose)*B
C     WHICH IS EQUIVALENT TO THE TRACE OF A*B FOR A SYMMETRIC MATRIX A.
C     SPECIAL CASE: A=H*P (PRODUCT OF SYMMETRIC MATRICES H AND P),
C     (H*P)transpose=PH, TRACENP(N,A,..,B,..)=Tr(PHB).
C     *
      USE module3
      IMPLICIT NONE
C
      INTEGER :: N2,N4,N,ie,NBF,NB6,NPRINT,I,NCOL
      DOUBLE PRECISION :: C,C1,C2,C3,TWO,THREE,FOUR,B,D,CUTM
C
      INTEGER, DIMENSION (:), POINTER :: IFS,JFS,IHS,JHS,IGS,JGS,IPS,
     +                                   JPS,IQ1,JQ1,IQ2,JQ2
      DOUBLE PRECISION, DIMENSION (:), POINTER :: FS,HS,GS,PS,Q1,Q2,WR
      INTEGER, ALLOCATABLE :: IW(:)
C
      PARAMETER (TWO=2.0D0)
      PARAMETER (THREE=3.0D0)
      PARAMETER (FOUR=4.0D0)
      LOGICAL :: FILT
C     DOUBLE PRECISION :: ZTIME,TT1A,TT1B
      COMMON /NBFILE/ NBF(20)
C     COMMON /ZTIMES/ ZTIME(20)
C
C *** ALLOCATE AUXILIARY ARRAYS.
      ALLOCATE (WR(N),IW(N),STAT=ie)
         IF(ie.NE.0) CALL XERALL (ie,'DMSCOFS','WR',N,0)
C
C *** COEFFICIENT B = Tr(GH).
      CALL TRACENP (N,GS,JGS,IGS,HS,JHS,IHS,WR,B)
C
C *** COMPUTE PRODUCT Q1=HF BY MATRIX MULTIPLICATION.
      CALL amubdgp (N,JHS,IHS,JFS,IFS,N4,IW)
      ALLOCATE (Q1(N4),JQ1(N4),IQ1(N+1),STAT=ie)
         IF(ie.NE.0) CALL XERALL (ie,'DMSCOFS','Q1',N4,0)
C     CALL CPUSEC (TT1A)
      CALL amubp (N,HS,JHS,IHS,FS,JFS,IFS,Q1,JQ1,IQ1,N4,IW,ie)
C     CALL CPUSEC (TT1B)
C     ZTIME(5) = ZTIME(5) + TT1B - TT1A
C     WRITE(6,*) ' DMSCOFS: HF ',IHS(N+1)-1,IFS(N+1)-1,N4,TT1B-TT1A
         IF(ie.NE.0) CALL XERSPA (ie,'amub','DMSCOFS',1)
      IF(FILT) THEN
         CALL filterp (N,1,CUTM,Q1,JQ1,IQ1,Q1,JQ1,IQ1,N4,ie)
           IF (ie.ne.0) CALL XERSPA (ie,'filter','DMSCOFS',1)
      ENDIF
C
C *** COEFFICIENT C = 3 Tr(HHF) - 2 Tr(PHHF) - 2 Tr(HPHF) - 2 Tr(HHPF)
C     COEFFICIENT C = 3 Tr(HHF) - 4 Tr(PHHF) - 2 Tr(HPHF)
C     VALID DUE TO THE EQUALITY:    Tr(PHHF) = Tr(HHPF)
C
C *** COEFFICIENT C1 = 3*Tr(HHF).
      CALL TRACENP (N,HS,JHS,IHS,Q1,JQ1,IQ1,WR,C1)
      C1  = THREE*C1
C
C *** COMPUTE PRODUCT Q2=HP BY MATRIX MULTIPLICATION.
      CALL amubdgp (N,JHS,IHS,JPS,IPS,N2,IW)
      ALLOCATE (Q2(N2),JQ2(N2),IQ2(N+1),STAT=ie)
         IF(ie.NE.0) CALL XERALL (ie,'DMSCOFS','Q2',N2,0)
C     CALL CPUSEC (TT1A)
      CALL amubp (N,HS,JHS,IHS,PS,JPS,IPS,Q2,JQ2,IQ2,N2,IW,ie)
C     CALL CPUSEC (TT1B)
C     ZTIME(6) = ZTIME(6) + TT1B - TT1A
C     WRITE(6,*) ' DMSCOFS: HP ',IHS(N+1)-1,IPS(N+1)-1,N2,TT1B-TT1A
         IF(ie.NE.0) CALL XERSPA (ie,'amub','DMSCOFS',2)
      IF(FILT) THEN
         CALL filterp (N,1,CUTM,Q2,JQ2,IQ2,Q2,JQ2,IQ2,N2,ie)
           IF (ie.ne.0) CALL XERSPA (ie,'filter','DMSCOFS',1)
      ENDIF
C
C *** COEFFICIENT C2 = -4 Tr(PHHF) = -4 Tr[(HP)transpose(HF)]
C     PH = (HP)transpose IS VALID SINCE H AND P ARE SYMMETRIC.
      CALL TRACENP (N,Q2,JQ2,IQ2,Q1,JQ1,IQ1,WR,C2)
      C2  = -FOUR*C2
C
C *** REALLOCATE AUXILIARY ARRAY FOR USE IN transpp.
      DEALLOCATE (IW,STAT=ie)
         IF(ie.NE.0) CALL XERALL (ie,'DMSCOFS','IW',N,1)
      N4 = IQ2(N+1)-1
      N4 = max(N4,N)
      ALLOCATE (IW(N4),STAT=ie)
         IF(ie.NE.0) CALL XERALL (ie,'DMSCOFS','IW',N4,0)
C
C *** COMPUTE TRANSPOSE Q2 = [Q2]transpose.
C     COMPUTE (HP)transpose IN OUR CASE.
C     NCOL = N SINCE transpp MAY MODIFY SECOND ARGUMENT.
      NCOL = N
      CALL transpp (N,NCOL,Q2,JQ2,IQ2,IW,ie)
C
C *** COEFFICIENT C3 = -2 Tr(HPHF).
      CALL TRACENP (N,Q2,JQ2,IQ2,Q1,JQ1,IQ1,WR,C3)
      C3  = -TWO*C3
C
C *** COEFFICIENT C = 3*Tr(HHF)-2*Tr(HPHF)-2*Tr(HHPF)-2*Tr(PHHF).
      C   = C1+C2+C3
C
C *** COMPUTE PRODUCT Q2=HH BY MATRIX MULTIPLICATION.
      CALL amubdgp (N,JHS,IHS,JHS,IHS,N4,IW)
      DEALLOCATE (Q2,JQ2,STAT=ie)
         IF(ie.NE.0) CALL XERALL (ie,'DMSCOFS','Q2',N4,1)
      NULLIFY (Q2,JQ2)
      ALLOCATE (Q2(N4),JQ2(N4),STAT=ie)
         IF(ie.NE.0) CALL XERALL (ie,'DMSCOFS','Q2',N4,0)
C     CALL CPUSEC (TT1A)
      CALL amubp (N,HS,JHS,IHS,HS,JHS,IHS,Q2,JQ2,IQ2,N4,IW,ie)
C     CALL CPUSEC (TT1B)
C     ZTIME(7) = ZTIME(7) + TT1B - TT1A
C     WRITE(6,*) ' DMSCOFS: HH ',IHS(N+1)-1,IHS(N+1)-1,N4,TT1B-TT1A
         IF(ie.NE.0) CALL XERSPA (ie,'amub','DMSCOFS',1)
      IF(FILT) THEN
         CALL filterp (N,1,CUTM,Q2,JQ2,IQ2,Q2,JQ2,IQ2,N4,ie)
           IF (ie.ne.0) CALL XERSPA (ie,'filter','DMSCOFS',1)
      ENDIF
C
C *** COEFFICIENT D = -2*Tr(HHHF).
      CALL TRACENP (N,Q2,JQ2,IQ2,Q1,JQ1,IQ1,WR,D)
      D  = -TWO*D
C
C *** DEBUG PRINT.
      IF(NPRINT.GE.7) THEN
         NB6 = NBF(6)
         WRITE (NB6,500) B,C,D
         WRITE (NB6,510) C1,C2,C3
         IF(NPRINT.GE.9) THEN
            WRITE(NB6,520) C1/THREE,-C2/FOUR,-C3/TWO
            WRITE (NB6,530)
            CALL SPAPRT (GS,IGS,JGS,N)
            WRITE (NB6,540)
            CALL SPAPRT (HS,IHS,JHS,N)
            WRITE (NB6,550)
            CALL SPAPRT (PS,IPS,JPS,N)
            WRITE (NB6,560)
            CALL SPAPRT (FS,IFS,JFS,N)
         ENDIF
         WRITE(NB6,600) IHS(N+1)-1,IPS(N+1)-1,IFS(N+1)-1
         WRITE(NB6,610) IQ1(N+1)-1,N2,IQ2(N+1)-1
      ENDIF
C
      DEALLOCATE (IW,WR,Q1,JQ1,IQ1,Q2,JQ2,IQ2,STAT=ie)
         IF(ie.NE.0) CALL XERALL (ie,'DMSCOFS','IW',N4,1)
      NULLIFY(WR,Q1,JQ1,IQ1,Q2,JQ2,IQ2)
C
      RETURN
C
  500 FORMAT(/  1X,'DMSCOF: COEFFICIENT B  =',G20.10,
     1       /  1X,'DMSCOF: COEFFICIENT C  =',G20.10,
     2       /  1X,'DMSCOF: COEFFICIENT D  =',G20.10)
  510 FORMAT(   1X,'DMSCOF: COEFFICIENT C1 =',G20.10,
     1       /  1X,'DMSCOF: COEFFICIENT C2 =',G20.10,
     2       /  1X,'DMSCOF: COEFFICIENT C3 =',G20.10)
  520 FORMAT(   1X,'DMSCOF: Trace(HHF)     =',G20.10,
     1       /  1X,'DMSCOF: Trace(PHHF)    =',G20.10,
     2       /  1X,'DMSCOF: Trace(HPHF)    =',G20.10,
     3       /  1X,'DMSCOF: Trace(HHPF)    = Trace(PHHF)')
  530 FORMAT(///1X,'DMSCOF: GRADIENT MATRIX G.'/)
  540 FORMAT(///1X,'DMSCOF: SEARCH DIRECTION MATRIX H.'/)
  550 FORMAT(///1X,'DMSCOF: DENSITY MATRIX P.'/)
  560 FORMAT(///1X,'DMSCOF: FOCK MATRIX F.'/)
C 570 FORMAT(///1X,'DMSCOF: PRODUCT HF.'/)
C 580 FORMAT(///1X,'DMSCOF: PRODUCT HH.'/)
C 590 FORMAT(///1X,'DMSCOF: PRODUCT HP.'/)
  600 FORMAT(/  1X,'DMSCOF: NONZERO ELEMENTS IN H , P, F:',3I10)
  610 FORMAT(/  1X,'DMSCOF: NONZERO ELEMENTS IN HF,HP,HH:',3I10)
      END
