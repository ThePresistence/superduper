      SUBROUTINE PRTSCFS (FSA,PSA,IFSA,IPSA,JFSA,JPSA,N)
C     *
C     PRINT SCF RESULTS AFTER CALCULATION WITH SPARSE MATRICES.
C     *
C     UHF METHOD NOT YET IMPLEMENTED WITH SPARSE MATRICES.
C     UHF CODE THEREFORE GIVEN ONLY ON COMMENT LINES.
C     *
      USE module3
C     IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      IMPLICIT NONE
C
C     LOGICAL UHF
      CHARACTER*80 KTITLE,KOMENT
      COMMON
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./CONSTF/ A0,AFACT,EV,EVCAL,PI,W1,W2,BIGEXP
     ./ENERGT/ EE,ENUCLR,EAT,ATHEAT
     ./FLAG1 / KTITLE,KOMENT
     ./INOPT2/ IN2(300)
     ./MMCOM1/ EMM
     ./MMDP  / EMMDP
     ./CHCORR/ EHCORR
     ./NBFILE/ NBF(20)
     ./ORBITS/ NUMB,NORBS,NMOS,NALPHA,NBETA
     ./SCFPRT/ EBIND,ENERGY,EIP,EIP2,SZ,S2,ITSAVE
C    ./UHF   / UHF
C
      INTEGER :: N,NALPHA,NBETA,ITSAVE,NPRINT,NORBS,N4,ie,NB6,
     +           NNHCO,IN2,IATERG,IMMDP,IHCORR,NUMB,NMOS,NBF
      DOUBLE PRECISION :: EBIND,EETOT,EAT,EE,ENUCLR,EMMDP,EHCORR,
     +                    ZERO,ONE,THREE,FOUR,PT25,EMM,PI,W2,ENERGY,
     +                    ATHEAT,PT5,TWO,SZ,S2,EVCAL,W1,A0,AFACT,EV,
     +                    EIP,EIP2,BIGEXP,DDOTS2
      INTEGER, ALLOCATABLE :: IW(:)
      DOUBLE PRECISION, DIMENSION (:), POINTER :: FSA,PSA,Q1
      INTEGER, DIMENSION (:), POINTER :: JFSA,IFSA,JPSA,IPSA,JQ1,IQ1
C
C *** FILE NUMBERS.
      NB6    = NBF(6)
C *** INPUT OPTIONS.
      NNHCO  = IN2(20)
      IMMDP  = IN2(30)
      NPRINT = IN2(72)
      IHCORR = IN2(226)
      IATERG    = IN2(119)
C *** PRINT TITLE.
      IF(NPRINT.GT.-5) THEN
         WRITE(NB6,400) KOMENT,KTITLE
      ENDIF
C *** PRINT CORE HAMILTONIAN AND FOCK MATRIX.
      IF(NPRINT.GE.2) THEN
C        IF(UHF) THEN
C           WRITE(NB6,520)
C        ELSE
            WRITE(NB6,510)
C        ENDIF
         CALL SPAPRT (FSA,IFSA,JFSA,N)
C        IF(UHF) THEN
C           WRITE(NB6,530)
C           CALL SPAPRT (FSB,IFSB,JFSB,N)
C        ENDIF
      ENDIF
C *** PRINT DENSITY MATRIX.
      IF(NPRINT.GE.1) THEN
         WRITE(NB6,540)
C        IF(UHF) THEN
C
C           ALLOCATE (IW(N),IQ1(N+1),STAT=ie)
C              IF(ie.NE.0) CALL XERALL (ie,'PRTSCFS','IW',N,0)
C           CALL aplbdgp (N,JPSA,IPSA,JPSB,IPSB,N4,IW)
C           ALLOCATE (Q1(N4),JQ1(N4),STAT=ie)
C              IF(ie.NE.0) CALL XERALL (ie,'PRTSCFS','Q1',N4,0)
C           CALL aplbp (N,PSA,JPSA,IPSA,PSB,JPSB,IPSB,Q1,JQ1,IQ1,N4,
C    +                  IW,ie)
C              IF(IE.NE.0) CALL XERSPA (IE,'aplb','PRTSCFS',2)
C           CALL SPAPRT (Q1,IQ1,JQ1,N)
C
C           N2=IPSB(N+1)-1
C           PSB(1:N2)=-PSB(1:N2)
C           CALL aplbp (N,PSA,JPSA,IPSA,PSB,JPSB,IPSB,Q1,JQ1,IQ1,N4,
C    +                  IW,ie)
C              IF(IE.NE.0) CALL XERSPA (IE,'aplb','PRTSCFS',3)
C           PSB(1:N2)=-PSB(1:N2)
C           DEALLOCATE (IW,STAT=ie)
C              IF(ie.NE.0) CALL XERALL (ie,'PRTSCFS','IW',N,1)
C           WRITE(NB6,550)
C           CALL SPAPRT (Q1,IQ1,JQ1,N)
C           DEALLOCATE (Q1,JQ1,IQ1,STAT=ie)
C              IF(ie.NE.0) CALL XERALL (ie,'PRTSCFS','Q1',N4,1)
C        ELSE
            N4=IPSA(N+1)-1
            PSA(1:N4)=TWO*PSA(1:N4)
            CALL SPAPRT (PSA,IPSA,JPSA,N)
            PSA(1:N4)=PT5*PSA(1:N4)
C        ENDIF
      ENDIF
C *** SPIN EXPECTATION VALUES FOR UHF.
C     IF(UHF) THEN
C        S2  = DDOTS2 (PSA,PSB,IPSA,IPSB,JPSA,JPSB,N,0,0)
C        SZ  = (NALPHA-NBETA)*PT5
C        S2  = SZ*SZ+(NALPHA+NBETA)*PT5-S2
C     ENDIF
C *** ENERGIES.
      EETOT  = EE+ENUCLR
      EBIND  = EETOT-EAT
      IF(IATERG.EQ.1) THEN
         ENERGY = ATHEAT+EVCAL*EBIND
      ELSEIF(IATERG.EQ.-1) THEN
         ENERGY = EETOT
      ENDIF
      ENERGY = ENERGY+EMM+EMMDP
C *** PRINT THE VALUES OF THESE PROPERTIES.
      IF(NPRINT.GT.-5) THEN
C        IF(UHF) THEN
C           WRITE(NB6,560) SZ,S2
C        ENDIF
         EETOT  = EE+ENUCLR
         IF(IATERG.EQ.1) THEN
            WRITE(NB6,570) ENERGY
         ELSEIF(IATERG.EQ.-1) THEN
            WRITE(NB6,571) ENERGY
         ENDIF
         WRITE(NB6,575) EBIND
         WRITE(NB6,580) EETOT
         WRITE(NB6,590) EE
         WRITE(NB6,600) ENUCLR
         IF(NNHCO.GT.0) WRITE(NB6,610) EMM
         IF(IMMDP.NE.-1) THEN
            WRITE(NB6,615) EMMDP
            WRITE(NB6,616) EETOT+EMMDP/EVCAL
         ENDIF
         IF(IHCORR.NE.-1) THEN
            WRITE(NB6,617) EHCORR
            WRITE(NB6,618) EETOT+EMMDP/EVCAL+EHCORR/EVCAL
         ENDIF
         WRITE(NB6,670) ITSAVE
      ENDIF
      RETURN
  400 FORMAT(///5X,A,/5X,A)
  510 FORMAT(///5X,'FOCK MATRIX.'/)
C 520 FORMAT(///5X,'FOCK MATRIX FOR ALPHA SPIN.'/)
C 530 FORMAT(///5X,'FOCK MATRIX FOR BETA SPIN.'/)
  540 FORMAT(///5X,'DENSITY MATRIX.'/)
C 550 FORMAT(///5X,'SPIN DENSITY MATRIX.'/)
C 560 FORMAT(///5X,'EXPECTATION VALUE FOR SZ  ',F10.5,
C    1       /  5X,'EXPECTATION VALUE FOR S**2',F10.5)
  570 FORMAT(///5X,'SCF HEAT OF FORMATION',F15.5,' KCAL/MOL')
  571 FORMAT(///5X,'TOTAL ENERGY         ',F15.5,' KCAL/MOL')
  575 FORMAT(   5X,'SCF BINDING ENERGY   ',F15.5,' EV')
  580 FORMAT(   5X,'SCF TOTAL ENERGY     ',F15.5,' EV')
  590 FORMAT(   5X,'ELECTRONIC ENERGY    ',F15.5,' EV')
  600 FORMAT(   5X,'NUCLEAR ENERGY       ',F15.5,' EV')
  610 FORMAT(   5X,'MM CORRECTION        ',F15.5,' KCAL/MOL')
  615 FORMAT(   5X,'DISPERSION ENERGY    ',F15.5,' KCAL/MOL')
  616 FORMAT(   5X,'E(EETOT)+E(DISP)     ',F15.5,' EV')
  617 FORMAT(   5X,'H CORRECTION ENERGY  ',F15.5,' KCAL/MOL')
  618 FORMAT(   5X,'E(EETOT)+E(DISP+HCOR)',F15.5,' EV')
  670 FORMAT(   5X,'SCF CYCLES           ',I9)
      END
