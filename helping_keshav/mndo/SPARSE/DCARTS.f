      SUBROUTINE DCARTS (PA,PPA,PSA,IPSA,JPSA,NORBS,LM6,LM4L)
C     *
C     FAST GRADIENTS IN CARTESIAN COORDINATES BY FINITE DIFFERENCE.
C     VERSION WITH SPARSE DENSITY MATRIX.
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     PA(LM4L)  LOCAL RHF DENSITY MATRIX (S).
C     PPA(LM6)  RHF ONE-CENTER DENSITY MATRIX (I).
C     PSA(*)    SPARSE RHF DENSITY MATRIX (I).
C     IPSA(*)   POINTERS FOR SPARSE MATRICES IN CSR FORMAT (I).
C     JPSA(*)   COLUMN INDICES FOR SPARSE MATRICES IN CSR FORMAT (I).
C     *
C     DHCORE IS NOT TREATED AS AN EXTERNAL REFERENCE IN THIS ROUTINE.
C     DHCORE COMPUTES THE TWO-CENTER INTEGRALS REQUIRED FOR THE
C     GRADIENT CALCULATION.
C     *
      USE LIMIT, ONLY: LM1, LM1M
C     IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      IMPLICIT NONE
      INTERFACE
         SUBROUTINE HFOCKS (F,FS,IFS,JFS,NFS,N,IA,IB,MODE,CUTF)
         IMPLICIT NONE
         INTEGER :: N,IA,IB,NFS,MODE
         DOUBLE PRECISION :: CUTF,F(N,*)
         DOUBLE PRECISION, DIMENSION (:), POINTER :: FS
         INTEGER, DIMENSION (:), POINTER :: IFS,JFS
         END SUBROUTINE HFOCKS
C
         SUBROUTINE SPAPRT (A,IIA,JJA,N)
         IMPLICIT NONE
         DOUBLE PRECISION, DIMENSION (:), POINTER ::A
         INTEGER, DIMENSION (:), POINTER :: IIA,JJA
         INTEGER N
         END SUBROUTINE SPAPRT
      END INTERFACE
C
C     DECLARATIONS FOR ARGUMENTS.
      INTEGER LM4L,LM6,NORBS
      DOUBLE PRECISION PA(LM4L),PPA(LM6)
      DOUBLE PRECISION, DIMENSION (:), POINTER :: PSA
      INTEGER, DIMENSION (:), POINTER :: IPSA,JPSA
C     LOCAL PARAMETERS.
      INTEGER, PARAMETER :: LMP=171
      INTEGER, PARAMETER :: LMW=2025
C     LOCAL ARRAYS.
      INTEGER :: NA(2),NF(2),NL(2)
      DOUBLE PRECISION :: DELTA(2),EE(2),X(3,2)
      DOUBLE PRECISION :: H(LMP),PA2(LMP),W(LMW)
C     LOCAL VARIABLES.
      INTEGER :: I,IA,IB,J,K,KK,L,LIN,M,MCUTP,MODE1,MPRINT
      INTEGER :: NB6,NNHCO,NPSA
      DOUBLE PRECISION :: CUTP,DEL,DER,EF,EH
      DOUBLE PRECISION :: ENUCLR,RDEL,XSTORE
C     COMMON BLOCK VARIABLES AND ARRAYS.
      INTEGER :: NUMAT,NAT,NFIRST,NLAST
      INTEGER :: IN2,NBF
      DOUBLE PRECISION :: COORD,CG
      DOUBLE PRECISION :: A0,AFACT,EV,EVCAL,PI,W1,W2,BIGEXP
      DOUBLE PRECISION :: ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
      COMMON
     ./ATOMC / COORD(3,LM1)
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./CGRAD / CG(3,LM1+LM1M)
     ./CONSTF/ A0,AFACT,EV,EVCAL,PI,W1,W2,BIGEXP
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./INOPT2/ IN2(300)
     ./NBFILE/ NBF(20)
C *** FILE NUMBERS.
      NB6    = NBF(6)
C *** INPUT OPTIONS.
      NNHCO  = IN2(20)
      MPRINT = IN2(41)
      MCUTP  = IN2(179)
C *** INITIALIZATION.
      IF(MCUTP.GT.0) THEN
         CUTP = 10.0D0**(-MCUTP)
      ELSE
         CUTP = -ONE
      ENDIF
      DEL    = 1.0D-06
      RDEL   = 5.0D+05
      DELTA(1)= DEL
      DELTA(2)=-DEL
      DO 20 I=1,NUMAT
      DO 10 J=1,3
      CG(J,I) = ZERO
   10 CONTINUE
   20 CONTINUE
C *** DEBUG PRINT.
      IF(MPRINT.GE.5) THEN
         WRITE(NB6,500)
         WRITE(NB6,510) (PPA(I),I=1,LM6)
         WRITE(NB6,530)
         CALL SPAPRT (PSA,IPSA,JPSA,NORBS)
         IF(MPRINT.GE.7) WRITE(NB6,550)
      ENDIF 
C     *
C *** LOOP OVER ATOM PAIRS I-J.
C     ATOMS I AND J ARE IDENTIFIED AT THE BEGINNING OF THE LOOP.
C     ATOM I GETS NUMBER 2 IN THE PAIR I-J SINCE I.GT.J
C     ATOM J GETS NUMBER 1 IN THE PAIR I-J SINCE I.GT.J
C *** LOOP OVER ATOMS I.
      MODE1  = 1
      DO 130 I=2,NUMAT
      IA     = NFIRST(I)
      IB     = NLAST(I)
C
      CALL HFOCKS (PA,PSA,IPSA,JPSA,NPSA,NORBS,IA,IB,MODE1,CUTP)
C
      NA(2)  = NAT(I)
      X(1,2) = COORD(1,I)
      X(2,2) = COORD(2,I)
      X(3,2) = COORD(3,I)
C *** LOOP OVER ATOMS J.
      DO 120 J=1,I-1
      NA(1)  = NAT(J)
      NF(1)  = 1
      NL(1)  = NLAST(J)-NFIRST(J)+1
      NF(2)  = NL(1)+1
      NL(2)  = NF(2)+IB-IA
      LIN    = (NL(2)*(NL(2)+1))/2
      X(1,1) = COORD(1,J)
      X(2,1) = COORD(2,J)
      X(3,1) = COORD(3,J)
C *** FORM DENSITY MATRIX FOR ATOM PAIR I-J.
      CALL PSORTS (I,J,PA2,PA,PPA,NORBS,LM6,LMP)
      IF(MPRINT.GE.9) THEN
         WRITE(NB6,560) I,J
         WRITE(NB6,570) (PA2(KK),KK=1,LIN)
      ENDIF
C     *
C *** LOOP OVER THREE CARTESIAN COORDINATES.
      DO 110 K=1,3
C *** FINITE DIFFERENCE CALCULATION.
      XSTORE = X(K,2)
      DO 90 L=1,2
      X(K,2) = XSTORE+DELTA(L)
C     TWO-CENTER INTEGRALS.
      CALL DHCORE (H,W,LIN,LMW,I,J,NA,NF,NL,X,ENUCLR)
C     TWO-CENTER ONE-ELECTRON ENERGY.
      EH     = ZERO
      DO 80 M=1,LIN
      EH     = EH+H(M)*(PA2(M)+PA2(M))
   80 CONTINUE
C     TWO-CENTER TWO-ELECTRON ENERGY.
      EF     = ZERO
      CALL FOCK2D(EF,H,PA2,PA2,W,LIN,LMW,NF,NL)
      EE(L)  = EH+EF+ENUCLR
      IF(MPRINT.GE.7) THEN
         WRITE(NB6,580) I,J,K,L,EH,EF,ENUCLR,EE(L)
      ENDIF
   90 CONTINUE
      X(K,2) = XSTORE
      DER    = (EE(1)-EE(2))*EVCAL*RDEL
      CG(K,I) = CG(K,I)+DER
      CG(K,J) = CG(K,J)-DER
  110 CONTINUE
  120 CONTINUE
  130 CONTINUE
C *** MOLECULAR MECHANICS CORRECTION FOR PEPTIDE BONDS.
      IF(NNHCO.GT.0) CALL MMOKG (CG,DEL,LM1,NNHCO)
      RETURN
  500 FORMAT(// 1X,'DCARTS: DEBUG PRINT - INPUT DATA.'/)
  510 FORMAT(   1X,'DCARTS: PPA',10F10.5)
  530 FORMAT(// 1X,'DCARTS: SPARSE DENSITY MATRIX PSA'/)
  550 FORMAT(// 1X,'DCARTS: I,J,K,L,EH,EF,ENUCLR,EE(L)')
  560 FORMAT(/  1X,'DCARTS: LOCAL PA2 DENSITY FOR PAIR',2I4/)
  570 FORMAT(   1X,'DCARTS: ',10F10.5)
  580 FORMAT(   1X,'DCARTS: ',4I5,4G20.10)
      END
