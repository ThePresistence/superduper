      PROGRAM MNDO99
C
C     COPYRIGHT (1987-2019) BY WALTER THIEL,
C     MAX-PLANCK-INSTITUT FUER KOHLENFORSCHUNG,
C     KAISER-WILHELM-PLATZ 1, D-45470 MUELHEIM, GERMANY.
C
C     VERSION 8.0 OF 15 AUGUST 2019.
C     MASTER VERSION.
C     *
C     PROGRAM FOR SEMIEMPIRICAL QUANTUM-CHEMICAL CALCULATIONS.
C     *
      USE LIMIT
C     *
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      EXTERNAL BLOCK0,BLOCK1,BLOCK2,BLOCK3,BLOCK4
      EXTERNAL SCFCAL
      LOGICAL CALFRG
      LOGICAL PINC
      LOGICAL R2CENT
      LOGICAL UHF
      CHARACTER*2   ELEMNT
      CHARACTER*4   IRREP
      CHARACTER*800 KEYWRD
      CHARACTER*30  KOMEXP
      CHARACTER*80  KTITLE,KOMENT
      CHARACTER*7   QMMETH
      CHARACTER*3   NGROUP
      CHARACTER*3   NPTGRP
      CHARACTER*30  PROP1
      CHARACTER*31  PROP2
      CHARACTER*37  PROP3
      CHARACTER*10  UNITS
      CHARACTER*80  GPUNAM
C     *
C     THE FOLLOWING LIST CONTAINS ALL COMMON BLOCKS OF THE PROGRAM IN
C     ALPHABETICAL ORDER, EXCEPT FOR THOSE COMMON BLOCKS WHICH APPEAR
C     ONLY LOCALLY IN THE SECTIONS CALLED BY THE FOLLOWING ROUTINES.
C     - PPECP : COMMON BLOCKS FOR ECP INTEGRALS.
C     - PSDRV : COMMON BLOCKS FOR ANALYTICAL DERIVATIVES.
C     - REPGAU: COMMON BLOCKS FOR GAUSSIAN TWO-ELECTRON INTEGRALS.
C     *
      COMMON
     ./ABOND / ALPB(LMZ,LMZ),MALPB(LMZ)
     ./AM1   / USSAM1(LMZ*18)
     ./AM1D  / USSAMD(LMZ*21),IMAMD(LMZ)
     ./AM1GAU/ GUESA1(LMZ*12),IAM1(LMZ)
     ./AMDGAU/ GUESD1(LMZ*12),IM1D(LMZ)
     ./AMPGAU/ GUESS1(LMZ*12),GSCAL(LMZ),IMP(LMZ)
     ./AMASS / AMS(LM1)
     ./ATOMC / COORD(LMV)
     ./ATOML / AA1(LMV),AA2(LMV)
     ./ATOMS / NUMAT,NAT(LMV)
     ./ATORB / IOS(LMZ*3)
     ./ATSYM / IELSYM(21)
     ./AUXVAR/ VAR1DQ(10),NGANGB
     ./BESAFE/ TLIMIT
      COMMON
     ./CCIS  / KTHMO(4)
     ./CGRAD / CG(LMV+3*LM1M)
     ./CGRAD1/ ICG(LMV)
     ./CGRADM/ CGX(3,LM1+LM1M,LMGRD),CNORMX(LMGRD)
     ./CHARGE/ QI(LM1)
     ./CHARGP/ POP(3,LM1)
     ./CICLO / CLOTHR
     ./CICONJ/ ICONJ(LM1)
     ./CIMAP / IFMAP
     ./CIMOS / IMOCI(LMX)
     ./CIMOSY/ JMOCI(LMX),MOCISY(LMX)
     ./CIPRP/  CIPROP(LMPROP,LMSTAT),ICISYM(LMSTAT)
     ./CIREFS/ ICIREF(LMACT,LMREF),JCIREF(LMACT,LMREF)
     ./CIROOT/ IROOTA(8)
     ./CNACV / CC(LMV+3*LM1M+2)
     ./CNACVM/ CCX(3,LM1+LM1M,LMNAC),CCNRMX(LMNAC)
     ./CONINF/ ESTAT0,ESTAT1,GF2NRM
     ./CONSTF/ A0,AFACT,EV,EVCAL,PI,W1,W2,BIGEXP
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
      COMMON
     ./COSMO1/ EGAS,ESOLUT,ESOLV,EDISP,EDIE
     ./COSMO2/ NCOSMO(5)
     ./COSMO3/ FEPSI(3),SRAD(LM1)
     ./COSMO4/ IATSP(LMNPS)
     ./COSMO5/ ATOMAR(LM1+1),NPS1
     ./COSMO6/ CAVITA(LMZ*6)
     ./COSMO7/ JPC(LMI+LM1+1)
     ./COSMO8/ COSURF(LMNPS*5)
     ./COSMO9/ DIRVEC(3*NPPA+9*LM1),NAR(2*LMNPS)
     ./CYCLES/ ICYC(2)
      COMMON
     ./DAWFCM/ DAWC(249),IDAW(80),DAWH
     ./DELEMT/ NELMD(2)
     ./DENERG/ DENER
     ./DERFCM/ DERFC(246),IDERF(80),DERFH
     ./DFP   / X(LMV),NVAR
     ./DFPGO / GLAST(LMV*2)
     ./DIPOL / DIP(7)
     ./DIPOL1/ HYF(LMZ*2)
     ./DNBND / INMB(LMZ*2)
      COMMON
     ./DPARM / LORBS(LMZ)
     ./DPARM1/ UDD(LMZ*3)
     ./DPARM2/ ZSN(LMZ*3)
     ./DPARM3/ F0DD(LMZ*9)
     ./DPARM4/ REPD(52,LMZ)
     ./DPARM5/ INTIJ(1215)
     ./DPARM6/ R2CENT(2025)
     ./DPARM7/ IF0SD(LMZ*4)
     ./DPARM8/ JF0SD(LMZ*4)
      COMMON
     ./ECPCM / CLP(LMK,2),NLP(LMK),KFECP(LML,2),LFECP(LMZ,2)
     ./ELEMTS/ ELEMNT(107)
     ./ENERGT/ EE(4)
     ./ERG   / ENERGY(LMV+3)
     ./ERG1  / CNORM1
     ./ERGM  / ENERGX(LMGRD),GRADX(LMV,LMGRD),GNORMX(LMGRD)
     ./ERGREF/ H298,H0,HF298,HF0,HAT298,HAT0,D00,EVIB,SCFENR
     ./ERRFCM/ ERRFC(142),IERRF(40),ERRFH
     ./EXPHAT/ EXHEAT(LMZ)
     ./EXTRA / GLOCAL(22)
     ./EXTRA1/ RICORE(2087)
     ./EXTRA2/ SIJT(703)
      COMMON
     ./FIELD2/ FIFI(3)
     ./FIELD3/ ALPHAD(6)
     ./FINDX1/ IP(LMI,3)
     ./FINDX2/ JP(LME,3),JX(LM1+1)
     ./FLAG1 / KTITLE,KOMENT
     ./FLAG2 / SECADD,TIME1
     ./FLAG3 / KRESET,MPRINT,T2
     ./FLAG4 / INTSUM
     ./FLPOCM/ GP(LMV*2+2)
     ./FMGTO / GAFMZ(38)
     ./FMGTO1/ XLIMM(2)
     ./FORCE3/ TMA(2)
     ./FRGMT1/ NFRAGS(LM1),NCHRGS(LM1)
      COMMON
     ./GAUSS1/ KSTART(LMGS),KNG(LMGS),KTYPE(LMGS),NSHELL,NBASIS
     ./GAUSS3/ EXX(LMGP),C1(LMGP),C2(LMGP),C3(LMGP)
     ./GNACVM/ GCX(LMV,LMNAC),GCNRMX(LMNAC)
     ./GPUPRP/ GPUNAM(MAXGPU),NVCAPA(MAXGPU),MIBGLO(MAXGPU),NUMGPU
     ./GRDORG/ IGRST(LMGRD+2),ISTMUL(LMGRD)
     ./GUGA1 / NCIO(2)
     ./GUGA2 / LCI1(4)
     ./GUGA3 / EEREF
     ./GUGA4 / XNAC(LMGRD,LMGRD)
     ./GUGA5 / MOLGUG,ICICAL,MULSAV
     ./HALFE / IODD(2)
     ./HALFX / XIXJXK(3)
     ./HBONDC/ IHBOND(2),RHXMIN(3)
      COMMON
     ./IJWORK/ ISYM(LMX),IJKDUM(LMV)
     ./INDEX / INDX(LMX)
     ./INDEXW/ NW(LM1)
     ./INFOB / PCPMPR(LMV+12)
     ./INFOC / ITYPE(4)
     ./INOPT1/ IN1(300)
     ./INOPT2/ IN2(300)
     ./INOPT3/ XN3(50)
     ./INOPT4/ XN4(50)
     ./ISTOPE/ CMS(LMZ*2)
      COMMON
     ./KEYWRD/ KEYWRD
     ./LIMITS/ LM2,LM3,LM4,LM6,LM7,LM8,LM9
     ./LMCSM1/ LCOSM1(4)
     ./LMCSM2/ LCOSM2(7)
     ./LMDIIS/ LDIIS1(9)
     ./LMDMS / LD1(5)
     ./LMFOR / LF1,LF2,LF3,LF4,LF5,LF6,LF7,LF8,LFC
     ./LMGRAD/ LG1(8)
     ./LMPERT/ LP1(5)
     ./LMSCF / LS1,LS2,LS3,LS4,LS5,LS6,LS7,LS8,LS9
     ./LMSPA4/ LM22(3)
     ./LMUHF / LU1(8)
      COMMON
     ./MATRIX/ COFINT(6000)
     ./MMCOM1/ EMM
     ./MMCOM2/ NHCO(4,1+2*LM1/3),HTYPE
     ./MNDOBL/ USSM(LMZ*18)
     ./MNDOD / USSD(LMZ*21),IMMD(LMZ)
     ./MNDOEL/ IMM(LMZ)
     ./MOPAC / IMOPAC
     ./MULTAB/ IPROD(64)
     ./MULTIP/ DD(LMZ*15+15)
     ./NACOPT/ ICURST(3)
     ./NBFILE/ NBF(20)
      COMMON
     ./OCCFL / IMOCC(22)
     ./OCCNM / OCCA(LMX),OCCB(LMX)
     ./OM1BL / USSOM1(LMZ,28),IMOM1(LMZ)
     ./OM2BL / USSOM2(LMZ,34),IMOM2(LMZ)
     ./OM3BL / USSOM3(LMZ,34),IMOM3(LMZ)
     ./OM4BL / USSOM4(LMZ,30),IMOM4(LMZ)
     ./ODM2BL/ USSOD2(LMZ,34),IMODM2(LMZ)
     ./ODM3BL/ USSOD3(LMZ,34),IMODM3(LMZ)
     ./OPCOM1/ XXGG(LMV*2+8)
     ./OPCOM2/ IRTL(4)
     ./OPTCRT/ NSUCC
     ./OPTEF / OLDG(LMV*2+1)
     ./OPTRST/ CCNADD(7)
     ./OPTTOL/ TOLEND(9)
     ./ORBENG/ EIGMO(LMX),NSYMO(LMX)
     ./ORBITS/ NUMB(5)
     ./OVERLY/ IOV,JOV,KOV,LOV
      COMMON
     ./PAR2  / MOL
     ./PAR4  / EXCIT(20),NEXCIT,IEXCIT(4,20)
     ./PAR14 / EREF(LMM),EHF298(LMM),ED00(LMM),ITHERM(LMM)
     ./PAR20 / XXPAR(LMP),NFPAR(LMP),NSPAR(LMP),NNPAR
     ./PAR21 / ID1(7,LMF),LITEXP(LMF)
     ./PAR22 / XEXP(LMF),ERREXP(LMF),WEXP(LMF)
     ./PAR23 / KOMEXP(LMF)
     ./PAR24 / NREF1(LMM),NREF2(LMM)
     ./PAR25 / XCALC(LMF)
     ./PAR26 / JOPREF(LMM),JCOSMO(LMM)
     ./PAR41 / COORDA(3,LM1),LASTAT,NUMATA,NFRGSI,CALFRG
     ./PAR43 / EHEATP,IPHEXP
     ./PAR44 / NCOEFS(LMF),IMOL(LMMR,LMF),ICOEFS(LMMR,LMF)
      COMMON
     ./PARDER/ TORE(LMZ*3)
     ./PARM1 / AA(LMV),NA(LM1,4),NATOMS
     ./PARM2 / NSYM,LPAR(LMS,3)
     ./PARM3 / LOC(LMV),NV
     ./PARM4 / RC(LMR),LREACT(2)
     ./PARM5 / RC1(LMG),RC2(LMG),LGRID1(4)
     ./PARM6 / LPT(3)
     ./PARM7 / DEPFAC
     ./PARMIN/ F0(164)
     ./PAROMM/ OMM(LMZ,16)
     ./PAROPT/ USS(LMZ*7)
     ./PDDGM / USSPDM(LMZ,18)
     ./PDDGM1/ PAPDM(LMZ,4),IMPDM(LMZ)
     ./PDDGP / USSPDP(LMZ,18)
     ./PDDGP1/ GUPDP1(LMZ,10),IMPDP(LMZ)
     ./PDDG1 / PAPDDG(LMZ,4)
      COMMON
     ./PGEOM / GPEP(216)
     ./PGEOM1/ GPHHCC(558)
     ./PGEOM2/ NHHCC(3)
     ./PM3   / USSPM3(LMZ*18)
     ./PM3GAU/ GUESP1(LMZ*6),IPM3(LMZ)
     ./PSC   / FBIN(930)
     ./PSDOPT/ RPSOPT(10),IPSOPT(28)
     ./PSNICS/ COORDN(3,MXNICS),NNICS
     ./PSNMRI/ PINC(LM1)
     ./PSNMRR/ SHIFT(2,LM1+MXNICS),SIGMA(3,3,LM1+MXNICS)
     ./PSNPRD/ XBETAN(LMZ*18+3),IDEFN(LMZ+1)
      COMMON
     ./QMMM1 / COORDM(3,LM1M),CHARGM(LM1M)
     ./QMMM2 / LINK(LM1)
     ./QMMM3 / DELTAM(LMZ),OMEGAM(LMZ)
     ./QMMM4 / ELPOT(LM1M),ESF(3,LM1M)
     ./QMMM6 / ISELCT(LM1+LM1M)
     ./QMNAME/ QMMETH(-23:6)
     ./REP   / GSS(LMZ*6)
      COMMON
     ./SCFPRT/ EBIND(6),ITSAVE
     ./SCRT  / SCFCRT(4)
     ./SKIPA / ISKPA
     ./SKIPAF/ ISKPAF
     ./STATCG/ NCGTOT(20)
     ./SYMALL/ NPTGRP(59)
     ./SYMLAB/ NGROUP(7),IRREP(26)
     ./SYMLIM/ IRREPA(14)
     ./TXPROP/ PROP1(LMPR),PROP2(LMPR),PROP3(LMPR),UNITS(LMPR)
     ./UHF   / UHF
     ./VIBRAT/ WAVEVB(LMV),NSYMVB(LMV)
     ./XCI   / EVECCI(24)
     ./YARCON/ YLGCT(LMYL),IYLGC(5,LMYL)
     ./YARLAG/ YLVAL(LMYL),YLGRD(LMYL),YLD(LMYL),NYL
     ./YARUPD/ YARV(3,LM1+LM1M,LMYL),YARS(LMV,2),YARG(LMV,LMYL,2),IXTRAP
C     *
C     OLD CONVENTION: DEFINE GENERAL BUFFER OF FIXED LENGTH.
C     COMMON A(LEN)
C     NEW CONVENTION: ALLOCATE MEMORY FOR EACH MOLECULE AS NEEDED.
      DOUBLE PRECISION, DIMENSION (:), ALLOCATABLE :: A
C     *
C *** Private COMMON blocks for OpenMP
C$OMP THREADPRIVATE (/AUXVAR/, /EXTRA /, /EXTRA1/, /EXTRA2/, /PGEOM /)
C     *
C *** INITIALIZATION AND INPUT SECTION.
C     *
C     FILE NUMBERS.
      NB6    = NBF(6)
      NB7    = NBF(7)
      NB9    = NBF(9)
      NB19   = NBF(19)
C     WRITE HEADER.
      WRITE(NB6,500)
C     PARAMETER FLAGS AND COUNTERS.
      IOPOLD = 999999
      IOPPRT = 0
      MOL    = 0
      NCGTOT = 0
      LASTAT = 0
      NUMATA = 0
      NFRGSI = 0
      CALFRG = .FALSE.
C     CHECK PRESENCE OF GPUS.
      CALL CHKGPU(NUMGPU,GPUNAM,NVCAPA,MIBGLO)
      CALL PRTGPU
C     CHECK TYPE OF INPUT FILE.
      CALL KEYCHK (IMOPAC)
C *** READ KEYWORD OR MOPAC-TYPE INPUT.
   10 CONTINUE
      IF(IMOPAC.NE.0) THEN
         CALL READMO (IMOPAC,KEYMOD,ICALL)
         IF(ICALL .EQ.-9) GO TO 90
         IF(KEYMOD.EQ.-8) GO TO 90
         IF(KEYMOD.EQ.-9) GO TO 10
      ELSE
         CALL KEYDEF (KEYWRD,IMOPAC,3)
      ENDIF
C *** READ FIRST LINE OF STANDARD INPUT.
      CALL ZLIMIT (IOPPRT)
      IOP    = IN2(2)
      JOP    = IN2(3)
      NEXMOL = IN2(6)
      MPLIB  = IN2(7)
      INREFD = IN2(10)
      IPAROK = IN2(11)
      NMR    = IN2(13)
      NSAV7  = IN2(14)
      NSAV9  = IN2(16)
      IFLD1  = IN2(22)
      IFLD3  = IN2(24)
      IEXBAS = IN2(27)
C     INITIALIZATION OF PARAMETERS.
      IF(IOP.NE.IOPOLD) THEN
         CALL PARDEF (IOP,IPAROK,IEXBAS,0)
         IF(IOP.LE.-10 .OR. IEXBAS.GT.0) THEN
            CALL BDATA4
         ENDIF
         IOPOLD = IOP
      ENDIF
C *** READ SECOND LINE OF STANDARD INPUT.
      CALL METHOD
      MAXEND = IN2(32)
      JPRINT = IN2(42)
      INTDIR = IN2(55)
      LINDMS = IN2(56)
      INP24  = IN2(63)
C     INITIALIZATION AND INPUT FOR ANALYTICAL DERIVATIVES.
      CALL INPANA (JPRINT)
C     INITIALIZATION AND INPUT FOR LINEAR SCALING AND DIRECT METHODS.
      IF(INTDIR.NE.0 .OR. LINDMS.NE.0 .OR. INP24.NE.0) THEN
         CALL INPDIR (JPRINT)
      ENDIF
C     INITIALIZATION AND INPUT FOR INTEGRALS AND SCF TREATMENT.
      CALL INPSCF (JPRINT)
C     INITIALIZATION FOR GAUSSIAN INTEGRALS.
      IF(IOP.EQ.-5 .OR. IOP.EQ.-6 .OR. IOP.EQ.-8 .OR. IOP.EQ.-9 .OR.
     1   IOP.EQ.-22 .OR. IOP.EQ.-23) THEN
         CALL GAMGEN
         CALL GTPREP (0,IOPPRT)
      ENDIF
C     DETERMINE THE STARTING TIME.
      CALL CPUSEC(TIME1)
      SECADD = ZERO
C *** READ MOLECULAR DATA IN STANDARD INPUT.
   20 CONTINUE
      ICALL  = 0
      LM5    = LEN
      LENGTH = LEN
      CALL START (LM5,LENGTH,ICALL)
      IF(ICALL.NE.-9) ALLOCATE (A(LM5))
      IF(ICALL.EQ.-9) GO TO 90
      IF(ICALL.EQ.-1) GO TO 80
C     SAVE INPUT DATA IN SUITABLE FORMAT.
      IF(JOP.LT.0 .OR. JOP.EQ.2 .OR. MAXEND.EQ.1) THEN
         IF(NSAV7.GT.0) CALL GEOSAV (NATOMS,NSAV7,NB7)
         IF(NSAV9.GT.0) CALL PDBSAV (NB9)
      ENDIF
      KGEOM  = IN2(68)
      IF(KGEOM.EQ.-1) GO TO 80
      IF(ICALL.LT. 0) GO TO 70
C     UPDATE CONTROL VARIABLES.
      IF(INREFD.NE.0) THEN
         IN2(3)  = JOPREF(MOL)
         IN2(28) = JCOSMO(MOL)
      ENDIF
      JOP    = IN2(3)
      ICOSMO = IN2(28)
C     *
C *** SINGLE-POINT CALCULATION TO DEFINE INITIAL DENSITY MATRIX.
C     *
C     SPECIAL OPTION (KTRIAL=20-27) TO FACILITATE SCF CONVERGENCE.
C     USE STANDARD SEMIEMPIRICAL HAMILTONIAN WITHOUT ANY EXTRA TERMS.
C     NO EXTERNAL POINT CHARGES, NO EXTERNAL FIELD, NO COSMO TERMS.
      KTRIAL = IN2(67)
      IF(KTRIAL.GE.20 .AND. KTRIAL.LE.27) THEN
         IF(KTRIAL.GT.20) IN2(2) = -(KTRIAL-20)
         ICALL = 0
         CALL SCF (A,LM5,ICALL,SCFCAL)
         IF(KTRIAL.GT.20) IN2(2) = IN1(2)
         IF(ICALL.EQ.-1) GO TO 70
      ENDIF
C     *
C *** REACTION PATH CALCULATIONS.
C     *
C     ONE-DIMENSIONAL PATH.
      IF(KGEOM.EQ.1) THEN
         IF(MPLIB.GE.0) THEN
            CALL PATH  (A,LM5,SCFCAL)
         ELSE
            CALL PATHP (A,LM5,SCFCAL)
         ENDIF
         GO TO 80
C     TWO-DIMENSIONAL GRID.
      ELSE IF(KGEOM.EQ.2 .OR. KGEOM.EQ.3) THEN
         IF(MPLIB.GE.0) THEN
            CALL GRID  (A,LM5,SCFCAL)
         ELSE
            CALL GRIDP (A,LM5,SCFCAL)
         ENDIF
         GO TO 80
C     LINEAR INTERPOLATION BETWEEN TWO INPUT GEOMETRIES.
C     SINGLE-POINT CALCULATIONS ONLY.
      ELSE IF(KGEOM.EQ.4 .AND. (JOP.LT.0 .OR. MAXEND.EQ.1)) THEN
         IF(MOL.LE.1) THEN
            AA1(1:3*NATOMS) = AA(1:3*NATOMS)
         ELSE
            AA2(1:3*NATOMS) = AA(1:3*NATOMS)
            CALL PATHL (A,LM5,SCFCAL)
         ENDIF
         GO TO 80
      ENDIF
C     *
C *** GROUND-STATE BORN-OPPENHEIMER MOLECULAR DYNAMICS.
C     *
      IF(JOP.EQ.-3) THEN
         ICALL = 1
         CALL BO_DYNAM(A,LM5,ICALL,SCFCAL)
         IF(ICALL.EQ.-1) GO TO 80
         GO TO 80
      ENDIF
C     *
C *** MULTI-STATE MULTI-SURFACE CALCULATIONS AND DYNAMICS.
C     *
C     SINGLE-POINT CALCULATIONS (ICROSS=1,2,7)
C     CONICAL INTERSECTION SEARCH (ICROSS=3-5).
C     TRAJECTORY SURFACE HOPPING DYNAMICS (ICROSS=6).
      ICROSS = IN2(160)
      IF(JOP.LT.0 .AND. ICROSS.GT.0) THEN
         ICALL = 1
         CALL SCROSS (A,LM5,ICALL,SCFCAL)
         IF(ICALL.EQ.-1) GO TO 80
         GO TO 80
      ENDIF
C     *
C     SINGLE-POINT CALCULATION OF ENERGY AND GRADIENT.
C     *
C     ENERGY ONLY FOR JOP=-1, ENERGY AND GRADIENT FOR JOP=-2.
C     ELECTRIC PROPERTIES (IFLD1.GT.0) ARE HANDLED SEPARATELY.
      IF(JOP.LT.0 .OR. MAXEND.EQ.1 .OR. NUMAT.EQ.1) THEN
         IF(IFLD1.GT.0) GO TO 50
         ICALL = 0
         IF(JOP.EQ.-2) ICALL=1
         CALL SCF (A,LM5,ICALL,SCFCAL)
         IF(ICALL.EQ.-1) GO TO 70
         GO TO 60
      ENDIF
C     *
C *** GEOMETRY OPTIMIZATION AND FORCE CONSTANT ANALYSIS.
C     *
C     OPTIMIZE THE MOLECULAR GEOMETRY.
   30 CONTINUE
      IF(JOP.GE.0 .AND. JOP.LE.4 .AND. JOP.NE.2) THEN
         CALL GEOOPT (A,LM5,ICALL,SCFCAL)
C        CHECK FOR TIME LIMIT AND ERROR EXITS.
         IF(ICALL.EQ.-8) GO TO 80
         IF(ICALL.EQ.-1) GO TO 70
         IF(ICALL.EQ.-3) GO TO 70
      ENDIF
C     CALCULATE FORCE CONSTANTS.
C  40 CONTINUE
      IF(JOP.GE.2 .AND. JOP.LE.6) THEN
         I3N = 3*NUMAT
         LMA = I3N*I3N
         CALL FMATRX (A,LM5,ICALL,SCFCAL,I3N)
C        CHECK FOR TIME LIMIT AND ERROR EXITS.
         IF(ICALL.EQ.-8) GO TO 80
         IF(ICALL.EQ.-2) GO TO 70
         IF(ICALL.EQ.-7) THEN
            IN2(3) = IN1(3)-2
            JOP    = IN2(3)
            GO TO 30
         ENDIF
C        FORCE CONSTANT ANALYSIS.
         CALL FORCE (A(LF1),A(LF3),A(LF4),A(LF5),A(LF6),A(LF7),I3N,LMA)
      ENDIF
C     *
C *** SINGLE-POINT CALCULATION AT INPUT OR OPTIMIZED GEOMETRY.
C     *
C *** ELECTRIC PROPERTIES.
   50 CONTINUE
      IF(IFLD1.GT.0) THEN
         OLDPL     = SCFCRT(2)
         SCFCRT(2) = 10.0D0**(-IFLD3)
         ICALL     = 0
         CALL SCF (A,LM5,ICALL,SCFCAL)
         IF(ICALL.EQ.-1) GO TO 70
         CALL FIELD (A,LM5,ICALL,SCFCAL,0)
         SCFCRT(2) = OLDPL
      ENDIF
C *** COSMO SOLVATION TREATMENT.
   60 CONTINUE
      IF(ICOSMO.LT.0 .AND. NMR.LE.0) THEN
         ICALL  = 0
         IF(JOP.EQ.-2) ICALL=1
         IN2(28)=-ICOSMO
         CALL SCF (A,LM5,ICALL,SCFCAL)
         IN2(28)= ICOSMO
         IF(ICALL.EQ.-1) GO TO 70
      ENDIF
C *** NMR PROPERTIES.
C     NMR>0: NEW SCF CALCULATION WITH SPECIAL NMR PARAMETRIZATION.
C     POSSIBLY COMBINED WITH COSMO SOLVATION TREATMENT (ICOSMO<0).
      IF(NMR.GT.0) THEN
         IN2(2) = 0
         CALL PARDEF (0,IPAROK,0,NMR)
         CALL NMRCHK (NMR)
         ICALL     = 0
         IF(ICOSMO.LT.0) IN2(28)=-ICOSMO
         CALL SCF (A,LM5,ICALL,SCFCAL)
         IF(ICOSMO.LT.0) IN2(28)= ICOSMO
         IF(ICALL.EQ.-1) GO TO 70
      ENDIF
C     CALCULATE NMR CHEMICAL SHIFTS.
      IF(NMR.NE.0) THEN
         CALL PSNMR (PINC,SIGMA,A(LS8),A(LS1),LM2,A(LS2))
         CALL NMRPRT(NMR,IOP)
      ENDIF
C     RESET PARAMETERS TO STANDARD VALUES (NMR>0).
      IF(NMR.GT.0) THEN
         IN2(2) = IN1(2)
         CALL PARDEF (IOP,IPAROK,IEXBAS,0)
      ENDIF
C     *
C *** CALCULATE AND SAVE REFERENCE DATA.
C     *
   70 CONTINUE
      IF(INREFD.NE.0) THEN
         CALL CALREF (MOL,ICALL)
         CALL OUTREF (1,0,MOL,2)
         CALL ASSYM  (NUMAT,AMS,COORD,ISUB,MSYM,IJKDUM,ISYM,-1)
         CALL REFSAV (MOL,NB19,ISUB)
      ENDIF
C *** DETERMINE THE COMPUTATION TIME AND DEALLOCATE BUFFER.
   80 CONTINUE
      CALL CPUSEC(TIME2)
      TIME1  = SECADD+TIME2-TIME1
      WRITE(NB6,510) TIME1
C     GUGACI CLEANUP.
      IF(MOLGUG.GT.0) CALL CLRGUG
      DEALLOCATE (A)
      IF(ICALL.EQ.-8) GO TO 90
C     *
C *** PREPARE FOR THE NEXT MOLECULE.
C     *
C     RESET CONTROL VARIABLES (JOP,IDIIS,ICOSMO,MIDDLE).
      TIME1  = TIME2
      SECADD = ZERO
      IN2(3) = IN1(3)
      IN2(9) = IN1(9)
      IN2(28)= IN1(28)
      IF(IN2(37).GT.0) IN2(37)=0
C *** DO THE NEXT MOLECULE.
      IF(NEXMOL.LE.0) THEN
         GO TO 20
      ELSE
         GO TO 10
      ENDIF
C     *
C *** END OF CALCULATION - CLEAN UP AND STOP.
C     *
   90 CONTINUE
C     ADD FINAL LINES TO FILE (NB19) WITH REFERENCE DATA.
      IF(INREFD.NE.0) THEN
         CALL REFSAV (0,NB19,ISUB)
      ENDIF
C     GENERATE MOLDEN INPUT FILE (NB67) FROM AUXILIARY FILE (NB13).
      NSAV13 = IN2(17)
      IF(NSAV13.EQ.2) THEN
         NB13 = NBF(13)
         CALL MOLDIN (NB6,NB13,NUMAT,3*NUMAT)
      ENDIF
C     STATISTICS, ESPECIALLY FOR CGDMS.
      IF(MOL.GT.1 .OR. LINDMS.GT.0) THEN
         CALL PRTNCG (NCGTOT,MOL)
      ENDIF
      STOP
  500 FORMAT(///1X,'PROGRAM MNDO2019.',
     1       /  1X,'VERSION 8.0 OF 15 AUGUST 2019.',
     2       // 1X,'COPYRIGHT BY WALTER THIEL,'
     3       /  1X,'MAX-PLANCK-INSTITUT FUER KOHLENFORSCHUNG,'
     4       /  1X,'D-45470 MUELHEIM, GERMANY.')
  510 FORMAT(///1X,'COMPUTATION TIME',12X,F10.3,' SECONDS'//)
      END
