      SUBROUTINE CGUPD (G,H,Q3,LM2,N,NITER,ICG,NPRINT)
C     *
C *** CONJUGATE GRADIENT UPDATE OF SEARCH DIRECTION (H).
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     G(LM2,*)  OLD/NEW GRADIENT MATRIX (I,O).
C     H(LM2,*)  OLD/NEW SEARCH DIRECTION MATRIX (I,O).
C     Q3(LM2,*) NEW GRADIENT MATRIX (I).
C     LM2       LEADING DIMENSION OF ALL MATRICES (I).
C     N         NUMBER OF ORBITALS (I).
C     NITER     NUMBER OF CURRENT SCF ITERATION (I).
C     ICG       NUMBER OF CURRENT CG CYCLE (I).
C     NPRINT    PRINTING FLAG (I).
C     *
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON
     ./INOPT2/ IN2(300)
     ./NBFILE/ NBF(20)
      DIMENSION G(LM2,N),H(LM2,N),Q3(LM2,N)
C *** INPUT OPTIONS.
      MCGUPD = IN2(178)
C *** EVALUATE DOT PRODUCTS.
      DOTGG  = DOTMAT(G,G,LM2,N,0)
      DOTGQ  = DOTMAT(G,Q3,LM2,N,0)
      DOTQQ  = DOTMAT(Q3,Q3,LM2,N,0)
C *** POLAK-RIBIERE FORMULA FOR MCGUPD.LE.0 (DEFAULT).
C     FLETCHER-REEVES FORMULA OTHERWISE.
      IF(MCGUPD.LE.0) THEN
         GAMMA  = (DOTQQ-DOTGQ)/DOTGG
      ELSE
         GAMMA  = DOTQQ/DOTGG
      ENDIF
C     COPY NEW GRADIENT (Q3,G).
      CALL MATCOP (Q3,G,LM2,N,1)
C     UPDATE SEARCH DIRECTION (H).
      CALL MATUPD (G,H,H,GAMMA,LM2,N)
C     REMOVE SMALL ELEMENTS.
C     NOT IMPLEMENTED.
C *** DEBUG PRINT.
      IF(NPRINT.GE.7) THEN
         NB6 = NBF(6)
         WRITE(NB6,590) NITER,ICG,DOTGG,DOTGQ,DOTQQ,GAMMA
         IF(NPRINT.GE.9) THEN
            WRITE(NB6,600) NITER,ICG
            CALL MATPRT (H,N,N,LM2,N)
         ENDIF
      ENDIF
      RETURN
  590 FORMAT(   1X,'CGDMS : NITER,ICG,DOTGG,DOTGQ,DOTQQ,GAMMA',
     1       /  1X,'CGDMS : ',I5,I3,3X,4G20.10)
  600 FORMAT(// 1X,'CGDMS : UPDATED SEARCH DIRECTION (H).',
     1       /  1X,'CGDMS : NITER =',I3,'   ICG =',I3/)
      END
