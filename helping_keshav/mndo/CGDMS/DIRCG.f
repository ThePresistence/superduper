C     ******************************************************************
      SUBROUTINE DIRCG  (CA,CB,DA,DB,EA,EB,FA,FB,H,PA,PB,Q,PPB,D2,
     1                   GDMS,HDMS,Q1,Q2,Q3,
     2                   LM2,LM3,LM4,LM6,LM9,LMD2,LMQ,
     3                   NROOT,NOPRT,ICALL)
C     *
C     DIRECT SCF ITERATIONS USING CG-DMS.
C     CONJUGATE GRADIENT DENSITY MATRIX SEARCH USING FULL ARRAYS.
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     CA(LM2,*) SQUARE RHF OR UHF-ALPHA DENSITY MATRIX (S).
C     CA(LM2,*) OPTIONALLY RHF OR UHF-ALPHA MO EIGENVECTORS (O).
C     CB(LM2,*) SQUARE UHF-BETA DENSITY MATRIX (S).
C     CB(LM2,*) OPTIONALLY UHF-BETA MO EIGENVECTORS (O).
C     DA(LM2,*) RHF OR UHF-ALPHA DIFFERENCE DENSITY MATRIX (S).
C     DB(LM2,*) UHF-BETA DIFFERENCE DENSITY MATRIX (S).
C     EA(LM2)   OPTIONALLY RHF OR UHF-ALPHA MO EIGENVALUES (O).
C     EB(LM2)   OPTIONALLY UHF-BETA MO EIGENVALUES (O).
C     FA(LM2,*) RHF OR UHF-ALPHA FOCK MATRIX (O).
C     FB(LM2,*) UHF-BETA FOCK MATRIX (O).
C     H(LM42,*) CORE HAMILTONIAN MATRIX (I).
C     PA(LM2,*) RHF OR UHF-ALPHA DENSITY MATRIX (I).
C     PB(LM2,*) UHF-BETA DENSITY MATRIX (I).
C     Q(LM2*8)  SCRATCH ARRAY FOR DIFFERENT PURPOSES (S).
C     Q(LM6)    SCRATCH ARRAY FOR ONE-CENTER DENSITY MATRIX PPA (S).
C     PPB(LM6)  SCRATCH ARRAY FOR ONE-CENTER DENSITY MATRIX PPB (S).
C     D2(LMD2)  DIELECTRIC MATRIX FOR COSMO SOLVATION TREATMENT (I).
C     LMQ       TOTAL NUMBER OF SOLUTE CHARGES IN COSMO (I).
C     NROOT     OPTIONALLY NUMBER OF MO EIGENVECTORS REQUIRED (I).
C     NOPRT     LOGICAL PRINTING FLAG: NO OUTPUT IF NOPRT IS TRUE (I).
C     ICALL     ERROR FLAG (I,O), NORMALLY NOT CHANGED.
C               =-1 ON OUTPUT: NO SCF CONVERGENCE OR CGDMS ERROR.
C     *
      USE LIMIT, ONLY: LM1, LMX
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (ITS=20)
      LOGICAL DODIIS
C     LOGICAL HALFEL
      LOGICAL NOPRT,PRT,PRT2,UHF
      LOGICAL HEVAL,WEVAL
      CHARACTER*80 KTITLE,KOMENT
      CHARACTER*4 MEXT,MFAST
      CHARACTER*4 MXS(ITS),MFS(ITS)
      COMMON
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./ENERGT/ EE,ENUCLR,EAT,ATHEAT
     ./FLAG1 / KTITLE,KOMENT
     ./INOPT2/ IN2(300)
     ./INOPT4/ XN4(50)
     ./LMDIIS/ LDIIS1,LDIIS2,LDIIS3,LDIIS4,LDIIS5,LDIIS6,MXDIIS,MX1P,LMD
     ./NBFILE/ NBF(20)
     ./ORBITS/ NUMB,NORBS,NMOS,NALPHA,NBETA
     ./SCFPRT/ EBIND(6),ITSAVE
     ./SCRT  / SCFCRT,PLCRT,SCFCRS(2)
     ./STATCG/ NCGTOT(20)
     ./UHF   / UHF
C     ARRAYS IN THE ARGUMENT LIST.
      DIMENSION CA(LM2,LM3),CB(LM2,LM3),EA(LM3),EB(LM3)
      DIMENSION DA(LM2,LM3),DB(LM2,LM3),FA(LM2,LM3),FB(LM2,LM3)
      DIMENSION H(LM2,LM3)
      DIMENSION PA(LM2,LM3),PB(LM2,LM3),Q(LM2*8),PPB(LM6),D2(LMD2)
      DIMENSION GDMS(LM2,LM3),HDMS(LM2,LM3)
      DIMENSION Q1(LM2,LM3),Q2(LM2,LM3),Q3(LM2,LM3)
C     LOCAL SCRATCH ARRAYS.
      DIMENSION EDS(ITS),EES(ITS),ERS(ITS),PLS(ITS)
      DIMENSION IWORK(6*LMX)
      DIMENSION NCG(10),MCG(10)
C     ALLOCATABLE SCRATCH ARRAY FOR DIIS TREATMENT.
      DOUBLE PRECISION, DIMENSION (:), ALLOCATABLE :: AC
C *** FILE NUMBERS.
      NB6    = NBF(6)
C *** INPUT OPTIONS.
   10 CONTINUE
      IDIIS  = IN2(9)
      IDIIS1 = MAX(1,MOD(IDIIS,10))
      JDIIS  = IDIIS/10
      LINDIA = IN2(57)
      KTRIAL = IN2(67)
      KITSCF = IN2(71)
      NPRINT = IN2(72)
      IDIAG  = IN2(74)
      CUTF   = XN4(20)
      CUTP   = XN4(21)
C *** INITIALIZATION.
      DO 15 I=1,10
      NCG(I) = 0
      MCG(I) = 0
   15 CONTINUE
      INFO   = 0
      KEXT   = 0
      NDIIS  = 0
      NITER  = 0
      EEP    = ZERO
      PL     = ZERO
      SPARFA = ZERO
      SPARFB = ZERO
      SPARH  = ZERO
      SPARPA = ZERO
      SPARPB = ZERO
C     HALFEL = .NOT.UHF .AND. IMULT.GT.0
      PRT    = .NOT.NOPRT
      PRT2   = PRT .AND. NPRINT.GE.2
C *** DEFINE INITIAL DENSITY MATRIX.
      MPDIAG = 0
      IF(KTRIAL.GE.0) THEN
         CALL GUESSP (CA,CB,PA,PB,LM2,LM3,LM4,MPDIAG)
      ENDIF
C *** PUT INITIAL DENSITY MATRIX IN SQUARE FORM.
      CALL SQUARE (PA,PA,NORBS,LM2,LM4)
      IF(UHF) THEN
         CALL SQUARE (PB,PB,NORBS,LM2,LM4)
      ENDIF
C *** SECOND ATTEMPT FOR SCF USING DIIS.
      IF(ICALL.EQ.-1 .AND. IDIIS.GT.0) THEN
         WRITE(NB6,570)
      ENDIF
C     HEADER FOR DETAILED OUTPUT.
      IF(PRT2) THEN
         IF(IDIIS.LE.0) THEN
            WRITE(NB6,500)
         ELSE
            WRITE(NB6,505)
         ENDIF
      ENDIF
C *** ALLOCATE DIIS SCRATCH ARRAY.
      IF(IDIIS.GT.0) ALLOCATE (AC(LMD))
C     *
C *** START OF SCF LOOP.
C     *
   20 CONTINUE
C     HEVAL  = NITER.EQ.0 .OR. INOUT.LT.0
      HEVAL  = NITER.EQ.0
      WEVAL  = .TRUE.
C     EF     = ZERO
C     EH     = ZERO
      IF(HEVAL) ENUCLR = ZERO
C     EXTRACT ONE-CENTER DENSITY MATRIX ELEMENTS PP(LM6) FROM THE
C     FULL SQUARE DENSITY MATRIX P(LM2,LM2).
      CALL PONEP (PA,Q,LM2,LM6)
      IF(UHF) THEN
         CALL PONEP (PB,PPB,LM2,LM6)
      ENDIF
C     APPLY CUTOFFS TO DENSITY MATRIX.
      IF(CUTP.GT.ZERO) THEN
         CALL MATCUT (PA,CUTP,LM2,NORBS,SPARPA)
         IF(UHF) THEN
            CALL MATCUT (PB,CUTP,LM2,NORBS,SPARPB)
         ENDIF
      ENDIF
C *** CONSTRUCT THE F-MATRIX FOR RHF OR THE FALPHA-MATRIX FOR UHF.
      DO 30 I=1,NUMAT
      IA  = NFIRST(I)
      CALL HFOCKP (H(1,IA),FA(1,IA),PA(1,IA),PB(1,IA),Q,PPB,
     1             LM2,LM6,I,I,HEVAL,WEVAL,EFX,EHX,EN,NPRINT)
      IF(HEVAL) ENUCLR = ENUCLR+EN
   30 CONTINUE
      IF(HEVAL) ENUCLR = ENUCLR*PT5
C *** CONSTRUCT THE FBETA-MATRIX FOR UHF.
      IF(UHF) THEN
         DO 40 I=1,NUMAT
         IA  = NFIRST(I)
         CALL HFOCKP (H(1,IA),FB(1,IA),PB(1,IA),PA(1,IA),PPB,Q,
     1                LM2,LM6,I,I,HEVAL,WEVAL,EFX,EHX,EN,NPRINT)
   40    CONTINUE
      ENDIF
C *** SYMMETRIZATION.
      IF(NPRINT.GE.7) THEN
         FASYMM = COMMUT (FA,LM2,NORBS)
         WRITE(NB6,650) FASYMM
      ENDIF
      CALL TRMSUM (FA,Q1,LM2,NORBS)
      CALL MATSCL (Q1,FA,PT5,LM2,NORBS)
      IF(UHF) THEN
         IF(NPRINT.GE.7) THEN
            FBSYMM = COMMUT (FB,LM2,NORBS)
            WRITE(NB6,660) FBSYMM
         ENDIF
         CALL TRMSUM (FB,Q1,LM2,NORBS)
         CALL MATSCL (Q1,FB,PT5,LM2,NORBS)
      ENDIF
C *** APPLY DIIS CONVERGENCE ACCELERATION.
      DODIIS = IDIIS.GT.0 .AND. NITER.GE.IDIIS1 .AND. KEXT.NE.-1
      IF(DODIIS) THEN
         CALL DIISP (FA,FB,PA,PB,AC(LDIIS1),AC(LDIIS6),AC(LDIIS2),
     1               AC(LDIIS3),AC(LDIIS4),AC(LDIIS5),LM2,LM4,NORBS,
     2               MXDIIS,MX1P,NDIIS,JDIIS,NPRINT,EDMAX)
      ENDIF
C *** APPLY CUTOFFS TO CORE HAMILTONIAN AND FOCK MATRIX.
      IF(HEVAL .AND. CUTF.GT.ZERO) CALL MATCUT (H,CUTF,LM2,NORBS,SPARH)
      IF(CUTF.GT.ZERO) THEN
         CALL MATCUT (FA,CUTF,LM2,NORBS,SPARFA)
         IF(UHF) THEN
            CALL MATCUT (FB,CUTF,LM2,NORBS,SPARFB)
         ENDIF
      ENDIF
C *** CALCULATE THE ELECTRONIC ENERGY.
      EFA    = PT5*DOTMAT(PA,FA,LM2,NORBS,0)
      EHA    = PT5*DOTMAT(PA,H,LM2,NORBS,0)
      IF(UHF) THEN
         EFB = PT5*DOTMAT(PB,FB,LM2,NORBS,0)
         EHB = PT5*DOTMAT(PB,H,LM2,NORBS,0)
      ELSE
         EFB = EFA
         EHB = EHA
      ENDIF
      EF     = EFA+EFB
      EH     = EHA+EHB
      EE     = EF+EH
      EERROR = EE-EEP
      EEP    = EE
C *** PRINT OR SAVE SCF INFORMATION.
      IF(NITER.EQ.0 .AND. PRT .AND. NPRINT.GE.5) THEN
         WRITE(NB6,510) NITER,EH
         WRITE(NB6,510) NITER,EE,EF
      ENDIF
      IF(PRT2 .OR. (NITER.GT.0 .AND. NITER.LE.ITS)) THEN
         IF(DODIIS) THEN
            MEXT  = 'DIIS'
         ELSE IF(KEXT.GE.2) THEN
            MEXT  = 'DAMP'
         ELSE IF(KEXT.EQ.1) THEN
            MEXT  = 'YES '
         ELSE
            MEXT  = 'NO  '
         ENDIF
         IF(NCG(7).EQ.MCG(7)) THEN
            MFAST = 'NO  '
         ELSE
            MFAST = 'YES '
         ENDIF
         IF(PRT2) THEN
            IF(DODIIS) THEN
               WRITE(NB6,515) NITER,EE,EERROR,PL,MEXT,MFAST,EDMAX,
     1                        (NCG(I)-MCG(I),I=1,6)
            ELSE
               WRITE(NB6,510) NITER,EE,EERROR,PL,MEXT,MFAST,
     1                        (NCG(I)-MCG(I),I=1,6)
            ENDIF
         ELSE
            EES(NITER) = EE
            ERS(NITER) = EERROR
            PLS(NITER) = PL
            MXS(NITER) = MEXT
            MFS(NITER) = MFAST
            EDS(NITER) = EDMAX
         ENDIF
      ENDIF
C *** DEBUG PRINT.
      IF(NPRINT.GE.3) THEN
         IF(CUTF.GT.ZERO) WRITE(NB6,600) CUTF,SPARH
         IF(CUTF.GT.ZERO) WRITE(NB6,610) CUTF,SPARFA
         IF(CUTP.GT.ZERO) WRITE(NB6,620) CUTP,SPARPA
         IF(UHF) THEN
            IF(CUTF.GT.ZERO) WRITE(NB6,630) CUTF,SPARFB
            IF(CUTP.GT.ZERO) WRITE(NB6,640) CUTP,SPARPB
         ENDIF
      ENDIF
      IF(NPRINT.GE.9) THEN
         WRITE(NB6,700) NITER,EH,EF
         WRITE(NB6,710) NITER
         CALL MATPRT(H,NORBS,NORBS,LM2,N)
         WRITE(NB6,720) NITER
         CALL MATPRT(FA,NORBS,NORBS,LM2,N)
         WRITE(NB6,730) NITER
         CALL MATPRT(PA,NORBS,NORBS,LM2,N)
         WRITE(6,740) NITER,LM6
         WRITE(6,750) (Q(I),I=1,LM6)
         WRITE(6,760) (PPB(I),I=1,LM6)
      ENDIF
C *** SPECIAL OPTION: RETURN AFTER COMPUTING ENERGY FOR GIVEN DENSITY.
      IF(KITSCF.LT.0) RETURN
C *** TEST FOR SCF CONVERGENCE.
      IF(NITER.EQ.0) GO TO 50
      IF(KEXT.EQ.-1) GO TO 100
      DERROR = ABS(EERROR)
      IF(DERROR.LT.SCFCRT .AND. PL.LT.PLCRT .AND. KEXT.NE.1) THEN
         ITSAVE = NITER+1
         KEXT   =-1
      ELSE
         IF(NITER.GT.KITSCF) GO TO 60
      ENDIF
C *** DIAGONALISE THE F-MATRIX.
   50 CONTINUE
      DO 55 I=1,10
      MCG(I) = NCG(I)
   55 CONTINUE
      NITER  = NITER+1
      CALL MATCOP (PA,CA,LM2,NORBS,1)
      CALL CGDMS  (FA,GDMS,HDMS,CA,Q1,Q2,Q3,LM2,NORBS,MPDIAG,
     1             NITER,NCG,PLCRT,ICALL)
      IF(ICALL.LT.0) RETURN
      CALL BORDP2 (DA,PA,CA,PL,LM2,LM3,NORBS,NITER,KEXT)
      IF(UHF) THEN
         CALL MATCOP (PB,CB,LM2,NORBS,1)
         CALL CGDMS  (FB,GDMS,HDMS,CB,Q1,Q2,Q3,LM2,NORBS,MPDIAG,
     1                NITER,NCG,PLCRT,ICALL)
         IF(ICALL.LT.0) RETURN
         CALL BORDP2 (DB,PB,CB,PM,LM2,LM3,NORBS,NITER,KEXT)
         IF(PM.GT.PL) PL=PM
      ENDIF
      GO TO 20
C     *
C *** NO SCF CONVERGENCE.
C     *
   60 CONTINUE
      WRITE(NB6,560) KTITLE
      WRITE(NB6,520)
      IF(.NOT.PRT2) THEN
         IF(IDIIS.LE.0) THEN
            WRITE(NB6,500)
         ELSE
            WRITE(NB6,505)
         ENDIF
         ITSPRT = MIN(NITER,ITS)
         DO 70 I=1,ITSPRT
         IF(IDIIS.GT.0) THEN
            WRITE(NB6,510) I,EES(I),ERS(I),PLS(I),MXS(I),MFS(I),EDS(I)
         ELSE
            WRITE(NB6,510) I,EES(I),ERS(I),PLS(I),MXS(I),MFS(I)
         ENDIF
   70    CONTINUE
         IF(IDIIS.GT.0) THEN
            WRITE(NB6,530) NITER,EE,EERROR,PL,EDMAX
         ELSE
            WRITE(NB6,530) NITER,EE,EERROR,PL
         ENDIF
      ENDIF
      WRITE(NB6,540) SCFCRT,PLCRT
C     IF(KRESET.EQ.1) WRITE(NB6,550)
      IF(ICALL.LT.0)  WRITE(NB6,555)
C     ICALL  = -1 INDICATES FAILURE TO REACH SCF CONVERGENCE.
      ICALL  = -1
C     SECOND ATTEMPT: USE DIIS EXTRAPOLATION (IF NOT YET DONE).
C     DEFAULT OPTIONS: IDIIS=3, KTRIAL=0, NSTART=-1.
      IF(IDIIS.LE.0) THEN
         IN2(9)  = 1
         IN2(67) = 0
         IN2(78) =-1
         GO TO 10
      ENDIF
      IF(IDIIS.GT.0) DEALLOCATE (AC)
      RETURN
C     *
C *** END OF SCF LOOP.
C     *
C *** SCF CONVERGENCE HAS BEEN ACHIEVED.
  100 CONTINUE
      IF(IDIIS.GT.0) DEALLOCATE (AC)
C     SUCCESSFUL SECOND ATTEMPT FOR SCF USING DIIS.
      IF(ICALL.EQ.-1 .AND. IDIIS.GT.0) THEN
         WRITE(NB6,580)
         ICALL = 0
      ENDIF
C *** PRINTING SECTION.
      IF(PRT .AND. NPRINT.GE.-1) THEN
         IF(NPRINT.GE.2)  WRITE(NB6,590) NITER,(NCG(I),I=1,8)
         IF(CUTF.GT.ZERO .OR. CUTP.GT.ZERO) WRITE(NB6,595)
         IF(CUTF.GT.ZERO) WRITE(NB6,600) CUTF,SPARH
         IF(CUTF.GT.ZERO) WRITE(NB6,610) CUTF,SPARFA
         IF(CUTP.GT.ZERO) WRITE(NB6,620) CUTP,SPARPA
      ENDIF
C     PUT MATRICES INTO PACKED LINEAR FORM.
      CALL LINEAR (PA,PA,NORBS,LM2,LM4)
      IF(UHF) THEN
         CALL LINEAR (PB,PB,NORBS,LM2,LM4)
      ENDIF
      IF(PRT2) THEN
         CALL LINEAR (H,H,NORBS,LM2,LM4)
      ENDIF
      IF(PRT2 .OR. LINDIA.EQ.1) THEN
         CALL LINEAR (FA,FA,NORBS,LM2,LM4)
         IF(UHF) THEN
            CALL LINEAR (FB,FB,NORBS,LM2,LM4)
         ENDIF
      ENDIF
C *** PERFORM ONE FINAL DIAGONALIZATION, IF REQUESTED.
      IF(LINDIA.EQ.1) THEN
         MODE = 0
         IF(NPRINT.GE.7) THEN
            WRITE(NB6,800) LINDIA,LM2,LM4,NORBS,NROOT,IDIAG
         ENDIF
         CALL DCOPY  (LM4,FA,1,Q1,1)
         CALL DIAGON (Q1,CA,EA,Q,IWORK,LM2,LM4,NORBS,NROOT,IDIAG,
     1                MODE,INFO)
         IF(UHF) THEN
            CALL DCOPY  (LM4,FB,1,Q1,1)
            CALL DIAGON (Q1,CB,EB,Q,IWORK,LM2,LM4,NORBS,NROOT,IDIAG,
     1                   MODE,INFO)
         ENDIF
      ENDIF
C *** UPDATE GLOBAL STATISTICS.
      DO 110 I=1,8
      NCGTOT(I) = NCGTOT(I)+NCG(I)
  110 CONTINUE
      NCGTOT(9) = NCGTOT(9)+NITER
      NCGTOT(10) = NCGTOT(10)+1
      RETURN
C 400 FORMAT(///5X,'DEBUG PRINT BEFORE STARTING THE SCF ITERATIONS.')
C 410 FORMAT(///5X,'CORE HAMILTONIAN MATRIX H(LM4).'/)
  500 FORMAT(///5X,'INFORMATION ON SCF ITERATIONS.',
     1       // 5X,'NITER',12X,'ENERGY',14X,'DELTAE',14X,'DELTAP',
     2          8X,'EXTRAP',2X,'CONV',2X,'NCG PUR MXM LIN QU1 QU2'/)
  505 FORMAT(///5X,'INFORMATION ON SCF ITERATIONS.',
     1       // 5X,'NITER',12X,'ENERGY',14X,'DELTAE',14X,'DELTAP',
     2          8X,'EXTRAP',2X,'CONV',9X,'DIIS ERROR'/)
  510 FORMAT(   5X,I3,4X,3F20.10,6X,A4,3X,A4,6I4)
  515 FORMAT(   5X,I3,4X,3F20.10,6X,A4,3X,A4,F20.10,6I4)
  520 FORMAT(// 5X,'UNABLE TO ACHIEVE SCF CONVERGENCE'/)
  530 FORMAT(/  5X,I3,4X,3F20.10,17X,F20.10)
  540 FORMAT(/  5X,'CONVERGENCE CRITERIA',7X,2F20.10//)
C 550 FORMAT(   5X,'NO SCF CONVERGENCE IN GRADIENT CALCULATION'//)
  555 FORMAT(/  5X,'FAILURE IN DENSITY MATRIX SEARCH'//)
  560 FORMAT(///5X,A)
  570 FORMAT(// 5X,'DIIS EXTRAPOLATION HAS BEEN TURNED ON.')
  580 FORMAT(/  5X,'SCF CONVERGENCE HAS BEEN ACHIEVED USING DIIS.')
  590 FORMAT(/  1X,'DIRCG : TOTAL NUMBER OF SCF ITERATIONS  ',I5,
     1       /  1X,'DIRCG : TOTAL NUMBER OF CG  CYCLES      ',I5,
     2       /  1X,'DIRCG : TOTAL NUMBER OF PURIFICATIONS   ',I5,
     3       /  1X,'DIRCG : TOTAL NUMBER OF MATRIX-MULTIP   ',I5,
     4       /  1X,'DIRCG : LINEAR ROOTS ACCEPTED           ',I5,
     5       /  1X,'DIRCG : QUADRATIC ROOTS, BY PRESELECTION',I5,
     6       /  1X,'DIRCG : QUADRATIC ROOTS, BY COMPARISON  ',I5,
     7       /  1X,'DIRCG : CG SEARCHES CONVERGED           ',I5,
     8       /  1X,'DIRCG : CG SEARCHES NOT CONVERGED       ',I5)
  595 FORMAT(/  1X,'DIRCG : SPARSITY AFTER SCF CONVERGENCE.')
  600 FORMAT(   1X,'DIRCG : CUTH =',G9.2,5X,'SPARSITY OF H =',F7.3,' %')
  610 FORMAT(   1X,'DIRCG : CUTF =',G9.2,5X,'SPARSITY OF F =',F7.3,' %')
  620 FORMAT(   1X,'DIRCG : CUTP =',G9.2,5X,'SPARSITY OF P =',F7.3,' %')
  630 FORMAT(   1X,'DIRCG : CUTF =',G9.2,5X,'SPARSITY OF FB=',F7.3,' %')
  640 FORMAT(   1X,'DIRCG : CUTP =',G9.2,5X,'SPARSITY OF PB=',F7.3,' %')
  650 FORMAT(   1X,'DIRCG : MAXIMUM ASYMMETRY OF FOCK MATRIX =',G20.10)
  660 FORMAT(   1X,'DIRCG : MAXIMUM ASYMMETRY OF FB MATRIX =',G20.10)
  700 FORMAT(/  1X,'DIRCG : NITER =',I5,
     1       /  1X,'DIRCG : EH    =',F20.10,
     2       /  1X,'DIRCG : EF    =',F20.10)
  710 FORMAT(// 1X,'CORE HAMILTONIAN MATRIX (H): NITER =',I4)
  720 FORMAT(// 1X,'CURRENT FOCK MATRIX (FA): NITER =',I4)
  730 FORMAT(// 1X,'CURRENT DENSITY MATRIX (PA): NITER =',I4)
  740 FORMAT(/  1X,'DIRCG : NITER =',I5,
     1       /  1X,'DIRCG : LM6   =',I5)
  750 FORMAT(   1X,'DIRCG : PPA',10F10.5)
  760 FORMAT(   1X,'DIRCG : PPB',10F10.5)
  800 FORMAT(/  1X,'DIRCG : LINDIA  LM2   LM4 NORBS NROOT IDIAG',
     1       /  1X,'DIRCG :',6I6)
      END
