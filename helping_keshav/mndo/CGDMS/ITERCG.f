      SUBROUTINE ITERCG (CA,CB,DA,DB,EA,EB,FA,FB,H,PA,PB,Q,W,D2,
     1                   GDMS,HDMS,Q1,Q2,Q3,
     2                   LM2,LM3,LM4,LM6,LM9,LMD2,LMQ,
     3                   NROOT,NOPRT,ICALL)
C     *
C     SCF ITERATIONS USING CG-DMS.
C     CONJUGATE GRADIENT DENSITY MATRIX SEARCH USING FULL ARRAYS.
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     CA(LM2,*) SQUARE RHF OR UHF-ALPHA DENSITY MATRIX (S).
C     CA(LM2,*) OPTIONALLY RHF OR UHF-ALPHA MO EIGENVECTORS (O).
C     CB(LM2,*) SQUARE UHF-BETA DENSITY MATRIX (S).
C     CB(LM2,*) OPTIONALLY UHF-BETA MO EIGENVECTORS (O).
C     DA(LM4)   RHF OR UHF-ALPHA DIFFERENCE DENSITY MATRIX (S).
C     DB(LM4)   UHF-BETA DIFFERENCE DENSITY MATRIX (S).
C     EA(LM3)   OPTIONALLY RHF OR UHF-ALPHA MO EIGENVALUES (O).
C     EB(LM3)   OPTIONALLY UHF-BETA MO EIGENVALUES (O).
C     FA(LM4)   RHF OR UHF-ALPHA FOCK MATRIX (O).
C     FB(LM4)   UHF-BETA FOCK MATRIX (O).
C     H(LM4)    CORE HAMILTONIAN MATRIX (I).
C     PA(LM4)   RHF OR UHF-ALPHA DENSITY MATRIX (I).
C     PB(LM4)   UHF-BETA DENSITY MATRIX (I).
C     Q(LM6)    SCRATCH ARRAY USED FOR VARIOUS PURPOSES (S).
C     W(LM9)    TWO-ELECTRON INTEGRALS (I).
C     D2(LMD2)  DIELECTRIC MATRIX FOR COSMO SOLVATION TREATMENT (I).
C     LMQ       TOTAL NUMBER OF SOLUTE CHARGES IN COSMO (I).
C     NROOT     OPTIONALLY NUMBER OF MO EIGENVECTORS REQUIRED (I).
C     NOPRT     LOGICAL PRINTING FLAG: NO OUTPUT IF NOPRT IS TRUE (I).
C     ICALL     ERROR FLAG (I,O), NORMALLY NOT CHANGED.
C               =-1 ON OUTPUT: NO SCF CONVERGENCE OR CGDMS ERROR.
C     *
      USE LIMIT, ONLY: LMX
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (ITS=20)
      LOGICAL DODIIS,LFOCK
C     LOGICAL HALFEL
      LOGICAL NOPRT,PRT,PRT2,UHF
      CHARACTER*80 KTITLE,KOMENT
      CHARACTER*4 MEXT,MFAST
      CHARACTER*4 MXS(ITS),MFS(ITS)
      COMMON
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./ENERGT/ EE,ENUCLR,EAT,ATHEAT
     ./FLAG1 / KTITLE,KOMENT
     ./INOPT2/ IN2(300)
     ./LMDIIS/ LDIIS1,LDIIS2,LDIIS3,LDIIS4,LDIIS5,LDIIS6,MXDIIS,MX1P,LMD
     ./NBFILE/ NBF(20)
     ./ORBITS/ NUMB,NORBS,NMOS,NALPHA,NBETA
     ./SCFPRT/ EBIND(6),ITSAVE
     ./SCRT  / SCFCRT,PLCRT,SCFCRS(2)
     ./STATCG/ NCGTOT(20)
     ./UHF   / UHF
C     ARRAYS IN THE ARGUMENT LIST.
      DIMENSION CA(LM2,LM3),CB(LM2,LM3),EA(LM3),EB(LM3)
      DIMENSION DA(LM4),DB(LM4),FA(LM4),FB(LM4),H(LM4)
      DIMENSION PA(LM4),PB(LM4),Q(LM2*8),W(LM9),D2(LMD2)
      DIMENSION GDMS(LM2,LM3),HDMS(LM2,LM3)
      DIMENSION Q1(LM2,LM3),Q2(LM2,LM3),Q3(LM2,LM3)
C     LOCAL SCRATCH ARRAYS.
      DIMENSION EDS(ITS),EES(ITS),ERS(ITS),PLS(ITS)
      DIMENSION IWORK(6*LMX)
      DIMENSION NCG(10),MCG(10)
C     ALLOCATABLE SCRATCH ARRAY FOR DIIS TREATMENT.
      DOUBLE PRECISION, DIMENSION (:), ALLOCATABLE :: AC
C *** FILE NUMBERS.
      NB1    = NBF(1)
      NB3    = NBF(3)
      NB6    = NBF(6)
C *** INPUT OPTIONS.
   10 CONTINUE
      IDIIS  = IN2(9)
      IDIIS1 = MAX(1,MOD(IDIIS,10))
      JDIIS  = IDIIS/10
      ICOSMO = IN2(28)
      LINDIA = IN2(57)
C     IMULT  = IN2(66)
      KTRIAL = IN2(67)
      KITSCF = IN2(71)
      NPRINT = IN2(72)
      IDIAG  = IN2(74)
      IMODE  = IN2(211)
      INOUT  = IN2(212)
C *** INITIALIZATION.
      DO 15 I=1,10
      NCG(I) = 0
      MCG(I) = 0
   15 CONTINUE
      ITSAVE = 0
      KEXT   = 0
      NDIIS  = 0
      NITER  = 0
      EEP    = ZERO
      PL     = ZERO
C     HALFEL = .NOT.UHF .AND. IMULT.GT.0
      PRT    = .NOT.NOPRT
      PRT2   = PRT .AND. NPRINT.GE.2
      LFOCK  = IMODE.LT.-1 .AND. LM6.GE.(-IMODE)
C *** DEFINE INITIAL DENSITY MATRIX.
      MPDIAG = 0
      IF(KTRIAL.GE.0) THEN
         CALL GUESSP (CA,CB,PA,PB,LM2,LM3,LM4,MPDIAG)
      ENDIF
C *** PRINTING SECTION BEFORE SCF ITERATIONS.
C     SECOND ATTEMPT FOR SCF USING DIIS.
      IF(ICALL.EQ.-1 .AND. IDIIS.GT.0) THEN
         WRITE(NB6,570)
C     DEBUG PRINT OF CORE HAMILTONIAN AND TWO-ELECTRON INTEGRALS.
      ELSE IF(PRT .AND. NPRINT.GE.5) THEN
         WRITE(NB6,400)
         WRITE(NB6,410)
         CALL VECPRT(H,LM4,NORBS)
         IF(IMODE.LE.0) THEN
            IF(LM6.LE.100 .OR. NPRINT.GT.5) THEN
               LM6PRT = LM6
               WRITE(NB6,420)
            ELSE
               LM6PRT = 100
               WRITE(NB6,430) LM6PRT
            ENDIF
            CALL WSTORE (W,LM6,-1)
            CALL MATPRT (W,LM6PRT,LM6PRT,LM6,LM6)
            CALL WSTORE (W,LM6,0)
         ENDIF
      ENDIF
C     HEADER FOR DETAILED OUTPUT.
      IF(PRT2) THEN
         IF(IDIIS.LE.0) THEN
            WRITE(NB6,500)
         ELSE
            WRITE(NB6,505)
         ENDIF
      ENDIF
C *** FILE HANDLING.
      IF(INOUT.GT.0) THEN
         REWIND NB1
         READ(NB1) PA
         IF(UHF) READ(NB1) PB
      ENDIF
      IF(INOUT.GE.2) THEN
         REWIND NB3
         WRITE(NB3) H
      ENDIF
C *** ALLOCATE DIIS SCRATCH ARRAY.
      IF(IDIIS.GT.0) ALLOCATE (AC(LMD))
C     *
C *** START OF SCF LOOP.
C     *
C *** CONSTRUCT THE F-MATRIX FOR RHF OR THE FALPHA-MATRIX FOR UHF.
   20 CONTINUE
      IF(INOUT.LT.2) THEN
         DO 30 I=1,LM4
         FA(I)  = H(I)
   30    CONTINUE
      ELSE
         REWIND NB3
         READ(NB3) FA
      ENDIF
      CALL ESCF  (EHA,NORBS,PA,FA,LM4)
      IF(IMODE.GT.0) THEN
         CALL FOCK2 (FA,PA,PB,Q1,W,LM4,LM6,LM9)
         CALL FOCK1 (FA,PA,PB,LM4)
      ELSE
         IF(LFOCK) THEN
            CALL FOCK  (FA,PA,PB,Q1,W,LM4,LM6)
         ELSE
            CALL FOCKX (FA,PA,PB,Q1,W,LM4,LM6)
         ENDIF
      ENDIF
C     INCLUDE TERMS FROM COSMO SOLVATION MODEL.
      IF(ICOSMO.GT.0) CALL ADDFCK (FA,PA,PB,Q1,D2,D2,LM4,LMD2,LMQ)
C *** CONSTRUCT THE FBETA-MATRIX FOR UHF.
      IF(UHF) THEN
         IF(INOUT.LT.2) THEN
            DO 40 I=1,LM4
            FB(I)  = H(I)
   40       CONTINUE
         ELSE
            REWIND NB3
            READ(NB3) FB
         ENDIF
         CALL ESCF  (EHB,NORBS,PB,FB,LM4)
         IF(IMODE.GT.0) THEN
            CALL FOCK2 (FB,PB,PA,Q1,W,LM4,LM6,LM9)
            CALL FOCK1 (FB,PB,PA,LM4)
         ELSE
            IF(LFOCK) THEN
               CALL FOCK  (FB,PB,PA,Q1,W,LM4,LM6)
            ELSE
               CALL FOCKX (FB,PB,PA,Q1,W,LM4,LM6)
            ENDIF
         ENDIF
C        INCLUDE TERMS FROM COSMO SOLVATION MODEL.
         IF(ICOSMO.GT.0) CALL ADDFCK (FB,PA,PB,Q1,D2,D2,LM4,LMD2,LMQ)
      ENDIF
C *** APPLY DIIS CONVERGENCE ACCELERATION.
      DODIIS = IDIIS.GT.0 .AND. NITER.GE.IDIIS1 .AND. KEXT.NE.-1
      IF(DODIIS) THEN
         CALL DIIS (FA,FB,PA,PB,AC(LDIIS1),AC(LDIIS6),AC(LDIIS2),
     1              AC(LDIIS3),AC(LDIIS4),AC(LDIIS5),LM2,LM4,NORBS,
     2              MXDIIS,MX1P,NDIIS,JDIIS,NPRINT,EDMAX)
      ENDIF
C *** CALCULATE THE ELECTRONIC ENERGY.
      CALL ESCF (EFA,NORBS,PA,FA,LM4)
      IF(UHF) THEN
         CALL ESCF (EFB,NORBS,PB,FB,LM4)
      ELSE
         EFB = EFA
         EHB = EHA
      ENDIF
      EF     = EFA+EFB
      EH     = EHA+EHB
      EE     = EF+EH
      EERROR = EE-EEP
      EEP    = EE
C *** SAVE THE F-MATRIX, IF NECESSARY.
      IF(INOUT.GE.2 .AND. KEXT.EQ.-1) THEN
         WRITE(NB3) FA
         IF(UHF) WRITE(NB3) FB
      ENDIF
C *** PRINT OR SAVE SCF INFORMATION.
      IF(NITER.EQ.0 .AND. PRT .AND. NPRINT.GE.5) THEN
         WRITE(NB6,510) NITER,EH
         WRITE(NB6,510) NITER,EE,EF
      ENDIF
      IF(PRT2 .OR. (NITER.GT.0 .AND. NITER.LE.ITS)) THEN
         IF(DODIIS) THEN
            MEXT  = 'DIIS'
         ELSE IF(KEXT.GE.2) THEN
            MEXT  = 'DAMP'
         ELSE IF(KEXT.EQ.1) THEN
            MEXT  = 'YES '
         ELSE
            MEXT  = 'NO  '
         ENDIF
         IF(NCG(7).EQ.MCG(7)) THEN
            MFAST = 'NO  '
         ELSE
            MFAST = 'YES '
         ENDIF
         IF(PRT2) THEN
            IF(DODIIS) THEN
               WRITE(NB6,515) NITER,EE,EERROR,PL,MEXT,MFAST,EDMAX,
     1                        (NCG(I)-MCG(I),I=1,6)
            ELSE
               WRITE(NB6,510) NITER,EE,EERROR,PL,MEXT,MFAST,
     1                        (NCG(I)-MCG(I),I=1,6)
            ENDIF
         ELSE
            EES(NITER) = EE
            ERS(NITER) = EERROR
            PLS(NITER) = PL
            MXS(NITER) = MEXT
            MFS(NITER) = MFAST
            EDS(NITER) = EDMAX
         ENDIF
      ENDIF
C *** SPECIAL OPTION: RETURN AFTER COMPUTING ENERGY FOR GIVEN DENSITY.
      IF(KITSCF.LT.0) RETURN
C *** TEST FOR SCF CONVERGENCE.
      IF(NITER.EQ.0) GO TO 50
      IF(KEXT.EQ.-1) GO TO 100
      DERROR = ABS(EERROR)
      IF(DERROR.LT.SCFCRT .AND. PL.LT.PLCRT .AND. KEXT.NE.1) THEN
         ITSAVE = NITER+1
         KEXT   =-1
      ELSE
         IF(NITER.GT.KITSCF) GO TO 60
      ENDIF
C *** DIAGONALISE THE F-MATRIX.
   50 CONTINUE
      DO 55 I=1,10
      MCG(I) = NCG(I)
   55 CONTINUE
      NITER  = NITER+1
      CALL SQUARE (FA,FA,NORBS,LM2,LM4)
      CALL SQUARE (PA,CA,NORBS,LM2,LM4)
      CALL CGDMS  (FA,GDMS,HDMS,CA,Q1,Q2,Q3,LM2,NORBS,MPDIAG,
     1             NITER,NCG,PLCRT,ICALL)
      IF(ICALL.LT.0) RETURN
      CALL LINEAR (CA,CA,NORBS,LM2,LM4)
      CALL BORDCG (DA,PA,CA,PL,LM4,NORBS,NITER,KEXT)
      IF(UHF) THEN
         CALL SQUARE (FB,FB,NORBS,LM2,LM4)
         CALL SQUARE (PB,CB,NORBS,LM2,LM4)
         CALL CGDMS  (FB,GDMS,HDMS,CB,Q1,Q2,Q3,LM2,NORBS,MPDIAG,
     1                NITER,NCG,PLCRT,ICALL)
         IF(ICALL.LT.0) RETURN
         CALL LINEAR (CB,CB,NORBS,LM2,LM4)
         CALL BORDCG (DB,PB,CB,PM,LM4,NORBS,NITER,KEXT)
         IF(PM.GT.PL) PL=PM
      ENDIF
      GO TO 20
C *** NO SCF CONVERGENCE.
   60 CONTINUE
      WRITE(NB6,560) KTITLE
      WRITE(NB6,520)
      IF(.NOT.PRT2) THEN
         IF(IDIIS.LE.0) THEN
            WRITE(NB6,500)
         ELSE
            WRITE(NB6,505)
         ENDIF
         ITSPRT = MIN(NITER,ITS)
         DO 70 I=1,ITSPRT
         IF(IDIIS.GT.0) THEN
            WRITE(NB6,510) I,EES(I),ERS(I),PLS(I),MXS(I),MFS(I),EDS(I)
         ELSE
            WRITE(NB6,510) I,EES(I),ERS(I),PLS(I),MXS(I),MFS(I)
         ENDIF
   70    CONTINUE
         IF(IDIIS.GT.0) THEN
            WRITE(NB6,530) NITER,EE,EERROR,PL,EDMAX
         ELSE
            WRITE(NB6,530) NITER,EE,EERROR,PL
         ENDIF
      ENDIF
      WRITE(NB6,540) SCFCRT,PLCRT
C     IF(KRESET.EQ.1) WRITE(NB6,550)
      IF(ICALL.LT.0)  WRITE(NB6,555)
C     ICALL  = -1 INDICATES FAILURE TO REACH SCF CONVERGENCE.
      ICALL  = -1
C     SECOND ATTEMPT: USE DIIS EXTRAPOLATION (IF NOT YET DONE).
C     DEFAULT OPTIONS: IDIIS=3, KTRIAL=0, NSTART=-1.
      IF(IDIIS.LE.0) THEN
         IN2(9)  = 1
         IN2(67) = 0
         IN2(78) =-1
         GO TO 10
      ENDIF
      IF(IDIIS.GT.0) DEALLOCATE (AC)
      RETURN
C     *
C *** END OF SCF LOOP.
C     *
C *** SCF CONVERGENCE HAS BEEN ACHIEVED.
  100 CONTINUE
      IF(IDIIS.GT.0) DEALLOCATE (AC)
C     SUCCESSFUL SECOND ATTEMPT FOR SCF USING DIIS.
      IF(ICALL.EQ.-1 .AND. IDIIS.GT.0) THEN
         WRITE(NB6,580)
         ICALL = 0
      ENDIF
C     SAVE FINAL DENSITY MATRIX, IF NECESSARY.
      IF(INOUT.GT.0) THEN
         REWIND NB1
         WRITE(NB1) PA
         IF(UHF) WRITE(NB1) PB
      ENDIF
C     DEBUG PRINT.
      IF(NPRINT.GE.2) THEN
         WRITE(NB6,590) NITER,(NCG(I),I=1,8)
      ENDIF
C *** PERFORM ONE FINAL DIAGONALIZATION, IF REQUESTED.
      IF(LINDIA.EQ.1) THEN
         MODE = 0
         IF(NPRINT.GE.6) THEN
            WRITE(NB6,800) LINDIA,LM2,LM4,NORBS,NROOT,IDIAG
         ENDIF
         CALL DCOPY  (LM4,FA,1,Q1,1)
         CALL DIAGON (Q1,CA,EA,Q,IWORK,LM2,LM4,NORBS,NROOT,IDIAG,
     1                MODE,INFO)
         IF(UHF) THEN
            CALL DCOPY  (LM4,FB,1,Q1,1)
            CALL DIAGON (Q1,CB,EB,Q,IWORK,LM2,LM4,NORBS,NROOT,IDIAG,
     1                   MODE,INFO)
         ENDIF
      ENDIF
C *** UPDATE GLOBAL STATISTICS.
      DO 110 I=1,8
      NCGTOT(I) = NCGTOT(I)+NCG(I)
  110 CONTINUE
      NCGTOT(9) = NCGTOT(9)+NITER
      NCGTOT(10) = NCGTOT(10)+1
      RETURN
  400 FORMAT(///5X,'DEBUG PRINT BEFORE STARTING THE SCF ITERATIONS.')
  410 FORMAT(///5X,'CORE HAMILTONIAN MATRIX H(LM4).'/)
  420 FORMAT(///5X,'TWO-ELECTRON INTEGRALS W(LM6,LM6).'/)
  430 FORMAT(///5X,'TWO-ELECTRON INTEGRALS W(LM6,LM6) UP TO LM6 = ',I4/)
  500 FORMAT(///5X,'INFORMATION ON SCF ITERATIONS.',
     1       // 5X,'NITER',12X,'ENERGY',14X,'DELTAE',14X,'DELTAP',
     2          8X,'EXTRAP',2X,'CONV',2X,'NCG PUR MXM LIN QU1 QU2'/)
  505 FORMAT(///5X,'INFORMATION ON SCF ITERATIONS.',
     1       // 5X,'NITER',12X,'ENERGY',14X,'DELTAE',14X,'DELTAP',
     2          8X,'EXTRAP',2X,'CONV',9X,'DIIS ERROR'/)
  510 FORMAT(   5X,I3,4X,3F20.10,6X,A4,3X,A4,6I4)
  515 FORMAT(   5X,I3,4X,3F20.10,6X,A4,3X,A4,F20.10,6I4)
  520 FORMAT(// 5X,'UNABLE TO ACHIEVE SCF CONVERGENCE'/)
  530 FORMAT(/  5X,I3,4X,3F20.10,17X,F20.10)
  540 FORMAT(/  5X,'CONVERGENCE CRITERIA',7X,2F20.10//)
C 550 FORMAT(   5X,'NO SCF CONVERGENCE IN GRADIENT CALCULATION'//)
  555 FORMAT(/  5X,'FAILURE IN DENSITY MATRIX SEARCH'//)
  560 FORMAT(///5X,A)
  570 FORMAT(// 5X,'DIIS EXTRAPOLATION HAS BEEN TURNED ON.')
  580 FORMAT(/  5X,'SCF CONVERGENCE HAS BEEN ACHIEVED USING DIIS.')
  590 FORMAT(/  1X,'ITERCG: TOTAL NUMBER OF SCF ITERATIONS  ',I5,
     1       /  1X,'ITERCG: TOTAL NUMBER OF CG  CYCLES      ',I5,
     2       /  1X,'ITERCG: TOTAL NUMBER OF PURIFICATIONS   ',I5,
     3       /  1X,'ITERCG: TOTAL NUMBER OF MATRIX-MULTIP   ',I5,
     4       /  1X,'ITERCG: LINEAR ROOTS ACCEPTED           ',I5,
     5       /  1X,'ITERCG: QUADRATIC ROOTS, BY PRESELECTION',I5,
     6       /  1X,'ITERCG: QUADRATIC ROOTS, BY COMPARISON  ',I5,
     7       /  1X,'ITERCG: CG SEARCHES CONVERGED           ',I5,
     8       /  1X,'ITERCG: CG SEARCHES NOT CONVERGED       ',I5)
  800 FORMAT(/  1X,'ITERCG: LINDIA  LM2   LM4 NORBS NROOT IDIAG',
     1       /  1X,'ITERCG:',6I6)
      END
