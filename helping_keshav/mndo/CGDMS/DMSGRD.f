C     ******************************************************************
      SUBROUTINE DMSGRD (F,G,P,Q1,Q2,Q3,XMU,LM2,N,MPDIAG,NPRINT,NCG,PRC)
C     *
C     GRADIENT OF THE FUNCTIONAL USED IN THE DENSITY MATRIX SEARCH.
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     F(LM2,*)  FOCK MATRIX (I).
C     G(LM2,*)  GRADIENT MATRIX (O).
C     P(LM2,*)  DENSITY MATRIX (I).
C     Q1(LM2,*) SCRATCH MATRIX (S), PRODUCT FP (O).
C     Q2(LM2,*) SCRATCH MATRIX (S), SUM FP+(FP)t (O).
C     Q3(LM2)   SCRATCH VECTOR (S), DIAGONAL PRECONDITIONER (O).
C     XMU       LAGRANGEAN MULTIPLIER (O).
C     LM2       LEADING DIMENSION OF ALL MATRICES (I).
C     N         NUMBER OF ORBITALS (I).
C     MPDIAG    TYPE OF DENSITY MATRIX (I).
C     NPRINT    PRINTING FLAG (I).
C     NCG(*)    TOTAL NUMBER OF OPERATIONS DURING CG SEARCHES (I,O).
C               (3) MATRIX MULTIPLICATIONS DONE.
C     PRC       LOGICAL FLAG FOR PRECONDITIONING (I).
C     *
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL PRC
      PARAMETER (ZERO=0.0D0)
      PARAMETER (ONE=1.0D0)
      PARAMETER (TWO=2.0D0)
      PARAMETER (THREE=3.0D0)
      PARAMETER (SIX=6.0D0)
      COMMON
     ./NBFILE/ NBF(20)
      DIMENSION F(LM2,N),P(LM2,N),G(LM2,N)
      DIMENSION Q1(LM2,N),Q2(LM2,N),Q3(LM2)
      DIMENSION NCG(10)
C *** DEBUG PRINT - INPUT DATA.
      NB6 = NBF(6)
      IF(NPRINT.GE.9) THEN
         WRITE (NB6,540)
         CALL MATPRT (F,N,N,LM2,N)
         WRITE (NB6,550)
         CALL MATPRT (P,N,N,LM2,N)
      ENDIF
C *** GENERAL FORMULAS FOR GRADIENT MATRIX.
C     GPROD  = 3 (FP+PF) - 2 (FPP+PFP+PPF)
C     XMU    = - Tr(GPROD) / N
C     G      = GPROD + XMU * UNIT-MATRIX
C     XMU IS A LAGRANGEAN MULTIPLIER WHICH ENFORCES NORMALIZATION.
C     *
C     DENOTING THE TRANSPOSE OF MATRIX A BY At, WE HAVE IN GENERAL:
C     (AB)t  = Bt At 
C     SINCE F AND P ARE SYMMETRIC MATRICES, WE MAY WRITE:
C     GPROD  = 3 [FP+(FP)t] - 2 [(FP)P+P(FP)+P(FP)t]
C     GPROD  = 3 [FP+(FP)t] - 2 [(FP)P+P{(FP)+(FP)t}]
C     *
C     IMPLEMENTATION OF THE GENERAL FORMULA:
C     Q1     = FP
C     Q2     = FP+(FP)t
C     GPROD  = 3*Q1 - 2*Q1*P - 2*P*Q2
C     *
C     SIMPLIFIED IMPLEMENTATION WHEN F AND P COMMUTE:
C     GPROD  = 6 FP - 6 PFP
C     GPROD  = 6*Q1 - 6*P*Q1
C     *
C     SPECIAL CASE: DIAGONAL P MATRIX WITH EQUAL ELEMENTS.
C     P      = p*I  (SCALAR p, UNIT MATRIX I)
C     GPROD  = 6*p*(1-p)*F
C     *
C *** SPECIAL CASE: DIAGONAL P MATRIX WITH EQUAL ELEMENTS.
      IF(MPDIAG.GE.2) THEN
         PEL    = P(1,1)
         FACTOR = SIX*PEL*(ONE-PEL)
         CALL MATSCL (F,G,FACTOR,LM2,N)
         GO TO 10
      ENDIF
C *** COMPUTE PRODUCT Q1=FP BY MATRIX MULTIPLICATION.
      CALL DGEMM ('N','N',LM2,N,N,ONE,F,LM2,P,LM2,ZERO,Q1,LM2)
      COMMFP = COMMUT(Q1,LM2,N)
C     DEBUG PRINT.
      IF(NPRINT.GE.9) THEN
         WRITE (NB6,560)
         CALL MATPRT (Q1,N,N,LM2,N)
      ENDIF
c *** FULL CALCULATION FOR NON-VANISHING COMMUTATOR (COMMFP).
      IF(COMMFP.NE.ZERO) THEN
C        COMPUTE SUM Q2=FP+(FP)t.
         CALL TRMSUM (Q1,Q2,LM2,N)
C        INCLUDE FIRST TERM OF GPROD.
         CALL MATSCL (Q2,G,THREE,LM2,N)
C        ADD OTHER TERMS OF GPROD VIA MATRIX MULTIPLICATIONS.
         CALL DGEMM ('N','N',LM2,N,N,-TWO,Q1,LM2,P,LM2,ONE,G,LM2)
         CALL DGEMM ('N','N',LM2,N,N,-TWO,P,LM2,Q2,LM2,ONE,G,LM2)
         NCG(3) = NCG(3)+3
C *** SIMPLIFIED CALCULATION FOR VANISHING COMMUTATOR (COMMFP).
      ELSE
         CALL MATSCL (Q1,G,SIX,LM2,N)
         CALL DGEMM ('N','N',LM2,N,N,-SIX,P,LM2,Q1,LM2,ONE,G,LM2)
         NCG(3) = NCG(3)+2
      ENDIF
C *** DIAGONAL PRECONDITIONING.
      IF(PRC) THEN
         IF(NPRINT.GE.7) WRITE(NB6,700)
         CALL PRECO (F,G,P,Q1,Q3,LM2,N,NPRINT)
      ENDIF
   10 CONTINUE
C *** COMPUTE LAGRANGEAN MULTIPLIER.
      XMU    = -TRACE1(G,LM2,N)/DBLE(N)
C *** INCLUDE LAGRANGEAN TERM INTO THE GRADIENT MATRIX.
      DO 20 I=1,N
      G(I,I) = XMU+G(I,I)
   20 CONTINUE
C *** DEBUG PRINT - RESULTS.
      IF(NPRINT.GE.7) THEN
         WRITE (NB6,500) XMU
         WRITE (NB6,510) COMMFP
         IF(NPRINT.GE.8) THEN
            TRG = TRACE1(G,LM2,N)
            WRITE (NB6,520) TRG
            WRITE (NB6,530)
            CALL MATPRT (G,N,N,LM2,N)
            IF(NPRINT.GT.9) THEN
               IF(COMMFP.NE.ZERO) THEN
                  WRITE (NB6,570)
                  CALL MATPRT (Q2,N,N,LM2,N)
               ENDIF
            ENDIF
         ENDIF
      ENDIF
      RETURN
  500 FORMAT(/  1X,'DMSGRD: LAGRANGEAN MULTIPLIER XMU: ',G20.10)
  510 FORMAT(/  1X,'DMSGRD: COMMUTATOR FP-PF, MAXIMUM: ',G20.10)
  520 FORMAT(   1X,'DMSGRD: TRACE OF GRADIENT MATRIX : ',G20.10)
  530 FORMAT(///1X,'DMSGRD: GRADIENT MATRIX G.'/)
  540 FORMAT(///1X,'DMSGRD: FOCK MATRIX F.'/)
  550 FORMAT(///1X,'DMSGRD: DENSITY MATRIX P.'/)
  560 FORMAT(///1X,'DMSGRD: PRODUCT MATRIX FP.'/)
  570 FORMAT(///1X,'DMSGRD: SUM FP + FP(TRANSPOSED).'/)
  700 FORMAT(   1X,'DMSGRD: DIAGONAL PRECONDITIONING ACTIVATED')
      END
