C     ******************************************************************
      SUBROUTINE CGDMS (F,G,H,P,Q1,Q2,Q3,LM2,N,MPDIAG,NITER,NCG,PCGCRT,
     1                  ICALL)
C     *
C     CONJUGATE GRADIENT DENSITY MATRIX SEARCH (CG-DMS).
C     STANDARD FORTRAN CODE USING FULL SQUARE MATRICES.
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     F(LM2,*)  FOCK MATRIX (I), UNCHANGED.
C     G(LM2,*)  GRADIENT MATRIX (S).
C     H(LM2,*)  SEARCH DIRECTION MATRIX (S).
C     P(LM2,*)  DENSITY MATRIX (I,O).
C     Q1(LM2,*) SCRATCH ARRAY (S).
C     Q2(LM2,*) SCRATCH ARRAY (S).
C     Q3(LM2,*) SCRATCH ARRAY (S).
C     LM2       LEADING DIMENSION OF ALL MATRICES (I).
C     N         NUMBER OF ORBITALS (I).
C     MPDIAG    TYPE OF DENSITY MATRIX (I,O).
C     NITER     NUMBER OF CURRENT SCF ITERATION (I).
C     NCG(*)    TOTAL NUMBER OF OPERATIONS DURING CG SEARCHES (I,O).
C               (1) CG CYCLES DONE.
C               (2) PURIFICATIONS DONE.
C               (3) MATRIX MULTIPLICATIONS DONE.
C               (4) LINEAR ROOTS ACCEPTED.
C               (5) QUADRATIC ROOTS SELECTED ON PHYSICAL GROUNDS.
C               (6) QUADRATIC ROOTS SELECTED BY COMPARISON OF F.
C               (7) CG SEARCHES CONVERGED.
C               (8) CG SEARCHES NOT CONVERGED.
C     PCGCRT    CRITERION ON CONVERGENCE OF DENSITY MATRIX (I).
C     ICALL     ERROR FLAG (I,O), NORMALLY NOT CHANGED.
C               =-1 ON OUTPUT: FATAL CGDMS ERROR.
C     *
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL GETPUR,PRECON
      COMMON
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./INOPT2/ IN2(300)
     ./NBFILE/ NBF(20)
     ./ORBITS/ NUMB,NORBS,NMOS,NALPHA,NBETA
      DIMENSION F(LM2,N),G(LM2,N),H(LM2,N),P(LM2,N)
      DIMENSION Q1(LM2,N),Q2(LM2,N),Q3(LM2,N)
      DIMENSION NCG(10)
      DIMENSION EIG(N),WORK(N)
C *** INITIALIZATION.
      XEL    = DBLE(NALPHA+NBETA)
      NB6    = NBF(6)
      NPRINT = IN2(72)
      MAXCG  = IN2(171)
      MAXPUR = IN2(172)
      MCMAX  = IN2(173)
      MIDEMP = IN2(174)
      MPURIF = IN2(175)
      MLROOT = IN2(176)
      MCGPRE = IN2(177)
      MCGUPD = IN2(178)
      MPSCAL = IN2(179)
C     CRITERIA FOR PURIFICATION.
      IF(MCMAX.GT.0) THEN
         PMCMAX = 10.0D0**(-MCMAX)
      ELSE
         PMCMAX = PCGCRT/TWO
      ENDIF
      IF(MIDEMP.GT.0) THEN
         PIDEMP = 10.0D0**(-MIDEMP)
      ELSE
         PIDEMP = ONE
      ENDIF
C     CRITERIA FOR ROOT SEARCH.
      IF(MLROOT.GT.0) THEN
         XSQMAX = 10.0D0**(-MLROOT)
      ELSE
         XSQMAX = -ONE
      ENDIF
      DIDMAX = ZERO
C     FLAG FOR DIAGONAL PRECONDITIONING.
C     IF(MCGPRE.EQ.1 .AND. MCGUPD.NE.3 .AND. NITER.GE.2) THEN
      IF(MCGPRE.EQ.1 .AND. MCGUPD.NE.3) THEN
         PRECON = .TRUE.
      ELSE
         PRECON = .FALSE.
      ENDIF
C *** DEBUG PRINT.
      IF(NPRINT.GE.5) THEN
         WRITE(NB6,400)
         IF(NPRINT.GE.9) THEN
            WRITE(NB6,410)
            WRITE(NB6,420) (IN2(I),I=171,186)
            WRITE(NB6,430)
            WRITE(NB6,420) LM2,N,NITER,(NCG(I),I=1,8)
            WRITE(NB6,440) NITER
            CALL MATPRT (F,N,N,LM2,N)
C           CALL MATDEB (F,LM2,N,N)
            WRITE(NB6,450) NITER
            CALL MATPRT (P,N,N,LM2,N)
C           CALL MATDEB (P,LM2,N,N)
C           EIGENVALUES OF INITIAL DENSITY MATRIX.
            CALL TRED2 (LM2,N,P,EIG,WORK,Q2)
            CALL TQL2  (LM2,N,EIG,WORK,Q2,IERR) 
            WRITE(NB6,450) NITER
            WRITE(NB6,700) EIG(1),EIG(N)
         ENDIF
      ENDIF
C *** EVALUATE INITIAL GRADIENT (G).
      CALL DMSGRD (F,G,P,Q1,Q2,Q3,XMU,LM2,N,MPDIAG,NPRINT,NCG,PRECON)
      MPDIAG = 0
      IF(NPRINT.GE.9) THEN
         WRITE(NB6,460) NITER
         CALL MATPRT (G,N,N,LM2,N)
C        CALL MATDEB (G,LM2,N,N)
      ENDIF
C *** DEFINE INITIAL STEEPEST-DESCENT SEARCH DIRECTION (H).
      CALL MATCOP (G,H,LM2,N,-1)
C     *
C *** CONJUGATE GRADIENT ITERATIONS.
C     *
      DO 100 ICG=1,MAXCG
      NCG(1) = NCG(1)+1
C *** GET OPTIMUM COEFFICIENTS (B,C,D) FROM ANALYTIC LINE SEARCH.
      CALL DMSCOF (F,H,G,P,Q1,Q2,LM2,N,NPRINT,B,C,D)
      NCG(3) = NCG(3)+3
C     RETURN FOR CONVERGED INPUT DENSITY (E.G. H2 MOLECULE).
      IF(C.EQ.ZERO .AND. D.EQ.ZERO) RETURN
C *** SOLVE QUADRATIC EQUATION (SOLUTIONS X1 AND X2)
C     0   = B + 2*C*X + 3*D*X**2
C *** AND SELECT BEST UPDATE OF THE DENSITY MATRIX (Q1=P+XI*H).
C     ORIGINAL DENSITY MATRIX P, ORIGINAL SEARCH DIRECTION H.
C     UPDATED DENSITY MATRIX Q1, PURIFIED DENSITY MATRIX Q3.
      CALL CGROOT (P,H,F,Q1,Q2,Q3,LM2,N,XMU,B,C,D,XSQMAX,XI,FI,
     1             DIDMAX,TR1,TR3,NITER,ICG,NCG,NPRINT,ICALL)
C *** COMPARE UPDATED MATRIX (Q1) AND ORIGINAL MATRIX (P).
C     MAXIMUM AND RMS DEVIATIONS IN DIAGONAL DENSITY MATRIX ELEMENTS.
      CALL MATDEV (Q1,P,LM2,N,1,DPMAX,DPRMS)
C     DEBUG PRINT FOR UPDATED MATRIX (Q1).
      IF(NPRINT.GE.9) THEN
         WRITE(NB6,500)
         WRITE(NB6,510) NITER,ICG,XI,FI,DPMAX,DPRMS
         WRITE(NB6,520) NITER,ICG,TR1
         CALL MATPRT (Q1,N,N,LM2,N)
C        EIGENVALUES OF UPDATED DENSITY MATRIX.
         CALL TRED2 (LM2,N,Q1,EIG,WORK,Q2)
         CALL TQL2  (LM2,N,EIG,WORK,Q2,IERR) 
         WRITE(NB6,520) NITER,ICG,TR1
         WRITE(NB6,700) EIG(1),EIG(N)
      ENDIF
C *** McWEENY PURIFICATION TRANSFORMATIONS.
C     - DONE IF CG UPDATE INDICATES CONVERGENCE (DPMAX.LT.PCGCRT)
C     - OR   IF PURIFY OPTION IS TURNED ON (ICG.GE.MPURIF)
C     - OR   IF THIS IS THE LAST CG CYCLE (ICG.EQ.MAXCG).
C     MPURIF.GE.0 IS REQUIRED FOR THE LATTER TWO CASES.
C     MPURIF.LT.0 ALLOWS PURIFICATION ONLY CLOSE TO CONVERGENCE.
      GETPUR = DPMAX.LT.PCGCRT
      GETPUR = GETPUR .OR. (MPURIF.GE.0 .AND. ICG.GE.MPURIF)
      GETPUR = GETPUR .OR. (MPURIF.GE.0 .AND. ICG.EQ.MAXCG)
      IF(GETPUR) THEN
         DO 10 IPUR=1,MAXPUR
         NCG(2) = NCG(2)+1
         NCG(3) = NCG(3)+2
         CALL MATCOP (Q3,Q1,LM2,N,1)
         CALL PURIFY (Q1,Q2,Q3,LM2,N)
         CALL MATDEV (Q1,Q2,LM2,N,1,DIDMAX,DIDRMS)
         CALL MATDEV (Q1,Q3,LM2,N,1,DMCMAX,DMCRMS)
         IF(NPRINT.GE.7) THEN
            IF(IPUR.EQ.1) WRITE(NB6,530)
            WRITE(NB6,540) NITER,ICG,IPUR,DIDMAX,DIDRMS,DMCMAX,DMCRMS
         ENDIF
         IF(DMCMAX.LT.PMCMAX .AND. DIDMAX.LT.PIDEMP) GO TO 20
   10    CONTINUE
   20    CONTINUE
         MPURIF = MAX(MPURIF,0)
      ENDIF
C *** COMPARE PURIFIED MATRIX (Q3) AND ORIGINAL MATRIX (P).
C     MAXIMUM AND RMS DEVIATIONS IN DIAGONAL DENSITY MATRIX ELEMENTS.
      CALL MATDEV (Q3,P,LM2,N,1,PPMAX,PPRMS)
C     DEBUG PRINT FOR PURIFIED MATRIX (Q3).
C     TRACE3 CAN BE USED INSTEAD OF TRACE2 SINCE Q3 IS SYMMETRIC.
      IF(NPRINT.GE.7) THEN
C        FI = TRACE2 (Q3,F,LM2,N) + XMU*(TR1-XEL)
         FI = TRACE3 (Q3,F,LM2,N) + XMU*(TR1-XEL)
         WRITE(NB6,550)
         WRITE(NB6,510) NITER,ICG,XI,FI,PPMAX,PPRMS
         IF(NPRINT.GE.9) THEN
            TR3 = TRACE1 (Q3,LM2,N)
            WRITE(NB6,560) NITER,ICG,TR3
            CALL MATPRT (Q3,N,N,LM2,N)
C           EIGENVALUES OF PURIFIED DENSITY MATRIX.
            CALL TRED2 (LM2,N,Q3,EIG,WORK,Q2)
            CALL TQL2  (LM2,N,EIG,WORK,Q2,IERR) 
            WRITE(NB6,560) NITER,ICG,TR3
            WRITE(NB6,700) EIG(1),EIG(N)
         ENDIF
      ENDIF
C *** DEFINE NEW DENSITY MATRIX (P).
C     NORMALLY THIS IS THE PURIFIED UPDATED DENSITY MATRIX (Q3).
C     IT IS ALSO POSSIBLE TO SELECT THE SIMPLE CG-UPDATE (P+XI*H).
      IF(MPURIF.GE.0) THEN
         CALL MATCOP (Q3,P,LM2,N,1)
         PCGMAX = PPMAX
      ELSE
         CALL MATUPD (P,H,P,XI,LM2,N)
         PCGMAX = DPMAX
      ENDIF
C *** IMPOSE CORRECT TRACE OF DENSITY MATRIX (IF REQUESTED).
C     IF(MPSCAL.GT.0) THEN
C        TRACEP = TRACE1 (P,LM2,N)
C        IF(ABS(TRACEP-PT5*XEL).GT.PCGCRT) THEN
C           CALL PSCAL (P,LM2,N,MPSCAL,NPRINT,TRACEP,XEL)
C        ENDIF
C     ENDIF
C *** CHECK FOR CONVERGENCE.
      IF(PCGMAX.LT.PCGCRT) THEN
         NCG(7) = NCG(7)+1
         IF(NPRINT.GE.7) THEN
            WRITE(NB6,570) PCGMAX,PCGCRT
         ENDIF
         GO TO 110
      ELSE IF(ICG.EQ.MAXCG) THEN
         NCG(8) = NCG(8)+1
         IF(NPRINT.GE.7) THEN
            WRITE(NB6,580) ICG,PCGMAX,PCGCRT
         ENDIF
         GO TO 110
      ENDIF
C *** PREPARE NEXT CONJUGATE GRADIENT CYCLE.
C     EVALUATE GRADIENT FOR NEW DENSITY MATRIX (Q3).
      CALL DMSGRD (F,Q3,P,Q1,Q2,Q3,XMU,LM2,N,MPDIAG,NPRINT,NCG,.FALSE.)
C     CONJUGATE GRADIENT UPDATE OF SEARCH DIRECTION MATRIX (H).
C     POLAK-RIBIERE OR FLETCHER-REEVES FORMULA.
      CALL CGUPD (G,H,Q3,LM2,N,NITER,ICG,NPRINT)
  100 CONTINUE
C     *
C *** SYMMETRIZE THE DENSITY MATRIX FROM THE CG SEARCH.
C     THE FINITE NUMERICAL ACCURACY OF THE COMPUTATION CAUSES THE
C     DENSITY MATRIX TO BECOME UNSYMMETRIC (VERY SLIGHTLY) DURING
C     THE CG SEARCH. THIS NUMERICAL NOISE CAN ACCUMULATE DURING THE
C     SCF ITERATIONS AND MAY LEAD TO CONVERGENCE PROBLEMS OR OTHER
C     NUMERICAL TROUBLE. SYMMETRIZATION AVOIDS THESE PROBLEMS.
  110 CONTINUE
      IF(NPRINT.GE.5) THEN
         PASYMM = COMMUT (P,LM2,N)
         TRACEP = TRACE1 (P,LM2,N)
         WRITE(NB6,610) NITER,PASYMM
         WRITE(NB6,620) TRACEP
         WRITE(NB6,630) DIDMAX
         WRITE(NB6,400)
      ENDIF
      CALL TRMSUM (P,Q2,LM2,N)
      CALL MATSCL (Q2,P,PT5,LM2,N)
C *** IMPOSE CORRECT TRACE OF DENSITY MATRIX (IF REQUESTED).
C     NOTE: THIS OPTION IS NOT INCLUDED ELSEWHERE (CGDMSS).
      IF(MPSCAL.GT.0) THEN
         TRACEP = TRACE1 (P,LM2,N)
         IF(ABS(TRACEP-PT5*XEL).GT.PCGCRT) THEN
            CALL PSCAL (P,LM2,N,MPSCAL,NPRINT,TRACEP,XEL)
         ENDIF
      ENDIF
      RETURN
  400 FORMAT(   1X)
  410 FORMAT(   1X,'CGDMS :  MAXCP MAXPUR  IDMSP  IDEMP MPURIF',
     1          1X,        'MLROOT MCGPRE MCGUPD MPSCAL MCUTAU',
     2          1X,        ' MCUTM  MCUTF  MCUTP  MCUT1  MCUT2',
     3          1X,        ' MCUTR')
  420 FORMAT(   1X,'CGDMS :',16I7)
  430 FORMAT(   1X,'CGDMS :    LM2  NORBS  NITER NCG(1) NCG(2) NCG(3)',
     1          1X,        'NGC(4) NCG(5) NCG(6) NCG(7) NCG(8)')
  440 FORMAT(// 1X,'CGDMS : INPUT FOCK MATRIX, NITER =',I3/)
  450 FORMAT(// 1X,'CGDMS : INPUT DENSITY MATRIX, NITER =',I3/)
  460 FORMAT(// 1X,'CGDMS : INITIAL GRADIENT MATRIX, NITER =',I3/)
  500 FORMAT(/  1X,'CGDMS : NITER,ICG,XI,FI,DPMAX,DPRMS')
  510 FORMAT(   1X,'CGDMS : ',I5,I3,3X,5G20.10)
  520 FORMAT(// 1X,'CGDMS : DENSITY MATRIX AFTER CG UPDATE.',
     1       /  1X,'CGDMS : NITER =',I3,'   ICG =',I3,'   TRACE =',
     2                      G20.10/)
  530 FORMAT(/  1X,'CGDMS : NITER,ICG,IPUR,DIDMAX,DIDRMS,DMCMAX,DMCRMS')
  540 FORMAT(   1X,'CGDMS : ',I5,2I3,4G20.10)
  550 FORMAT(/  1X,'CGDMS : NITER,ICG,XI,FI,PPMAX,PPRMS')
  560 FORMAT(// 1X,'CGDMS : DENSITY MATRIX AFTER PURIFICATION.',
     1       /  1X,'CGDMS : NITER =',I3,'   ICG =',I3,'   TRACE =',
     2                      G20.10/)
  570 FORMAT(/  1X,'CGDMS : DENSITY MATRIX CONVERGED IN CG SEARCH.',
     1       /  1X,'CGDMS : PCGMAX =',G20.10,
     2       /  1X,'CGDMS : PCGCRT =',G20.10,/)
  580 FORMAT(/  1X,'CGDMS : DENSITY MATRIX NOT CONVERGED IN CG SEARCH.',
     1       /  1X,'CGDMS : NUMBER OF CG CYCLES =',I3,
     2       /  1X,'CGDMS : PCGMAX =',G20.10,
     3       /  1X,'CGDMS : PCGCRT =',G20.10,/)
  610 FORMAT(   1X,'CGDMS : CG CYCLES DONE. NITER =',I3,
     1       /  1X,'CGDMS : DENSITY MATRIX WILL BE SYMMETRIZED',
     2       /  1X,'CGDMS : MAXIMUM ASYMMETRY OF DENSITY MATRIX =',
     3                      G20.10)
  620 FORMAT(   1X,'CGDMS : TRACE OF THE CURRENT DENSITY MATRIX =',
     1                      G20.10)
  630 FORMAT(   1X,'CGDMS : MAXIMUM DEVIATION FROM IDEMPOTENCY  =',
     1                      G20.10)
  700 FORMAT(   1X,'CGDMS : MINIMUM EIGENVALUE OF P =',G20.10,
     1       /  1X,'        MAXIMUM EIGENVALUE OF P =',G20.10)
      END
