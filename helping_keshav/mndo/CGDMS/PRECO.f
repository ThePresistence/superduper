C     ******************************************************************
      SUBROUTINE PRECO (F,G,P,Q1,Q3,LM2,N,NPRINT)
C     *
C     DIAGONAL PRECONDITIONING FOR DMS SEARCH.
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     F(LM2,*)  FOCK MATRIX (I).
C     G(LM2,*)  GRADIENT MATRIX (I,O).
C     P(LM2,*)  DENSITY MATRIX (I).
C     Q1(LM2,*) MATRIX PRODUCT FP (I).
C     Q3(LM2)   DIAGONAL PRECONDITIONER (O).
C     LM2       LEADING DIMENSION OF ALL MATRICES (I).
C     N         NUMBER OF ORBITALS (I).
C     NPRINT    PRINTING FLAG (I).
C     *
C     GENERAL FORMULAS FOR DIAGONAL PRECONDITIONER.
C     INTERMEDIATE: Q(I)   = Fii - (FP+PF)ii = Fii - 2 (FP)ii
C     FINAL VECTOR: Q(I)   = 1/(6*Qii)
C     APPLICATION : G(I,J) = Q(I)*G(I,J)
C     *
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (ONE=1.0D0)
      PARAMETER (TWO=2.0D0)
      PARAMETER (SIX=6.0D0)
      PARAMETER (TINY=1.0D-10)
      COMMON
     ./NBFILE/ NBF(20)
      DIMENSION F(LM2,N),G(LM2,N),P(LM2,N)
      DIMENSION Q1(LM2,N),Q3(LM2)
C *** COMPUTE INTERMEDIATE DIAGONAL TERMS AND CHECK FOR ZERO.
      DO 10 I=1,N
      Q3(I)  = F(I,I) - TWO*Q1(I,I)
      IF(ABS(Q3(I)).LT.TINY) RETURN
   10 CONTINUE
C *** DEFINE DIAGONAL PRECONDITIONER.
      DO 20 I=1,N
      Q3(I) = ONE/(SIX*Q3(I))
   20 CONTINUE
C *** APPLY DIAGONAL PRECONDITIONER TO GRADIENT MATRIX.
      DO 40 J=1,N
      DO 30 I=1,N
      G(I,J) = G(I,J)*Q3(I)
   30 CONTINUE
   40 CONTINUE
C *** DEBUG PRINT.
      IF(NPRINT.GE.5) THEN
         NB6 = NBF(6)
         WRITE (NB6,500)
         IF(NPRINT.GE.7) THEN
            WRITE (NB6,510)
            WRITE (NB6,520) (Q3(I),I=1,N)
         ENDIF
      ENDIF
      RETURN
  500 FORMAT(/  1X,'PRECO : DIAGONAL PRECONDITIONER USED.')
  510 FORMAT(   1X,'PRECO : VALUES OF DIAGONAL ELEMENTS.')
  520 FORMAT(   1X,'PRECO :',5G20.10)
      END
