      SUBROUTINE BORDP1 (C,PN,LM2,LM3,N,NOCC,IODD,JODD,ISPIN)
C     *
C     CALCULATION OF DENSITY MATRIX.
C     FULL SQUARE ARRAYS, NO FILE HANDLING.
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     C(LM2,*)  EIGENVECTORS (I).
C     PN(LM2,*) NEW DENSITY MATRIX (O).
C     N         NUMBER OF BASIS FUNCTIONS (I).
C     NOCC      NUMBER OF OCCUPIED ORBITALS (I).
C     IODD      INDEX OF FIRST  SINGLY OCCUPIED RHF-MO (I).
C     JODD      INDEX OF SECOND SINGLY OCCUPIED RHF-MO (I).
C     ISPIN     TYPE OF DENSITY MATRIX (I).
C               = 1 RHF OR UHF-ALPHA DENSITY MATRIX (I).
C               = 2 UHF-BETA DENSITY MATRIX (I).
C     *
C     COMMENTS ON OTHER AVAILABLE INPUT OPTIONS.
C     IMOCC.LE.1  -  USE DEFAULT OCCUPATION NUMBERS (IMPLICITLY).
C     IMOCC.EQ.2  -  USE DEFAULT OCCUPATION NUMBERS (EXPLICITLY).
C     IMOCC.GT.2  -  USE SPECIAL OCCUPATION NUMBERS OCC(LMX,ISPIN).
C     *
      USE LIMIT, ONLY: LMX
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (TINY=1.0D-10)
      COMMON
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./OCCFL / IMOCC,NOCCA(2),MSUB,MOSUMA,MOSUMB,MOCCA(8),MOCCB(8)
     ./OCCNM / OCC(LMX,2)
      DIMENSION C(LM2,LM3),PN(LM2,LM3)
C     *
C *** CALCULATE DENSITY MATRIX.
C     *
C     MATRIX MULTIPLICATION PN = C*C(TRANSPOSE).
      CALL ZZERO(N,N,PN,LM2)
      CALL DGEMM('N','T',N,N,NOCC,ONE,C,LM2,C,LM2,ZERO,PN,LM2)
C     CORRECTIONS FOR HALF-ELECTRON CASE.
      IF(IMOCC.LE.1) THEN
         IF(IODD.GT.0) THEN
            DO 20 I=1,N
            DO 10 J=1,I
            PN(J,I) = PN(J,I)-PT5*C(I,IODD)*C(J,IODD)
            PN(I,J) = PN(J,I)
   10       CONTINUE
   20       CONTINUE
            IF(JODD.GT.0) THEN
               DO 40 I=1,N
               DO 30 J=1,I
               PN(J,I) = PN(J,I)-PT5*C(I,JODD)*C(J,JODD)
               PN(I,J) = PN(J,I)
   30          CONTINUE
   40          CONTINUE
            ENDIF
         ENDIF
      ELSE
C     CORRECTIONS FOR NON-STANDARD OCCUPATION NUMBERS.
         NMO    = NOCCA(ISPIN)
         DO 70 K=1,NMO
         OCCDIF = OCC(K,ISPIN)-ONE
         IF(ABS(OCCDIF).GT.TINY) THEN
            DO 60 I=1,N
            DO 50 J=1,I
            PN(J,I) = PN(J,I) + C(I,K)*C(J,K)*OCCDIF
            PN(I,J) = PN(J,I)
   50       CONTINUE
   60       CONTINUE
         ENDIF
   70    CONTINUE
      ENDIF
      RETURN
      END
