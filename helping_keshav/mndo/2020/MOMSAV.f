      SUBROUTINE MOMSAV(MODE, NORBS, NMOS, NACTIV, NCIREF,
     1                  ICI1, ICI2, MOVO, MCIREF, NCISYM,
     2                  MOTYPE, CMOSAV, IMOCI, ICIREF, IMOPOS,
     3                  LMOSAV)
C     *
C     MO MAPPING INFORMATION IS SAVED (MODE=0) OR READ (MODE=1)
C     FOR THE IMOMAP=3 OPTION.
C     *
C     TO AVOID MAKING THE MAPPING PROCEDURE MORE CONFUSING,
C     ALL VARS ARE EXPLICITLY PASSED AS ARGUMENTS.
C     *
C     NOTATION. I=INPUT, O=OUTPUT.
C
C     MODE      CHOICE BETWEEN WRITE/READ, SEE ABOVE (I).
C
C     NORBS, NMOS, NACTIV, NCIREF, ICI1, ICI2, MOVO, MCIREF, NCISYM
C               OPTIONS/ARRAY SIZES CHECKED FOR CONSISTENCY (I)
C               FOR CONVENIENCE THEY ARE MAPPED TO THE ICHKI ARRAY.
C
C     MOTYPE, CMOSAV, IMOCI, ICIREF, IMOPOS
C               MOS AND RELATED INFORMATION TO BE SAVED/READ (I/O).
C
C     LMOSAV    RETURNS TRUE IF READING WAS SUCCESSFUL.
C     *
      USE LIMIT, ONLY: LMX, LMACT, LMREF
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON
     ./NBFILE/ NBF(20)
      LOGICAL IEXIST, ICHKOK, LMOSAV
      DIMENSION MOTYPE(LMX), CMOSAV(NORBS, NMOS), IMOCI(LMX),
     1          ICIREF(LMACT, LMREF), IMOPOS(LMACT)
      DIMENSION ICHKI(9), ICHKE(9)
      CHARACTER(6) CHKNMS(9)
C     ICHKI MAPPING
      CHKNMS = (/ 'NORBS', 'NMOS', 'NACTIV', 'NCIREF', 'ICI1', 'ICI2',
     1            'MOVO', 'MCIREF', 'NCISYM' /)
      ICHKI = (/ NORBS, NMOS, NACTIV, NCIREF, ICI1, ICI2,
     1           MOVO, MCIREF, NCISYM /)
C *** FILE UNIT FOR MO MAPPING INFORMATION.
      NF     = 56
C *** FILE UNIT FOR STANDARD OUTPUT
      NB6    = NBF(6)
C
      IF (MODE .EQ. 0) THEN
C *** MODE = 0, SAVING INFORMATION
        OPEN(UNIT=NF, FILE='imomap.dat', STATUS='REPLACE',
     1       FORM='UNFORMATTED', ACTION='WRITE')
        WRITE(NF) ICHKI
        WRITE(NF) MOTYPE(1:NMOS)
        WRITE(NF) CMOSAV
        WRITE(NF) IMOCI(1:NACTIV)
        WRITE(NF) ICIREF(1:NACTIV, 1:NCIREF)
        WRITE(NF) IMOPOS(1:NACTIV)
        CLOSE(NF)
      ELSE IF (MODE .EQ. 1) THEN
C *** MODE = 1, READING INFORMATION
C       CHANGE TO TRUE WHEN SUCCESSFUL
        LMOSAV = .FALSE.
        INQUIRE(FILE='imomap.dat', EXIST=IEXIST)
        IF (.NOT. IEXIST) THEN
           WRITE(NB6, 500)
           RETURN
        ENDIF
        OPEN(UNIT=NF, FILE='imomap.dat', STATUS='OLD',
     1       FORM='UNFORMATTED', ACTION='READ')
        ICHKOK = .TRUE.
        READ(NF) ICHKE
        DO I = 1, 9
           IF (ICHKI(I) .NE. ICHKE(I)) THEN
              WRITE(NB6,510) CHKNMS(I), ICHKI(I), ICHKE(I)
              ICHKOK = .FALSE.
           ENDIF
        ENDDO
        IF (.NOT. ICHKOK) THEN
           CLOSE(NF)
           RETURN
        ENDIF
        READ(NF, ERR=100, END=110) MOTYPE(1:NMOS)
        READ(NF, ERR=100, END=110) CMOSAV
        READ(NF, ERR=100, END=110) IMOCI(1:NACTIV)
        READ(NF, ERR=100, END=110) ICIREF(1:NACTIV, 1:NCIREF)
        READ(NF, ERR=100, END=110) IMOPOS(1:NACTIV)
        CLOSE(NF)
        LMOSAV = .TRUE.
      ENDIF
      RETURN
C *** READ ERRORS
  100 WRITE(NB6, 520)
      CLOSE(NF)
      RETURN
  110 WRITE(NB6, 530)
      CLOSE(NF)
      RETURN
C *** FORMAT SECTION
  500 FORMAT(/  1X,'MOMSAV: MO MAPPING DATAFILE COULD NOT BE FOUND.')
  510 FORMAT(/  1X,'MOMSAV: INCONSISTENT VALUES OF ', A, ' FOUND.',
     1       /  1X,'        INTERNAL: ', I3, ', FILE: ', I3)
  520 FORMAT(/  1X,'MOMSAV: ERROR WHILE READING MO MAPPING DATAFILE.')
  530 FORMAT(/  1X,'MOMSAV: EOF WHILE READING MO MAPPING DATAFILE.')
      END
