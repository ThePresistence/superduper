      SUBROUTINE LINMIN (X,Q,P,XX,GG,N,T,F,MAXLIN,IPRINT,
     1                   ARRAY,LM5,ICALL,SCFCAL)
C     *
C     CUBIC LINE SEARCH.
C     *
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      EXTERNAL SCFCAL
      COMMON
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./NBFILE/ NBF(20)
     ./OPTTOL/ TOLEND(4),TOLX,TOLF,TREL,TABS,XMAXST
     ./OVERLY/ IOV,JOV,KOV,LOV
      DIMENSION X(N),Q(N),P(N),XX(N),GG(N)
      DIMENSION ARRAY(LM5)
C *** FILE NUMBERS.
      NB6    = NBF(6)
C *** INITIALIZATION.
      IF(IPRINT.GT.0) WRITE(NB6,500)
      INUMB  = 0
      FIN    = F
      TLAST  = ZERO
      TB     = ZERO
      FB     = F
C     GB IS THE PROJECTION OF THE INITIAL GRADIENT ALONG P.
C     TMAX IS THE MAXIMUM ALLOWED FOR THE STEP SIZE T
C     SUCH THAT T*P(I) DOES NOT EXCEED XMAXST.
      GB     = ZERO
      TMAX   = ZERO
      DO 10 I=1,N
      GB     = GB+P(I)*Q(I)
      TMAX   = MAX(TMAX,ABS(P(I)))
   10 CONTINUE
      TMAX   = XMAXST/TMAX
C     MAKE SURE THAT WE ARE SEARCHING DOWNHILL.
      IF(GB.GE.ZERO) THEN
         DO 20 I=1,N
         P(I)= -P(I)
   20    CONTINUE
         GB  = -GB
      ENDIF
      CALL EXCHNG(F,FF,TB,TT,X,XX,N)
C *** SECOND POINT IN LINE SEARCH.
   30 FA     = FB
      GA     = GB
      TA     = TB
      IF(T.GT.TMAX) T=TMAX
      TB     = TA+T
C     FORM THE NEW VARIABLES.  STEP SIZE TB, SEARCH DIRECTION P.
      DO 40 I=1,N
      X(I)   = XX(I)+TB*P(I)
   40 CONTINUE
C     CALCULATE NEW FUNCTION VALUE AND GRADIENT.
      LOV    = 1
      CALL COMPFG(N,X,FB,FF,GG,ARRAY,LM5,ICALL,SCFCAL)
      IF(ICALL.EQ.-1) RETURN
      INUMB  = INUMB+1
C     GB IS THE PROJECTION OF THE GRADIENT ALONG P.
      GB     = ZERO
      DO 60 I=1,N
      GB     = GB+P(I)*GG(I)
   60 CONTINUE
      IF(IPRINT.GT.0) WRITE(NB6,510) INUMB,TA,TB,FA,FB,GA,GB
      IF(GB.LT.ZERO .AND. FB.LT.FA) THEN
         IF(INUMB.GE.MAXLIN) GO TO 200
         T   = FOUR*T
         GO TO 30
      ELSE
         IF(FB.LT.FF) CALL EXCHNG(FB,FF,TB,TT,GG,Q,N)
      ENDIF
      FLAST  = FF
      IHK    = 1
C *** GENERATE NEW POINTS IN THE LINE SEARCH.
C     CALCULATE THE STEP SIZE TLAMB ALONG THE SEARCH DIRECTION P
C     SUCH THAT TLAMB IS THE STEP SIZE CORRESPONDING TO THE
C     MINIMUM IN A CUBIC EQUATION.
   70 Z      = THREE*(FA-FB)/(TB-TA)+GA+GB
      W      = Z*Z-GA*GB
      IF(W.LT.ZERO) W=ZERO
      W      = SQRT(W)
      TLAMB  = (TB-TA)*(Z+W-GA)/(GB-GA+TWO*W)
      T      = TA+TLAMB
C     TEST WHETHER NEW POINT SHOULD STILL BE CALCULATED.
C     CHECK PREDICTED CHANGE IN STEP SIZE AND FUNCTION VALUE.
      IF(ABS(T).LT.1.0D-08 .OR. ABS(T-TLAST).LT.1.0D-08) GO TO 200
      IF(IHK.GT.1 .AND. FF.LT.FIN) THEN
         IF(ABS(T-TLAST).LT.(ABS(T+TLAST)*TREL+TABS)) GO TO 200
         IF((ABS(T-TLAST)*G).LT.TOLF) GO TO 200
      ENDIF
C     X IS THE GEOMETRY OF THE PREDICTED MINIMUM ALONG THE LINE.
      DO 80 I=1,N
      X(I)   = XX(I)+T*P(I)
   80 CONTINUE
C     CALCULATE FUNCTION VALUE AND GRADIENT AT THE PREDICTED MINIMUM.
      LOV    = 2
      CALL COMPFG(N,X,F,FF,GG,ARRAY,LM5,ICALL,SCFCAL)
      IF(ICALL.EQ.-1) RETURN
      INUMB  = INUMB+1
      IHK    = 2
      IF(F.LT.FF) CALL EXCHNG(F,FF,T,TT,GG,Q,N)
C     G IS THE PROJECTION OF THE GRADIENT ALONG P.
      G      = ZERO
      DO 100 I=1,N
      G      = G+P(I)*GG(I)
  100 CONTINUE
      IF(IPRINT.GT.0) WRITE(NB6,520) INUMB,TA,T,TB,FA,F,FB,GA,G,GB
C     TEST FOR CONVERGENCE.
      IF(FF.LT.FIN) THEN
         IF(ABS(T-TLAST).LT.(ABS(T+TLAST)*TREL+TABS)) GO TO 200
         IF(ABS(F-FLAST).LT.TOLF) GO TO 200
      ENDIF
      IF(INUMB.GE.MAXLIN) GO TO 200
      TLAST  = T
      FLAST  = F
C     REDEFINE CURRENT POINTS.
      IF(G.GT.ZERO) THEN
         FB  = F
         GB  = G
         TB  = T
         GO TO 70
      ENDIF
      IF(F.LT.FA) THEN
         FA  = F
         GA  = G
         TA  = T
         GO TO 70
      ELSE
         FB  = FA
         GB  = GA
         TB  = TA
         T   = TLAMB*PT25
         GO TO 30
      ENDIF
C *** EXIT AFTER FINISHING THE LINE SEARCH.
  200 IF(T.NE.TT) THEN
         DO 210 I=1,N
         X(I) = XX(I)+TT*P(I)
  210    CONTINUE
      ENDIF
      F      = FF
      T      = TT
      RETURN
  500 FORMAT(/ 1X,'///// LINMIN ENTERED, CUBIC SEARCH',
     1       //2X,'I',7X,'TA',11X,'T',10X,'TB',12X,'FA',12X,'F',13X,
     2            'FB',12X,'GA',10X,'G',11X,'GB')
  510 FORMAT(  1X,I2,3X,E10.3,2X,E10.3,12X,2X,F13.8,1X,F13.8,14X,3X,
     1            E10.3,2X,E10.3,12X,1X,I3,3X,F5.1)
  520 FORMAT(  1X,I2,3X,E10.3,2(2X,E10.3),2X,F13.8,2(1X,F13.8),3X,
     1            E10.3,2(2X,E10.3),1X,I3,3X,F5.1)
      END
