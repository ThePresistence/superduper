      SUBROUTINE INPUT (ICALL)
C     *
C     INPUT OF MOLECULAR DATA.
C     *
C     NOTATION. I=INPUT, O=OUTPUT.
C     ICALL     ERROR FLAG (O).
C               = 0 NORMAL RETURN.
C               =-1 INPUT ERROR.
C               =-9 END-OF-FILE ENCOUNTERED.
C     *
      USE LIMIT, ONLY: LM1, LMZ
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CSET  IDIAGV : DEFAULT VALUE FOR OPTION IDIAG (SEE INPUT DESCRIPTION).
CSET  IDIAGV : MACHINE-SPECIFIC VALUE WHICH MAY BE REDEFINED.
CSET  IDIAG  : CHOICE OF DIAGONALIZATION ROUTINE IN SUBROUTINE ITER.
      PARAMETER (IDIAGV=0)
      LOGICAL UHF
      CHARACTER*80 KTITLE,KOMENT
      CHARACTER*48 KTEMP
      COMMON
     ./ATOMC / COORD(3,LM1)
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./DELEMT/ NELMD,NFOCK
     ./DPARM / LORBS(LMZ)
     ./ENERGT/ EE,ENUCLR,EAT,ATHEAT
     ./FLAG1 / KTITLE,KOMENT
     ./FRGMT1/ NFRAGS(LM1),NCHRGS(LM1)
     ./STATCG/ NCGTOT(20)
      COMMON
     ./HALFE / IODD,JODD
     ./INOPT1/ IN1(300)
     ./INOPT2/ IN2(300)
     ./MOPAC / IMOPAC
     ./NBFILE/ NBF(20)
     ./OCCFL / IMOCC,NOCCA,NOCCB,MSUB,MOSUMA,MOSUMB,MOCCA(8),MOCCB(8)
     ./ORBITS/ NUMB,NORBS,NMOS,NALPHA,NBETA
     ./PARDER/ CORE(LMZ),EHEAT(LMZ),EISOL(LMZ)
     ./PARM1 / A(3,LM1),NA(LM1),NB(LM1),NC(LM1),NN(LM1),NATOMS
C    ./SKIPA / ISKPA
     ./UHF   / UHF
C *** FILE NUMBERS.
      NB5    = NBF(5)
      NB6    = NBF(6)
C *** READ TITLE CARD FOR THE MOLECULE.
      IF(IMOPAC.EQ.0) THEN
         READ(NB5,500,END=90) (IN1(I),I=65,79),KTEMP
         KTITLE = KTEMP
         KOMENT = ' '
      ENDIF
      IN2(65:79) = IN1(65:79)
      KHARGE = IN2(65)
      IF(KHARGE.EQ.99) GO TO 90
C *** IMPOSE DEFAULT VALUES.
C     IN2(70)=IUHF, IN2(71)=KITSCF, IN2(72)=NPRINT.
      ICALL  = 0
      IF(IMOPAC.EQ.1) THEN
         IF(IN2(70).EQ. 0) IN2(70)=-1
         IF(IN2(72).EQ. 0) IN2(72)=-1
      ENDIF
      IF(IN2(70).EQ. 6) THEN
         WRITE(NB6,860)
         STOP 'INPUT'
      ENDIF
      IF(IN2(71).EQ. 0) IN2(71)=200
C     IN2(77)=KCI.
      IF(IN2(70).EQ.-6 .AND. IN2(77).NE.5) THEN
         WRITE(NB6,870)
         STOP 'INPUT'
      ENDIF
C     IN2(67)=KTRIAL.
      IF(IN2(67).LT. 0) IN2(67)=0
      IF(IN2(37).GT. 0) IN2(67)=-1
C     IN2(74)=IDIAG, IN2(78)=NSTART, IN2(79)=NSTEP.
      IF(IN2(74).EQ. 0) IN2(74)=IDIAGV
      IF(IN2(78).EQ. 0) THEN
         IF(IN2( 9).GT.0) THEN
            IN2(78)=-1
         ELSE
            IN2(78)=4
         ENDIF
      ENDIF
      IF(IN2(79).EQ. 0) IN2(79)=4
      IF(IN2(78).GT.IN2(71)) IN2(78)=-1
C *** DEFINE LOCAL VARIABLES FOR THIS ROUTINE.
      IOP    = IN2(2)
      IGEOM  = IN2(4)
      IFORM  = IN2(5)
      JPRINT = IN2(42)
      INGEOM = IN2(54)
      LINFRG = IN2(58)
      INPFRG = IN2(59)
      IMULT  = IN2(66)
      KTRIAL = IN2(67)
      IUHF   = IN2(70)
      KITSCF = IN2(71)
      IFAST  = IN2(73)
      KCI    = IN2(77)
      IGRAD  = IN2(199)
C *** READ THE INPUT GEOMETRY AND COMPUTE THE COORDINATES.
      IF(IMOPAC.LE.0 .AND. INGEOM.NE.-1) THEN
         IF(INGEOM.NE.1) THEN
            CALL ESTIM
            IF(INPFRG.GE.0 .AND. (LINFRG.GT.0 .OR. KTRIAL/10.EQ.3)) THEN
               CALL INFRG (NUMAT,NFRAGS,NCHRGS)
            ENDIF
         ELSE
            CALL PDBINP (NB5,NB6,JPRINT)
         ENDIF
      ENDIF
      CALL PRTINP (IGEOM,JPRINT)
      CALL GMETRY (+1)
C *** DETERMINE THE FOLLOWING VARIABLES.
C     NFIRST(I) FIRST BASIS ORBITAL OF ATOM I.
C     NLAST(I)  LAST  BASIS ORBITAL OF ATOM I.
C     NEL       NUMBER OF ELECTRONS.
C     NELMD     NUMBER OF ATOMS WITH D ORBITALS.
C     NFOCK     STEP SIZE IN FOCK (5 SP, 10 SPD).
      NELMD  = 0
      NFOCK  = 5
      NEL    = -KHARGE
      IB     = 0
      DO 20 I=1,NUMAT
      NFIRST(I) = IB+1
      NI     = NAT(I)
      NEL    = NEL+NINT(CORE(NI))
      IB     = IB+LORBS(NI)
      NLAST(I) = IB
      IF(LORBS(NI).GE.9) THEN
         NELMD = NELMD+1
         NFOCK = 10
      ENDIF
   20 CONTINUE
C *** PRINT THE CARTESIAN COORDINATES.
      IF(JPRINT.LT.0 .OR. IGEOM.GT.0) GO TO 40
      WRITE(NB6,600) KOMENT,KTITLE
      WRITE(NB6,610)
      K      = 0
      DO 30 I=1,NATOMS
      NI     = NN(I)
      IF(NI.LT.99) THEN
         IA  = NFIRST(I-K)
         IB  = NLAST (I-K)
         WRITE(NB6,620) I,NI,(COORD(J,I),J=1,3),IA,IB
      ELSE
         K   = K+1
         WRITE(NB6,620) I,NI,(COORD(J,I),J=1,3)
      ENDIF
   30 CONTINUE
   40 CONTINUE
C *** INTERNUCLEAR DISTANCES.
      KSTOP  = 0
      IF(JPRINT.GE.5 .OR. (JPRINT.GE.0 .AND. NATOMS.LE.100)) THEN
         WRITE(NB6,630)
         CALL RIJPRT (COORD,NN,NATOMS,KSTOP)
      ELSE
         CALL RIJCHK (COORD,NN,NATOMS,KSTOP)
      ENDIF
      IF(KSTOP.GT.0) THEN
         WRITE(NB6,640)
         STOP 'INPUT'
      ENDIF
C *** REMOVE DUMMY ATOMS.
      CALL GMETRY(-2)
C *** CHECK FOR MULTIPLICITY OF ODD-ELECTRON SYSTEMS (MOPAC INPUT).
      IWARN  = 0
      IF(IMOPAC.EQ.1 .AND. IMULT.EQ.0 .AND. MOD(NEL,2).EQ.1) THEN
         IMULT = 2
         IWARN = 1
         IN2(66) = IMULT
      ENDIF
C *** CHECK FOR MULTIPLICITY IN SCC-DFTB CALCULATION.
      IF((IOP.EQ.5.OR.IOP.EQ.6) .AND. NUMAT.GT.1 .AND. IMULT.GT.2) THEN
         WRITE(NB6,645)
         WRITE(NB6,800)
         ICALL = -1
         RETURN
C        STOP 'INPUT'
      ENDIF
C *** CHECK FOR UHF OPTION.
      UHF    = .FALSE.
      IF(IUHF.EQ.0 .AND. IMULT.GT.0 .AND. KCI.EQ.0) UHF=.TRUE.
      IF(IUHF.GT.0) UHF=.TRUE.
      IF(.NOT.UHF .AND. IUHF.NE.-4 .AND. IMULT.GT.3) THEN
         WRITE(NB6,650)
         WRITE(NB6,800)
         ICALL = -1
         RETURN
C        STOP 'INPUT'
      ENDIF
      IF(UHF .AND. KCI.NE.0) THEN
         WRITE(NB6,660)
         WRITE(NB6,800)
         ICALL = -1
         RETURN
C        STOP 'INPUT'
      ENDIF
C *** CHECK FOR ENERGY EVALUATION WITHOUT SCF ITERATIONS.
      IF(KITSCF.EQ.-1) THEN
         IF((IMULT.GT.0 .AND. .NOT.UHF) .OR. KCI.NE.0) THEN
            WRITE(NB6,810) KITSCF
            WRITE(NB6,820)
            WRITE(NB6,800)
            ICALL = -1
            RETURN
C           STOP 'INPUT'
         ENDIF
      ENDIF
C *** CHECK FOR TYPE OF GRADIENT CALCULATION.
C     ISKPA = 0: FAST FINITE-DIFFERENCE CALCULATION.
C     ISKPA = 1: SLOW FINITE-DIFFERENCE CALCULATION.
C     ISKPA = 0
C     IF(IMULT.GT.0 .AND. .NOT.UHF) ISKPA=1
C     IF(IGRAD.EQ.1 .OR. KCI.GT.0)  ISKPA=1
C *** CHECK FOR SIMPLE INPUT ERRORS.
      IF(MOD(NEL,2).EQ.1 .AND. IMULT.EQ.0) THEN
         NCGTOT(15)=NCGTOT(15)+1
         WRITE(NB6,670) NEL,KHARGE
         WRITE(NB6,800)
         ICALL = -1
         RETURN
C        STOP 'INPUT'
      ENDIF
      IF(MOD(NEL+IMULT,2).EQ.0 .AND. IMULT.GT.0) THEN
         WRITE(NB6,680) IMULT,NEL,KHARGE
         WRITE(NB6,800)
         ICALL = -1
         RETURN
C        STOP 'INPUT'
      ENDIF
C *** DETERMINE OCCUPATION OF THE MOLECULAR ORBITALS.
C     NEL      NUMBER OF ELECTRONS       (NEL = NALPHA+NBETA).
C     NALPHA   NUMBER OF ALPHA ELECTRONS (CORRECT FOR RHF AND UHF).
C     NBETA    NUMBER OF BETA  ELECTRONS (CORRECT FOR RHF AND UHF).
C     NBETA    EQUAL TO NUMBER OF DOUBLY OCCUPIED MOLECULAR ORBITALS
C              IN RHF CALCULATIONS WITH IMULT.NE.1.
C     NUMB     NUMBER OF HIGHEST OCCUPIED MOLECULAR ORBITAL.
      NORBS  = NLAST(NUMAT)
      IODD   = 0
      JODD   = 0
      NODD   = MAX(1,IMULT)-1
      NBETA  = (NEL-NODD)/2
      NALPHA = NBETA+NODD
      NUMB   = NALPHA
      NCLO   = NBETA
      IF(IMULT.GT.0 .AND. .NOT.UHF) THEN
         IF(IMULT.EQ.1) THEN
            NUMB = NBETA+1
            IODD = NBETA
            JODD = NUMB
            NCLO = NBETA-1
         ELSE IF(IMULT.EQ.2) THEN
            IODD = NUMB
         ELSE IF(IMULT.EQ.3) THEN
            IODD = NBETA+1
            JODD = NBETA+2
         ENDIF
      ENDIF
      NMOS   = NUMB
C     EXPLICIT DEFINITION OF OCCUPATION NUMBERS.
      IMOCC  = ABS(IUHF)
      IF(IMOCC.LT.2) THEN
         NOCCA  = 0
         NOCCB  = 0
      ELSE IF(IMOCC.EQ.2) THEN
         CALL OCCSTD
      ELSE IF(IMOCC.EQ.3) THEN
         CALL INPOCC (IFORM,JPRINT)
         IFAST   = 2
         IN2(73) = 2
         NMOS    = NORBS
      ELSE IF(IMOCC.EQ.4) THEN
         IFAST   = 2
         IN2(73) = 2
         NMOS    = NORBS
      ELSE IF(IMOCC.GE.5) THEN
         IFAST   = 2
         IN2(73) = 2
         NMOS    = NORBS
         IF(IUHF.LT.0 .AND. IMULT.GT.1) THEN
            WRITE(NB6,685) IMULT,IUHF
            WRITE(NB6,800)
            ICALL = -1
            RETURN
C           STOP 'INPUT'
         ENDIF
      ENDIF
C *** COMPUTE SUMS OF ATOMIC ENERGIES AND HEATS OF FORMATION.
      ATHEAT = ZERO
      EAT    = ZERO
      DO 50 I=1,NUMAT
      NI     = NAT(I)
      ATHEAT = ATHEAT + EHEAT(NI)
      EAT    = EAT + EISOL(NI)
   50 CONTINUE
C *** PRINTING SECTION.
      IF(JPRINT.LT.0) RETURN
      IF(UHF) THEN
         WRITE(NB6,690) KHARGE,NEL,NALPHA,NBETA
      ELSE
         WRITE(NB6,700) KHARGE,NEL,NCLO
         IF(IODD.GT.0) WRITE(NB6,710) IODD
         IF(JODD.GT.0) WRITE(NB6,710) JODD
      ENDIF
      IF(IMULT.GT.0) WRITE(NB6,720) IMULT
      IF(IWARN.EQ.1) WRITE(NB6,730)
      WRITE(NB6,740)
      WRITE(NB6,750) (IN2(I),I=65,79)
      IF(IUHF .LT.0) WRITE(NB6,760)
      IF(IUHF .GT.0) WRITE(NB6,770)
      IF(IFAST.EQ.1) WRITE(NB6,780)
      IF(IFAST.GT.1) WRITE(NB6,790)
      IF(KITSCF.EQ.-1) THEN
         WRITE(NB6,810) KITSCF
         IF(KTRIAL.NE.11) WRITE(NB6,830) KTRIAL
      ENDIF
      IF(KITSCF.EQ.-2) THEN
         WRITE(NB6,840) KITSCF
         IF(KTRIAL.NE.12) WRITE(NB6,850) KTRIAL
      ENDIF
      RETURN
C *** END-OF-FILE OR END-OF-INPUT EXIT.
   90 ICALL  = -9
      RETURN
  500 FORMAT(6I2,I4,I2,2I1,5I2,A)
  600 FORMAT(///5X,A,/5X,A)
  610 FORMAT(// 5X,'INITIAL CARTESIAN COORDINATES (ANGSTROMS)',
     1       // 5X,'ATOM NO.',8X,'ATOMIC NO.',9X,'X-COORDINATE',
     2          8X,'Y-COORDINATE',8X,'Z-COORDINATE',
     3          7X,'ATOMIC ORBITALS'//)
  620 FORMAT(   7X,I3,16X,I2,14X,3(F10.6,10X),I3,' TO ',I3 )
  630 FORMAT(///5X,'INITIAL INTERATOMIC DISTANCES (ANGSTROMS)')
  640 FORMAT(// 1X,'THERE ARE AT LEAST TWO ATOMS WITH ZERO DISTANCE.',
     1       /  1X,'CHECK INPUT GEOMETRY. STOP.'//)
  645 FORMAT(// 1X,'MULTIPLICITY GREATER THAN 2 IN SCC-DFTB CODE ',
     1             'NOT YET IMPLEMENTED.'//)
  650 FORMAT(// 1X,'MULTIPLICITY FOR RHF GREATER THAN 3 ',
     1             'NOT YET IMPLEMENTED.'//)
  660 FORMAT(// 1X,'CORRELATION TREATMENTS ARE NOT AVAILABLE ',
     1             'FOR UHF WAVEFUNCTIONS.'//)
  670 FORMAT(// 1X,'ODD NUMBER OF ELECTRONS INCOMPATIBLE WITH ',
     1             'CLOSED-SHELL ELECTRONIC STRUCTURE.',
     2       /  1X,'NUMBER OF ELECTRONS =',I4,
     3       /  1X,'MOLECULAR CHARGE    =',I4//)
  680 FORMAT(// 1X,'MULTIPLICITY AND NUMBER OF ELECTRONS INCOMPATIBLE.',
     1       /  1X,'MULTIPLICITY        =',I4,
     2       /  1X,'NUMBER OF ELECTRONS =',I4,
     3       /  1X,'MOLECULAR CHARGE    =',I4//)
  685 FORMAT(// 1X,'HALF-ELECTRON FERMI SMEARING ONLY AVAILABLE FOR ',
     1             'SINGLET STATES.',
     2       /  1X,'MULTIPLICITY        =',I4,
     3       /  1X,'IUHF INPUT OPTION   =',I4//)
  690 FORMAT(///1X,'MOLECULAR CHARGE     ',I5,
     1       /  1X,'NUMBER OF ELECTRONS  ',I5,
     2       /  1X,'    ALPHA ELECTRONS  ',I5,
     3       /  1X,'    BETA  ELECTRONS  ',I5)
  700 FORMAT(///1X,'MOLECULAR CHARGE     ',I5,
     1       /  1X,'NUMBER OF ELECTRONS  ',I5,
     2       /  1X,'DOUBLY OCCUPIED MOS  ',I5)
  710 FORMAT(   1X,'ONE ELECTRON IN MO   ',I5)
  720 FORMAT(   1X,'MULTIPLICITY         ',I5)
  730 FORMAT(/  1X,'DOUBLET ASSUMED BY DEFAULT FOR ODD-ELECTRON SYSTEM')
  740 FORMAT(// 1X,'*** OPTIONS FOR THE MOLECULE UNDER STUDY    ***',
     1       /  1X,'*** DEFINED EITHER EXPLICITLY OR BY DEFAULT ***')
  750 FORMAT(/  1X,'KHARGE =',I5,5X,'IMULT  =',I5,5X,'KTRIAL =',I5,5X,
     1             'KGEOM  =',I5,5X,'IPUBO  =',I5,
     2       /  1X,'IUHF   =',I5,5X,'KITSCF =',I5,5X,'NPRINT =',I5,5X,
     3             'IFAST  =',I5,5X,'IDIAG  =',I5,
     4       /  1X,'KSYM   =',I5,5X,'NUMSYM =',I5,5X,'KCI    =',I5,5X,
     5             'NSTART =',I5,5X,'NSTEP  =',I5)
  760 FORMAT(/  1X,'RHF CALCULATION')
  770 FORMAT(/  1X,'UHF CALCULATION')
  780 FORMAT(/  1X,'FAST DIAGONALIZATIONS ALLOWED IN SCF ONLY AFTER',
     1       /  1X,'FULL DIAGONALIZATIONS IN FIRST SCF ITERATIONS')
  790 FORMAT(/  1X,'FAST DIAGONALIZATIONS NOT ALLOWED IN SCF')
  800 FORMAT(   1X,'THE REQUESTED JOB WILL NOT BE RUN.'//)
  810 FORMAT(/  1X,'ENERGY EVALUATION WITHOUT SCF ITERATIONS ',
     1             'USING A GIVEN DENSITY MATRIX: KITSCF =',I4)
  820 FORMAT(   1X,'NOT AVAILABLE FOR HALF-ELECTRON OR CORRELATION ',
     1          1X,'TREATMENTS - CONSIDER OPTION: KITSCF =  -2')
  830 FORMAT(/  1X,'WARNING: DENSITY MATRIX NORMALLY PROVIDED VIA ',
     1             'OPTION KTRIAL=11. CURRENTLY: KTRIAL=',I2)
  840 FORMAT(/  1X,'ENERGY EVALUATION WITHOUT SCF ITERATIONS ',
     1             'USING GIVEN MO EIGENVECTORS: KITSCF =',I4)
  850 FORMAT(/  1X,'WARNING: MO EIGENVECTORS NORMALLY PROVIDED VIA ',
     1             'OPTION KTRIAL=12. CURRENTLY: KTRIAL=',I2)
  860 FORMAT(/  1X,'ERROR: UNRESTRICTED SCF WITH FLOATING ',
     1             'OCCUPATION NUMBERS NOT ALLOWED.')
  870 FORMAT(/  1X,'ERROR: SCF WITH FLOATING OCCUPATION NUMBERS ',
     1             'REQUIRES SUBSEQUENT GUGA-CI CALCULATION.')
      END
