      SUBROUTINE METHOD
C     *
C     INPUT OF OPTIONS FOR GEOMETRY OPTIMIZATION AND FORCE CONSTANTS.
C     *
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON
     ./CONSTF/ A0,AFACT,EV,EVCAL,PI,W1,W2,BIGEXP
     ./INOPT1/ IN1(300)
     ./INOPT2/ IN2(300)
     ./INOPT4/ XN4(50)
     ./MOPAC / IMOPAC
     ./NBFILE/ NBF(20)
     ./SCRT  / SCFCRT,PLCRT,SCFCRS,PLCRS
C *** FILE NUMBERS.
      NB5    = NBF(5)
      NB6    = NBF(6)
C *** PREVIOUSLY DEFINED INPUT OPTIONS.
      IOP    = IN2(2)
      JOP    = IN2(3)
      IEF    = IN2(8)
      NMR    = IN2(13)
      IPSANA = IN2(29)
C *** READ NEW INPUT OPTIONS.
      IF(IMOPAC.EQ.0) THEN
         READ(NB5,500) (IN1(I),I=32,64), IN1(119)
         IF(IN1(60).GT.0) THEN
            READ(NB5,505) (IN1(I),I=191,209)
         ELSE
            IN1(191:209) = 0
         ENDIF
      ENDIF
      IN2(32:64)   = IN1(32:64)
      IN2(119)     = IN1(119)
      IN2(191:209) = IN1(191:209)
C *** IMPOSE DEFAULT VALUES.
C     IN2(35)=ISCF,IN2(36)=IPLSCF: DEFAULT 9 FOR GUGA-CI.
      IF(ABS(IN1(77)).EQ.5) THEN
         IF(IN2(35).EQ.0) IN2(35)=9
         IF(IN2(36).EQ.0) IN2(36)=9
      ENDIF
C     IN2(35)=ISCF,IN2(36)=IPLSCF: STANDARD DEFAULT VALUES.
      IF(IN2(35).EQ.0) IN2(35)=6
      IF(IMOPAC.EQ.1) THEN
         IF(IN2(36).EQ.0) IN2(36)=4
         IF(IN1(77).GT.0 .OR. (IN1(70).LT.0 .AND. IN1(66).GT.0) .OR.
     1      IN2( 3).GT.1 .OR. ABS(IN2(43)).GT.1) IN2(36)=MAX(6,IN2(36))
      ELSE
         IF(IN2(36).EQ.0) IN2(36)=6
      ENDIF
C     IN2(35)=ISCF,IN2(36)=IPLSCF: DEFINE SCF CONVERGENCE CRITERIA.
      SCFCRT = 10.0D0**(-IN2(35))
      PLCRT  = 10.0D0**(-IN2(36))
      SCFCRS = SCFCRT
      PLCRS  = PLCRT
C     IN2(43)=IPREC: TIGHTEN CONVERGENCE CRITERIA FOR OPTIMIZATION.
C     CONVENTION: NEGATIVE IPREC VALUES ARE USED FOR KEYWORD INPUT AND
C     MOPAC-TYPE INPUT TO INDICATE THAT THE CRITERIA HAVE BEEN DEFINED
C     ELSEWHERE (KEYDEF) AND MAY NOT BE REDEFINED LATER (FLEPO, TSOPT).
C     NEGATIVE IPREC VALUES ARE NOT ALLOWED FOR STANDARD INPUT WHERE
C     THEY ARE TREATED AS IPREC=0.
      IF(IMOPAC.EQ.0) THEN
         IF(IN2(43).LT.0) IN2(43)=0
      ENDIF
C     IN2(32)=MAXEND,IN2(38)=IPRINT,IN2(41)=MPRINT.
      IF(IMOPAC.EQ.1) THEN
         IF(IN2(38).EQ.0) IN2(38)=-1
      ENDIF
      IF(JOP.GE.0) THEN
         IF(IN2(32).LE.0) IN2(32)=9999
         IF(IN2(38).GT.0) IN2(41)=MAX(1,IN2(41))
      ELSE
         IF(JOP.EQ.-1) IN2(32)=1
         IF(JOP.EQ.-2) IN2(32)=0
      ENDIF
C     IN2(33)=MAXLIN,IN2(34)=MAXRTL,IN2(38)=IPRINT.
C     IN2(43)=IPREC ,IN2(44)=ICONV ,IN2(45)=IHESS.
C     IN2(47)=NREPET,IN2(48)=LINITG,IN2(49)=LCONVG.
      IF(IN2(33).LE. 0 .AND. IN2(194).LE.0) IN2(33)=4
      IF(IN2(33).LE. 0) IN2(33)=10
      IF(IN2(34).LE. 0) IN2(34)=9999
      IF(IN2(38).LT.-5) IN2(38)=-5
      IF(IN2(43).EQ. 0) IN2(43)=1
      IF(IN2(44).EQ.-1) IN2(44)=2
      IF(IN2(44).EQ.-2) IN2(44)=3
      IF(IN2(45).LT. 0) IN2(45)=0
      IF(IN2(47).EQ. 0) IN2(47)=3
      IF(IN2(48).EQ. 0) IN2(48)=10
      IF(IN2(49).EQ. 0) IN2(49)=10
C     IN2(61)=INP22 ,IN2(62)=INP23 ,IN2(63)=INP24.
C     IN2(61) SPECIAL INPUT FOR EIGENVECTOR FOLLOWING.
      IF(IN2(61).LE.0) THEN
         IF(ABS(IEF).GE.3) IN2(61)=1
      ENDIF
C     IN2(62) SPECIAL INPUT FOR ANALYTIC DERIVATIVES.
      IF(IN2(62).LE.0) THEN
         IF(IPSANA.GT.1 .OR. NMR.GT.10 .OR. NMR.LT.-2) IN2(62)=1
      ENDIF
C     IN2(63) SPECIAL INPUT FOR INTEGRAL-DIRECT AND CG-DMS METHODS.
      IF(IN2(63).LE.0) THEN
         IF(IN2(55).EQ.3 .OR. IN2(56).EQ.3 .OR. IN2(56).EQ.5) IN2(63)=1
      ENDIF
C     IN2(119)=IATERG: DEFAULT -1 FOR ODM2 AND ODM3, 1 FOR OTHER METHODS.
      IF(IOP.EQ.-22 .OR. IOP.EQ.-23) THEN
         IF(IN2(119).EQ.0) IN2(119)=-1
      ELSE
         IF(IN2(119).EQ.0) IN2(119)=1
      ENDIF
C     IN2(191)=NRST  ,IN2(192)=LDROP ,IN2(193)=LDELL ,IN2(197)=LTOLF.
C     IN2(198)=LMAXST,IN2(201)=LFAC  ,IN2(204)=KFAC.
      IF(IN2(191).EQ. 0) IN2(191)=999
      IF(IN2(191).LT. 0) IN2(191)=99999
      IF(IN2(192).LE. 0) IN2(192)=10
      IF(IN2(193).LE. 0) IN2(193)=10
      IF(IN2(197).EQ. 0) IN2(197)=1
      IF(IN2(198).LE. 0) IN2(198)=1
      IF(IN2(201).LE. 0) IN2(201)=100
      IF(IN2(204).EQ. 0) IN2(204)=1000
C     IN2(194)=LSUB,IN2(196)=LCONV.
      IF(JOP.EQ.0 .OR. JOP.EQ.3 .OR. JOP.EQ.5) THEN
         IF(IN2(194).EQ.0) THEN
            IF(IN2(196).LE.0) IN2(196)=50
         ELSE
            IF(IN2(196).LE.0) IN2(196)=1
         ENDIF
      ENDIF
C *** SPECIAL INPUT ROUTINE FOR EIGENVECTOR FOLLOWING AND HDLC OPTIONS.
      IF(IEF.NE.0) CALL INEIGF (IMOPAC,JOP)
C *** PRINTING SECTION.
      JPRINT = IN2(42)
      IF(JPRINT.LT.0) RETURN
C     PRINT SUMMARY OF GENERAL OPTIONS.
      WRITE(NB6,510)
      WRITE(NB6,520) (IN2(I),I=32,64), IN2(119)
C     PRINT SUMMARY OF SPECIAL OPTIONS FOR OPTIMIZATION ETC.
      IF(IN2(60).GT.0 .OR. JPRINT.GE.5) THEN
         WRITE(NB6,521)
         WRITE(NB6,525) (IN2(I),I=191,209)
      ENDIF
C     PRINT SUMMARY OF SPECIAL OPTIONS FOR EIGENVECOR FOLLOWING.
      IF(ABS(IEF).GE.3 .OR. (IEF.NE.0 .AND. JPRINT.GE.5)) THEN
         WRITE(NB6,530)
         WRITE(NB6,531) (IN2(I),I=80,89)
         IF(IMOPAC.EQ.0) WRITE(NB6,532) (XN4(I),I=1,7)
      ENDIF
      IF(JPRINT.LE.0) RETURN
C     PRINT GENERAL OPTIONS FOR OPTIMIZATIONS WITH SOME TEXT.
      IF(JOP.EQ.0 .OR. JOP.EQ.1 .OR. JOP.GT.2) THEN
         WRITE(NB6,540) IN2(38),IN2(32),IN2(33),IN2(34),
     1                  IN2(43),IN2(196)
      ENDIF
C     PRINT SPECIAL OPTIONS FOR MINIMIZATIONS WITH SOME TEXT.
      IF(JPRINT.GE.2 .AND. IEF.GE.0) THEN
         IF(JOP.EQ.0 .OR. JOP.EQ.3 .OR. JOP.EQ.5) THEN
            WRITE(NB6,550) IN2(44),IN2(46),IN2(194),IN2(195),IN2(197)
         ENDIF
      ENDIF
C     PRINT OPTIONS FOR EIGENVECTOR FOLLOWING WITH SOME TEXT.
      IF(IEF.GT.0) THEN
         WRITE(NB6,555)
         IF(IN2(80).GT.0)    WRITE(NB6,560) IN2(80)
         IF(IN2(81).LT.9999) WRITE(NB6,565) IN2(81)
         IF(IN2(81).GT.1) THEN
            IF(IN2(82).EQ.0) WRITE(NB6,570)
            IF(IN2(82).EQ.1) WRITE(NB6,580)
            IF(IN2(82).EQ.2) WRITE(NB6,590)
         ENDIF
         IF(IN2(83).EQ.0) WRITE(NB6,600)
         IF(IN2(83).EQ.1) WRITE(NB6,610) IN2(83)
         IF(IN2(83).EQ.2) WRITE(NB6,620) IN2(83)
         IF(IN2(83).EQ.3) WRITE(NB6,630) IN2(83)
         IF(IN2(83).EQ.4) WRITE(NB6,630) IN2(83)
         IF(IN2(83).EQ.5) WRITE(NB6,630) IN2(83)
         IF(IN2(84).EQ.0) WRITE(NB6,631) IN2(84)
         IF(IN2(84).EQ.1) WRITE(NB6,632) IN2(84)
         IF(IN2(84).EQ.2) WRITE(NB6,633) IN2(84)
         IF(IN2(86).EQ.1) WRITE(NB6,634)
         IF(IN2(88).EQ.0) WRITE(NB6,635)
         IF(IN2(88).EQ.0) WRITE(NB6,640) XN4(1),XN4(2),XN4(3)
         IF(IN2(88).EQ.1) WRITE(NB6,645) XN4(1)
         WRITE(NB6,650) XN4(7)
      ENDIF
C     PRINT OPTIONS FOR HDLC OPTIMIZER.
      IF(IEF.LT.0) THEN
         IF(IN2(51).EQ.0) WRITE(NB6,700)
         IF(IN2(51).EQ.1) WRITE(NB6,710)
         IF(IN2(51).NE.1) THEN
            IF(JOP.EQ.1 .OR. JOP.EQ.4 .OR. JOP.EQ.6) THEN
               IF(IN2(52).EQ.0) WRITE(NB6,720)
               IF(IN2(52).EQ.1) WRITE(NB6,730)
               IF(IN2(52).EQ.2) WRITE(NB6,740)
            ENDIF
            IF(IN2(53).EQ.1) WRITE(NB6,750)
            IF(IN2(53).EQ.2) WRITE(NB6,760)
         ENDIF
C        IF(IN2(54).EQ.0) WRITE(NB6,770)
C        IF(IN2(54).EQ.1) WRITE(NB6,780)
C        IF(IN2(54).EQ.2) WRITE(NB6,790)
      ENDIF
C     PRINT OPTIONS FOR FORCE CONSTANTS.
      IF(JOP.GE.2) THEN
         NPTS  = 2
         KFAC  = IN2(204)
         HINC  = KFAC*1.0D-05
         HINCA = HINC*A0
         IF(IN2(203).EQ.1) NPTS=1
         WRITE(NB6,800) NPTS,HINCA,HINC,IN2(39),IN2(40),IN2(205)
      ENDIF
C     PRINT OPTIONS FOR SCF TREATMENT.
      ISCRT  = IN1(35)+IN1(36)
      IF(ISCRT.GT.0) THEN
         WRITE(NB6,810) SCFCRT,PLCRT
      ELSE
         WRITE(NB6,820)
      ENDIF
      IF(IN2(55).GT.0) WRITE(NB6,830)
      IF(IN2(56).GT.0) WRITE(NB6,840)
      RETURN
  500 FORMAT(3I2,2I1,6I2,I4,5I2,I4,4I2,I4,13I2)
  505 FORMAT(2I4,8I2,I4,2I2,I4,3I2,2I4)
  510 FORMAT(///1X,'*** OPTIONS FROM THE SECOND LINE OF INPUT   ***',
     1       /  1X,'*** DEFINED EITHER EXPLICITLY OR BY DEFAULT ***')
  520 FORMAT(// 1X,'MAXEND =',I5,5X,'MAXLIN =',I5,5X,'MAXRTL =',I5,5X,
     1             'ISCF   =',I5,5X,'IPLSCF =',I5,
     2       /  1X,'MIDDLE =',I5,5X,'IPRINT =',I5,5X,'KPRINT =',I5,5X,
     3             'LPRINT =',I5,5X,'MPRINT =',I5,
     4       /  1X,'JPRINT =',I5,5X,'IPREC  =',I5,5X,'ICONV  =',I5,5X,
     5             'IHESS  =',I5,5X,'IDFP   =',I5,
     6       /  1X,'NREPET =',I5,5X,'LINITG =',I5,5X,'LCONVG =',I5,5X,
     7             'LGDUM  =',I5,5X,'IHDLC1 =',I5,
     8       /  1X,'IHDLC2 =',I5,5X,'IHDLC3 =',I5,5X,'INGEOM =',I5,5X,
     9             'INTDIR =',I5,5X,'LINDMS =',I5,
     A       /  1X,'LINDIA =',I5,5X,'LINFRG =',I5,5X,'INPFRG =',I5,5X,
     B             'INP21  =',I5,5X,'INP22  =',I5,
     C       /  1X,'INP23  =',I5,5X,'INP24  =',I5,5X,'INP25  =',I5,5X,
     D             'IATERG =',I5)
  521 FORMAT(///1X,'*** SPECIAL OPTIONS FOR OPTIMIZATION (ETC)  ***',
     1       /  1X,'*** DEFINED EITHER EXPLICITLY OR BY DEFAULT ***')
  525 FORMAT(// 1X,'NRST   =',I5,5X,'LDROP  =',I5,5X,'LDELL  =',I5,5X,
     1             'LSUB   =',I5,5X,'LALPHA =',I5,
     2       /  1X,'LCONV  =',I5,5X,'LTOLF  =',I5,5X,'LMAXST =',I5,5X,
     3             'IGRAD  =',I5,5X,'LPOINT =',I5,
     4       /  1X,'LFAC   =',I5,5X,'LLDUM  =',I5,5X,'KPOINT =',I5,5X,
     5             'KFAC   =',I5,5X,'KMASS  =',I5,
     6       /  1X,'KKDUM  =',I5,5X,'NTEMP  =',I5,5X,'NTEMP1 =',I5,5X,
     7       /  1X,'NTEMP2 =',I5,5X)
  530 FORMAT(///1X,'*** OPTIONS FOR EIGENVECTOR FOLLOWING       ***',
     1       /  1X,'*** DEFINED EITHER EXPLICITLY OR BY DEFAULT ***')
  531 FORMAT(// 1X,'MODE   =',I5,5X,'IRECLC =',I5,5X,'IUPD   =',I5,5X,
     1             'IGTHES =',I5,5X,'LLAMDA =',I5,
     2       /  1X,'LNONR  =',I5,5X,'LRSCAL =',I5,5X,'LGNMIN =',I5,5X,
     3             'LNOUPD =',I5,5X,'LEFDUM =',I5)
  532 FORMAT(/  1X,'DMAX   =',F8.4,2X,'DDMIN  =',F8.4,2X,
     1             'DDMAX  =',F8.4,2X,'RMIN   =',F8.4,2X,
     2             'RMAX   =',F8.4,
     3       /  1X,'OMIN   =',F8.4,2X,'TOL2   =',F8.4)
  540 FORMAT(///1X,'OPTIONS FOR GEOMETRY OPTIMIZATION ...',
     1       // 1X,'PRINTING FLAG FOR OPTIMIZATION    ...',I5,
     2       /  1X,'MAXIMUM NUMBER OF                    ',
     3       /  1X,'  POINTS PER OPTIMIZATION         ...',I5,
     4       /  1X,'  POINTS PER LINE SEARCH          ...',I5,
     5       /  1X,'  CYCLES PER OPTIMIZATION         ...',I5,
     6       /  1X,'PRECISION FACTOR FOR OPTIMIZATION ...',I5,
     7       /  1X,'PRECISION OPTION FOR LINE SEARCH  ...',I5)
  550 FORMAT(///1X,'SPECIAL OPTIONS FOR MINIMIZATION  ...',
     1       // 1X,'OPTION FOR OVERALL CONVERGENCE    ...',I5,
     2       /  1X,'UPDATE OF INVERSE HESSIAN MATRIX  ...',I5,
     3       /  1X,'CHOICE OF LINE SEARCH ROUTINE     ...',I5,
     4       /  1X,'OPTION FOR INITIAL STEP SIZE      ...',I5,
     5       /  1X,'OPTION LTOLF FOR LINE SEARCH      ...',I5)
  555 FORMAT(///1X,'OPTIONS FOR EIGENVECTOR FOLLOWING ...'/  )
  560 FORMAT(   1X,'MODE TO BE FOLLOWED               ...',I5)
  565 FORMAT(   1X,'RECALCULATION OF HESSIAN (CYCLES) ...',I5)
  570 FORMAT(   1X,'NO UPDATE OF HESSIAN              ...'   )
  580 FORMAT(   1X,'POWELL UPDATE OF HESSIAN          ...'   )
  590 FORMAT(   1X,'BFGS UPDATE OF HESSIAN            ...'   )
  600 FORMAT(   1X,'DIAGONAL GUESS OF INITIAL HESSIAN ...'   )
  610 FORMAT(   1X,'COMPUTATION OF HESSIAN: OPTION    ...',I5)
  620 FORMAT(   1X,'INPUT OF INITIAL HESSIAN: OPTION  ...',I5)
  630 FORMAT(   1X,'COMPUTATION OF HESSIAN: OPTION    ...',I5)
  631 FORMAT(   1X,'NR/P-RFO/QA STEPS: LLAMDA         ...',I5)
  632 FORMAT(   1X,'SIMONS-TYPE STEPS: LLAMDA         ...',I5)
  633 FORMAT(   1X,'NEWTON-RAPHSON STEPS: LLAMDA      ...',I5)
  634 FORMAT(   1X,'SCALE STEP SIZE (IF REQUIRED)     ...'   )
  635 FORMAT(   1X,'UPDATE TRUST RADIUS (IF REQUIRED) ...'   )
  640 FORMAT(   1X,'INITIAL TRUST RADIUS              ...',F8.5,
     1       /  1X,'MINIMUM TRUST RADIUS IN UPDATES   ...',F8.5,
     2       /  1X,'MAXIMUM TRUST RADIUS IN UPDATES   ...',F8.5)
  645 FORMAT(   1X,'INITIAL TRUST RADIUS              ...',F8.5)
  650 FORMAT(   1X,'CRITERION ON GRADIENT NORM        ...',F8.5)
  700 FORMAT(/  1X,'USING HDLC OPTIMIZER WITH HDLC COORDINATES')
  710 FORMAT(/  1X,'USING HDLC OPTIMIZER WITH CARTESIAN COORDINATES')
  720 FORMAT(   1X,'TRANSITION STATE SEARCH USING PRIMITIVE INTERNALS')
  730 FORMAT(   1X,'TRANSITION STATE SEARCH USING CONNECTION SCHEME')
  740 FORMAT(   1X,'TRANSITION STATE SEARCH USING CARTESIANS')
  750 FORMAT(   1X,'ONE FRAGMENT: DLC BASED ON PRIMITIVE INTERNALS')
  760 FORMAT(   1X,'ONE FRAGMENT: DLC BASED ON TOTAL CONNECTION')
C 770 FORMAT(   1X,'SPECIFIC HDLC DATA READ FROM EXTERNAL FILE ')
C 780 FORMAT(   1X,'SPECIFIC HDLC DATA READ FROM STANDARD INPUT')
C 790 FORMAT(   1X,'HDLC CONSTRAINTS DERIVED FROM INPUT GEOMETRY')
  800 FORMAT(///1X,'CALCULATION OF FORCE CONSTANTS    ...',
     1       // 1X,'FINITE-DIFFERENCE PROCEDURE',
     2       /  1X,'  NUMBER OF POINTS FOR AVERAGING  ...',I5,
     3       /  1X,'  INCREMENT IN ANGSTROM           ...',F8.5,
     4       /  1X,'  INCREMENT IN BOHR               ...',F8.5,
     5       /  1X,'PRINTING FLAG FOR FG-ANALYSIS     ...',I5,
     6       /  1X,'PRINTING FLAG FOR FORCE CONSTANTS ...',I5,
     7       /  1X,'OPTION FOR ISOTOPIC SUBSTITUTION  ...',I5)
  810 FORMAT(///1X,'SCF CONVERGENCE CRITERIA          ...',
     1       // 1X,'  FOR ELECTRONIC ENERGY IN EV     ...',E8.2,
     2       // 1X,'  FOR DENSITY MATRIX (DIAGONAL)   ...',E8.2)
  820 FORMAT(// 1X,'DEFAULT SCF CONVERGENCE CRITERIA ARE USED')
  830 FORMAT(/  1X,'INTEGRAL-DIRECT SCF TREATMENT')
  840 FORMAT(/  1X,'CONJUGATE GRADIENT DENSITY MATRIX SEARCH')
      END
