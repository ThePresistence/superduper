      SUBROUTINE AINVRS (AMAT,WORK,LMA,LWORK,NPS,NSET,LMNSET)
C     *
C     CALCULATE THE SURFACE CHARGE INTERACTION MATRIX A AND THE
C     INVERSE OF THE A-MATRIX.
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     AMAT      A-MATRIX AND INVERSE OF THE A-MATRIX (O).
C     WORK      WORKING BUFFER FOR MATRIX INVERSION (S).
C     LMA       DIMENSION OF AMAT (I).
C     LWORK     DIMENSION OF WORK (I).
C     NPS       NUMBER OF SEGMENTS ON THE SURFACE (I).
C     NSET      INDEX ARRAY DETERMINED DURING SURFACE CONSTRUCTION (I).
C     LMNSET    DIMENSION OF INDEX ARRAY (I).
C     *
C     MEMORY ALLOCATION FOR AMAT(LMA):
C     THE COSMO A-MATRIX OCCUPIES THE FIRST NPS*NPS WORDS OF AMAT.
C     IT IS CONCEPTUALLY A SQUARE MATRIX WHICH IS ACCESSED LINEARLY.
C     IN THE INVERSION OF THE COSMO A-MATRIX, THE NEEDED WORKING
C     ARRAY STARTS AT AMAT(NPS*NPS+1).
C     *
      USE LIMIT, ONLY: LM1, LMNPS, NPPA
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON
     ./ATOMC / COORD(3,LM1)
     ./CONSTF/ A0,AFACT,EV,EVCAL,PI,W1,W2,BIGEXP
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./COSMO2/ NCOSMO,NPSG(4)
     ./COSMO3/ FEPSI,RDS,DISEX2,SRAD(LM1)
     ./COSMO4/ IATSP(LMNPS)
     ./COSMO8/ COSURF(3,LMNPS),AREASG(LMNPS),QSG(LMNPS)
     ./COSMO9/ DIRVEC(3,NPPA),TM(3,3,LM1),NAR(LMNPS),NSETF(LMNPS)
     ./INOPT2/ IN2(300)
     ./NBFILE/ NBF(20)
      DIMENSION AMAT(LMA),WORK(LWORK)
      DIMENSION NSET(LMNSET)
      DIMENSION IPIV(LMNPS)
      DIMENSION XA(3),XI(3),XJ(3)
C *** FILE NUMBERS.
      NB6    = NBF(6)
C *** INITIALIZATION.
      NPRINT = IN2(72)
      FDIAG  = 1.05D0*SQRT(DBLE(NPPA))
C     *
C *** DEFINE THE A-MATRIX (IN AMAT).
C     *
C     LOOP OVER ALL SEGMENTS (IPS).
      DO 280 IPS=1,NPS
      I      = IATSP(IPS)
      RI     = SRAD(I)-RDS
      NARI   = NAR(IPS)
      NSETFI = NSETF(IPS)
      AA     = ZERO
C     COMPUTE AND STORE THE AREA OF THE SEGMENT (IPS).
      AREASG(IPS) = NARI*FOUR*PI*RI*RI/NPPA
C     LOOP OVER ALL GRID POINTS (K,L) IN THE SEGMENT (IPS)
C     AND EVALUATE THE SELF-INTERACTION ENERGY TERM (AA).
      DO 235 K=NSETFI,NSETFI+NARI-1
      J1     = NSET(K)
      AA     = AA+FDIAG
      X1     = DIRVEC(1,J1)
      X2     = DIRVEC(2,J1)
      X3     = DIRVEC(3,J1)
      DO 230 L=NSETFI,K-1
      J2     = NSET(L)
      AA     = AA+TWO/SQRT((X1-DIRVEC(1,J2))**2+
     1                     (X2-DIRVEC(2,J2))**2+
     2                     (X3-DIRVEC(3,J2))**2)
  230 CONTINUE
  235 CONTINUE
      AA     = AA/RI/NARI**2
      AMAT(IPS+(IPS-1)*NPS) = AA
C     STORE COORDINATES OF CURRENT ATOM (I) AND SEGMENT (IPS).
      XI(1)  = COORD(1,I)
      XI(2)  = COORD(2,I)
      XI(3)  = COORD(3,I)
      XA(1)  = COSURF(1,IPS)
      XA(2)  = COSURF(2,IPS)
      XA(3)  = COSURF(3,IPS)
C     LOOP OVER ALL OTHER SEGMENTS (JPS) - JPS.GT.IPS
      DO 270 JPS=IPS+1,NPS
      NARJ   = NAR(JPS)
      NSETFJ = NSETF(JPS)
      J      = IATSP(JPS)
      XJ(1)  = COORD(1,J)-XI(1)
      XJ(2)  = COORD(2,J)-XI(2)
      XJ(3)  = COORD(3,J)-XI(3)
      DIST   = (COSURF(1,JPS)-XA(1))**2
      DIST   = DIST+(COSURF(2,JPS)-XA(2))**2
      DIST   = DIST+(COSURF(3,JPS)-XA(3))**2
C     COMPUTE THE INTERACTION BETWEEN SEGMENTS IPS AND JPS.
C     FIRST CASE: USE ALL GRID POINTS IF THE SEGMENTS ARE CLOSE.
      IF(DIST.LT.DISEX2) THEN
         RJ  = SRAD(J)-RDS
         AIJ = ZERO
         DO 260 K=NSETFI,NSETFI+NARI-1
         J1  = NSET(K)
         XX1 = DIRVEC(1,J1)*RI
         XX2 = DIRVEC(2,J1)*RI
         XX3 = DIRVEC(3,J1)*RI
C        THE SEGMENTS BELONG TO DIFFERENT ATOMS (I,J).
         IF(I.NE.J) THEN
            X1 = XX1*TM(1,1,I)+XX2*TM(2,1,I)+XX3*TM(3,1,I)-XJ(1)
            X2 = XX1*TM(1,2,I)+XX2*TM(2,2,I)+XX3*TM(3,2,I)-XJ(2)
            X3 = XX1*TM(1,3,I)+XX2*TM(2,3,I)+XX3*TM(3,3,I)-XJ(3)
            DO 240 L=NSETFJ,NSETFJ+NARJ-1
            J2  = NSET(L)
            XX1 = DIRVEC(1,J2)*RJ
            XX2 = DIRVEC(2,J2)*RJ
            XX3 = DIRVEC(3,J2)*RJ
            Y1  = XX1*TM(1,1,J)+XX2*TM(2,1,J)+XX3*TM(3,1,J)-X1
            Y2  = XX1*TM(1,2,J)+XX2*TM(2,2,J)+XX3*TM(3,2,J)-X2
            Y3  = XX1*TM(1,3,J)+XX2*TM(2,3,J)+XX3*TM(3,3,J)-X3
            AIJ = AIJ+ONE/SQRT(Y1*Y1+Y2*Y2+Y3*Y3)
  240       CONTINUE
C        THE SEGMENTS BELONG TO THE SAME ATOM (I).
         ELSE
            DO 250 L=NSETFJ,NSETFJ+NARJ-1
            J2  = NSET(L)
            AIJ = AIJ+ONE/SQRT((DIRVEC(1,J2)*RJ-XX1)**2+
     1                         (DIRVEC(2,J2)*RJ-XX2)**2+
     2                         (DIRVEC(3,J2)*RJ-XX3)**2)
  250       CONTINUE
         ENDIF
  260    CONTINUE
         AIJ = AIJ/NARI/NARJ
C     SECOND CASE: USE ONLY CENTER POINTS IF THE SEGMENTS ARE DISTANT.
      ELSE
         AIJ = ONE/SQRT(DIST)
      ENDIF
C     STORE THE RESULT.
      AMAT(IPS+(JPS-1)*NPS) = AIJ
      AMAT(JPS+(IPS-1)*NPS) = AIJ
  270 CONTINUE
  280 CONTINUE
C *** DEBUG PRINT OF A-MATRIX.
      IF(NCOSMO.EQ.1 .AND. NPRINT.GT.5) THEN
         WRITE(NB6,500)
         CALL MATPRT (AMAT,NPS,NPS,NPS,NPS)
      ENDIF
C     *
C *** INVERT A-MATRIX.
C     *
      CALL DGETRF(NPS,NPS,AMAT,NPS,IPIV,INFO)
      CALL DGETRI(NPS,AMAT,NPS,IPIV,WORK,LWORK,INFO)
C *** DEBUG PRINT OF INVERSE A-MATRIX.
      IF(NCOSMO.EQ.1 .AND. NPRINT.GT.5) THEN
         WRITE(NB6,510)
         CALL MATPRT (AMAT,NPS,NPS,NPS,NPS)
      ENDIF
      RETURN
  500 FORMAT(///1X,'COSMO A-MATRIX: SURFACE CHARGE INTERACTIONS',
     1          1X,'(ANGSTROM-1).'/)
  510 FORMAT(///1X,'INVERSE OF THE A-MATRIX (ANGSTROM).'/)
      END
