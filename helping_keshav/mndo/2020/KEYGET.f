      SUBROUTINE KEYGET (KEYWRD,KEYLEN,ICALL)
C     *
C     READ FIRST LINES OF AN INPUT FILE WITH MNDO97 KEYWORDS.
C     KEYWORD AND TITLE LINES FOR INPUT MODE IMOPAC=-1.
C     *
C     NOTATION. I=INPUT, O=OUTPUT.
C     KEYWRD    CHARACTER STRING FOR KEYWORDS (O).
C     KEYLEN    LENGTH OF CHARACTER STRING KEYWRD, IN BYTES (O).
C               INITIALIZED TO THE MAXIMUM AVAILABLE LENGTH.
C               ACTUAL LENGTH DETERMINED DURING INPUT.
C     ICALL     ERROR FLAG (O).
C               = 0 NORMAL RETURN.
C               =-9 END-OF-FILE ENCOUNTERED.
C     *
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*(*) KEYWRD
      CHARACTER*80 KOMENT,KTITLE
      CHARACTER*80 LINE
      COMMON
     ./FLAG1 / KTITLE,KOMENT
     ./NBFILE/ NBF(20)
C *** FILE NUMBERS.
      NB5    = NBF(5)
      NB6    = NBF(6)
C *** INITIALIZATION.
      ICALL  = 0
      KEYWRD = ' '
      KOMENT = ' '
      KTITLE = ' '
      KEYLEN = LEN(KEYWRD)
      MXLINE = (KEYLEN-1)/80+1
C *** READ LINES WITH MNDO97 KEYWORDS (KEYWRD).
      DO 20 I=1,MXLINE
      READ(NB5,'(A)',END=130,ERR=110) LINE
      CALL UPPCAS (LINE,80)
      ICOL1  = (I-1)*80 + 1
      ICOL2  = MIN(ICOL1+79,KEYLEN)
      ICOL   = ICOL2-ICOL1+1
      KEYWRD(ICOL1:ICOL2) = LINE(1:ICOL)
C *** FIRST CHECK FOR CONTINUATION OF KEYWORD INPUT ON NEXT LINE.
C     CRITERION: STRING ' +' OR ' &' APPEARS IN THE CURRENT LINE.
      IF((INDEX(LINE,' +')+INDEX(LINE,' &')).GT.0) THEN
         IF(I.LT.MXLINE) THEN
            GO TO 20
         ELSE
            WRITE(NB6,520) MXLINE
            STOP 'KEYGET'
         ENDIF
      ELSE
         GO TO 30
      ENDIF
C *** SECOND CHECK FOR CONTINUATION OF KEYWORD INPUT ON NEXT LINE.
C     CRITERION: LAST NON-BLANK CHARACTER IN THE CURRENT LINE
C     IS '+' OR '&' PRECEDED BY AT LEAST ONE BLANK CHARACTER.
C     DO 10 J=ICOL,2,-1
C     IF(LINE(J:J).NE.' ') THEN
C        IF(LINE(J-1:J).EQ.' +' .OR. LINE(J-1:J).EQ.' &') THEN
C           IF(I.LT.MXLINE) THEN
C              GO TO 20
C           ELSE
C              WRITE(NB6,520) MXLINE
C              STOP 'KEYGET'
C        ELSE
C           GO TO 30
C        ENDIF
C     ENDIF
C  10 CONTINUE
      GO TO 30
   20 CONTINUE
C *** READ LINES WITH TITLES (KTITLE,KOMENT).
   30 READ(NB5,'(A)',END=130,ERR=120) KTITLE,KOMENT
C *** DETERMINE ACTUAL LENGTH OF KEYWRD.
      DO 40 I=ICOL2,2,-1
      IF(KEYWRD(I:I).NE.' ') GO TO 50
   40 CONTINUE
   50 IF(I.LT.KEYLEN) KEYLEN=I+1
      RETURN
C *** ERROR EXITS.
  110 WRITE(NB6,500)
      STOP 'KEYGET'
  120 WRITE(NB6,510)
      STOP 'KEYGET'
  130 CONTINUE
      ICALL = -9
      RETURN
  500 FORMAT(// 1X,'ERROR WHEN READING FIRST LINES (KEYWORDS).'/)
  510 FORMAT(// 1X,'ERROR WHEN READING FIRST LINES (TITLE).'/)
  520 FORMAT(// 1X,'TOO MANY LINES WITH KEYWORDS. MAXIMUM:',I3/)
      END
