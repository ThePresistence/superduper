      SUBROUTINE DYNPT (LEN,LM5,LM5X,LM5R)
C     *
C     DYNAMIC MEMORY ALLOCATION FOR PERTURBATION TREATMENT.
C     *
C     NOTATION.
C     LEN  = AVAILABLE LENGTH OF BLANK COMMON AREA (INPUT VALUE,
C            NOT MODIFIED IN THIS ROUTINE).
C     LM5  = LAST ADDRESS OF BLANK COMMON AREA THAT HAS PREVIOUSLY
C            BEEN RESERVED (INPUT VALUE, NOT MODIFIED IN THIS ROUTINE).
C     LM5X = LAST ADDRESS OF BLANK COMMON AREA THAT IS ACTUALLY USED
C            BY THE ARRAYS DEFINED PRESENTLY (DETERMINED HERE).
C     LM5R = LAST ADDRESS OF BLANK COMMON AREA THAT NEEDS TO REMAIN
C            RESERVED LATER ON (DETERMINED IN THIS ROUTINE).
C     *
C     THE ARRAYS ALLOCATED IN THIS ROUTINE START AT ADDRESSES DEFINED
C     PREVIOUSLY IN DYNSCF (SEE BELOW) AND EXTEND TO ADDRESS LM5X.
C     *
C     THE DYNAMIC MEMORY ALLOCATION FOR THE SCF TREATMENT (IN DYNSCF)
C     DEFINES THE FOLLOWING ORDER OF ARRAYS (IN STANDARD NOTATION):
C     ARRAY: C(L22),E(LM2),W(LM9),F(L22),H(LM4),D(LM4),P(LM4),Q(LD)
C     START: LS1....LS2....LS9....LS6....LS7....LS5....LS8....LS3
C     THESE ASSIGNMENTS ARE REQUIRED BELOW. HENCE, A CALL TO DYNSCF
C     MUST PRECEDE ANY CALL TO DYNPT.
C     *
C     THE DYNAMIC MEMORY ALLOCATION FOR THE INTEGRAL TRANSFORMATION IN
C     THE PERTURBATION TREATMENT EMPLOYS THE FOLLOWING ARRAYS:
C     ARRAY: C(L22),E(LM2),W(LM9),..,C12(LM6),WW(LM6),G(LM8),CC(LM7)
C     START: LS1....LS2....LS9.......LS3......LP4.....LP5....LP6
C     *
C     STORAGE CONVENTIONS.
C     - C,E: UNCHANGED.
C     - W  : AO INTEGRALS REPLACED BY MO INTEGRALS.
C     - W  : MO INTEGRALS MAY USE LS9...LS8-1 AND OVERWRITE F,H,D.
C     - P  : UNCHANGED IF THERE IS ENOUGH MEMORY, OTHERWISE DESTROYED.
C     - Q  : DESTROYED BY C12,WW,G,CC.
C     *
C     ARRAYS OF FIXED LENGTH:
C     - W  : AO INTEGRALS (LM9).
C     - C12: COEFFICIENT PRODUCTS (LM6).
C     - WW : LOCAL SET OF HALF-TRANSFORMED INTEGRALS (LM6).
C     - G  : INTERMEDIATE INTEGRALS (LM8).
C     ARRAYS OF FLEXIBLE LENGTH:
C     - W  : MO INTEGRALS, USE FILE NB2 IF NEEDED.
C     - CC : REORDERED AO INTEGRALS, USE FILE NB3 IF NEEDED.
C     *
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL UHF
      COMMON
     ./INOPT2/ IN2(300)
     ./LIMITS/ LM2,LM3,LM4,LM6,LM7,LM8,LM9
     ./LMPERT/ LP3,LP4,LP5,LP6,LY9
     ./LMSCF / LS1,LS2,LS3,LS4,LS5,LS6,LS7,LS8,LS9
     ./NBFILE/ NBF(20)
     ./UHF   / UHF
C *** FILE NUMBERS.
      NB6    = NBF(6)
C *** INPUT OPTIONS.
      JPRINT = IN2(42)
      KCI    = IN2(77)
      ICI1   = IN2(131)
      ICI2   = IN2(132)
C *** INITIALIZATION.
      LM5X   = 0
      LM5R   = 0
      IF(UHF .OR. ABS(KCI).LT.2) RETURN
C *** DEFINE LENGTH OF IN-CORE ARRAYS.
      LM7    = LM6*LM6
      LM8    = (ICI1+ICI2)**2
      LM8    = MAX(LM8,ICI1*LM6)
      LX9    = (ICI1*(ICI1+1)/2) * (ICI2*(ICI2+1)/2)
      LY9    = MIN(LX9,LS8-LS9)
C *** ASSIGN DEFAULT ADDRESSES.
      LP3    = LS3
      LP4    = LP3+LM6
      LP5    = LP4+LM6
      LP6    = LP5+LM8
C *** CHECK AVAILABLE MEMORY.
      LPA    = LP6+LM7-1
      LMCOR  = LPA
      IF(LPA.GT.LEN) THEN
         LBUFF7 = LEN-LP6+1
         LPAMIN = LS6-1+3*LM6+LM8
         IF(LBUFF7.GT.LM6) THEN
            LM7 = LM6*(LBUFF7/LM6)
            LPA = LP6+LM7-1
         ELSE IF(LPAMIN.LE.LEN) THEN
            LY9 = MIN(LX9,LM9)
            LP3 = LS6
            LP4 = LP3+LM6
            LP5 = LP4+LM6
            LP6 = LP5+LM8
            LM7 = MIN(LM7,LM6*((LEN-LP6+1)/LM6))
            LPA = LP6+LM7-1
            IN2(212) = MAX(IN2(212),1)
         ELSE
            WRITE(NB6,900)
            WRITE(NB6,910) LEN,LPA,LMCOR
            STOP 'DYNPT'
         ENDIF
      ENDIF
C *** REDEFINE LENGTH OF OVERALL BUFFER.
      LM5X   = LPA
C *** PRINTING SECTION.
      IF(JPRINT.LT.0) RETURN
      IF(LMCOR.GT.LEN) THEN
         WRITE(NB6,500)
         WRITE(NB6,510) LEN,LPA,LMCOR
      ENDIF
      IF(JPRINT.LT.2) RETURN
      L23    = LM2*LM3
      L66    = LM6*LM6
      WRITE(NB6,520) LS1,LS1-1+L23,L23,LS2,LS2-1+LM2,LM2,
     1               LS9,LS9-1+LM9,LM9,LS9,LS9-1+LY9,LY9,
     2               LP3,LP3-1+LM6,LM6,LP4,LP4-1+LM6,LM6,
     3               LP5,LP5-1+LM8,LM8,LP6,LP6-1+LM7,LM7
      IF(LM7.LT.L66) WRITE(NB6,530) L66,LM7
      IF(LY9.LT.LX9) WRITE(NB6,540) LX9,LY9
      RETURN
  500 FORMAT(///1X,'*** WARNING ****',
     1       // 1X,'DUE TO MEMORY LIMITATIONS THE PROGRAM CANNOT ',
     2             'USE THE MOST EFFICIENT IN-CORE ALGORITHMS ',
     3       /  1X,'FOR THE CORRELATION TREATMENT.')
  510 FORMAT(/  1X,'AVAILABLE LENGTH OF BLANK COMMON           ',I10,
     1       /  1X,'CURRENT LENGTH                             ',I10,
     2       /  1X,'FIELD LENGTH REQUIRED FOR IN-CORE TREATMENT',I10)
  520 FORMAT(///1X,'MEMORY ALLOCATION FOR INTEGRAL TRANSFORMATION',
     1       // 1X,'    START    FINAL   LENGTH    CONTENTS',
     2       // 1X,3I9,4X,'EIGENVECTORS',
     3       /  1X,3I9,4X,'EIGENVALUES',
     4       /  1X,3I9,4X,'TWO-ELECTRON AO INTEGRALS',
     5       /  1X,3I9,4X,'TWO-ELECTRON MO INTEGRALS',
     6       /  1X,3I9,4X,'COEFFICIENT PRODUCTS',
     7       /  1X,3I9,4X,'SET OF HALF-TRANSFORMED INTEGRALS',
     8       /  1X,3I9,4X,'BUFFER FOR REORDERED AO INTEGRALS',
     9       /  1X,3I9,4X,'BUFFER FOR INTERMEDIATE INTEGRALS')
  530 FORMAT(/  1X,'THE REORDERED AO INTEGRALS ARE SAVED ON FILE.',
     1       /  1X,'FULL BUFFER LENGTH REQUIRED (WORDS):',I10,
     2       /  1X,'AVAILABLE BUFFER LENGTH     (WORDS):',I10)
  540 FORMAT(/  1X,'THE INTERMEDIATE INTEGRALS ARE SAVED ON FILE.',
     1       /  1X,'FULL BUFFER LENGTH REQUIRED (WORDS):',I10,
     2       /  1X,'AVAILABLE BUFFER LENGTH     (WORDS):',I10)
  900 FORMAT(///1X,'*** ERROR ****',
     1       // 1X,'DUE TO INSUFFICIENT MEMORY THE PROGRAM CANNOT ',
     2       /  1X,'CARRY OUT THE CORRELATION TREATMENT.')
  910 FORMAT(/  1X,'AVAILABLE LENGTH OF BLANK COMMON           ',I10,
     1       /  1X,'MINIMUM FIELD LENGTH REQUIRED              ',I10,
     2       /  1X,'FIELD LENGTH REQUIRED FOR IN-CORE TREATMENT',I10)
      END
