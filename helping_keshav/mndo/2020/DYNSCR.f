      SUBROUTINE DYNSCR (LEN,LM5,LM5X,LM5R)
C     *
C     DYNAMIC MEMORY ALLOCATION FOR DIIS CONVERGENCE ACCELERATION.
C     *
C     NOTATION.
C     LEN  = AVAILABLE LENGTH OF BLANK COMMON AREA (INPUT VALUE,
C            NOT MODIFIED IN THIS ROUTINE).
C     LM5  = LAST ADDRESS OF BLANK COMMON AREA THAT HAS PREVIOUSLY
C            BEEN RESERVED (INPUT VALUE, NOT MODIFIED IN THIS ROUTINE).
C     LM5X = LAST ADDRESS OF BLANK COMMON AREA THAT IS ACTUALLY USED
C            BY THE ARRAYS DEFINED PRESENTLY (DETERMINED HERE).
C     LM5R = LAST ADDRESS OF BLANK COMMON AREA THAT NEEDS TO REMAIN
C            RESERVED LATER ON (DETERMINED IN THIS ROUTINE).
C     *
      USE LIMIT, ONLY: LM1
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL UHF
      COMMON
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./INOPT2/ IN2(300)
     ./LIMITS/ LM2,LM3,LM4,LM6,LM7,LM8,LM9
     ./LMDIIS/ LDIIS1,LDIIS2,LDIIS3,LDIIS4,LDIIS5,LDIIS6,MXDIIS,MX1P,LMD
     ./NBFILE/ NBF(20)
     ./UHF   / UHF
C *** FILE NUMBERS.
      NB6    = NBF(6)
C *** INPUT VARIABLES.
      IDIIS  = IN2(9)
      JPRINT = IN2(42)
      KITSCF = IN2(71)
C *** INITIALIZATION.
      LM5X   = 0
      LM5R   = 0
      LSCMAX = LEN-LM5
      LSCR1  = LM5+1
C     *
C     THE MAXIMUM NUMBER OF DIIS ITERATIONS IS MXDIIS=MX.
C     DERIVED ARRAY LENGTHS INCLUDE MX1=MX+1, MX1P=(MX1*(MX1+1))/2.
C     DYNAMIC MEMORY ALLOCATION FOR THE ARRAYS USED IN RHF-DIIS:
C     ARRAY: FDA(LM4*MX1),ED(LM4*MX1),BD(MX1P),AD(MX1P),B(MX1)=X(MX1).
C     START: LDIIS1.......LDIIS2......LDIIS3...LDIIS4...LDIIS5........
C     UHF-DIIS REQUIRES ADDITIONAL BUFFER SPACE:
C     ARRAY: FDB(LM4*MX1).
C     START: LDIIS6.......
C     *
C     THE MINIMUM SCRATCH BUFFER FOR DIIS REQUIRES LXDIIS WORDS.
C     LXDIIS(RHF) = MX*(2*LM4+MX+4) + 2*LM4 + 3
C     LXDIIS(UHF) = MX*(3*LM4+MX+4) + 3*LM4 + 3
C     THE AVAILABLE BUFFER OF LSCMAX WORDS DEFINES AN UPPER LIMIT
C     MXMAX FOR MX (GIVEN BY THE SOLUTION OF A QUADRATIC EQUATION):
C     LARGEST VALUE FOR WHICH ALL DIIS ARRAYS FIT INTO MEMORY.
C     *
C     CONVENTIONS FOR THE CHOICE OF MXDIIS.
C     MXDIIS = MIN(MXMAX,KITSCF) : MAXIMUM OF KITSCF ITERATIONS ALLOWED.
C     MXDIIS = MXMIN = 5 :    MINIMUM NUMBER OF DIIS ITERATIONS ALLOWED.
C     *
C     BY DEFAULT, ENOUGH MEMORY IS ALLOCATED TO EVALUATE THE ERROR
C     MATRIX (E = F*P - P*F) BY MATRIX MULTIPLICATIONS USING DGEMM.
C     THIS REQUIRES AN EXTRA BUFFER OF 2*LM4 WORDS (RHF) COMPARED WITH
C     THE EVALUATION VIA DSPMM (FORTRAN CODE USING LINEARLY PACKED
C     ARRAYS, SEE FORMULA FOR LXDIIS(RHF) ABOVE). THE INPUT OPTION
C     JDIIS=2 OR JDIIS=3 (JDIIS=IDIIS/10) ENFORCES AN EVALUATION
C     VIA DSPMM AND MAY BE USED TO REDUCE THE MEMORY REQUIREMENTS
C     BY 2*LM4 WORDS (RHF) IN CRITICAL CASES.
C     *
C     NOTE THAT THE ARRAYS FOR DIIS MUST NOT BE OVERWRITTEN DURING
C     THE COMPLETE SCF PROCEDURE.
C     *
      IF(IDIIS.GE.0) THEN
C        DEFINE THE MINIMUM NUMBER OF DIIS ITERATIONS ALLOWED.
         MXMIN  = 5
         LXMIN  = MXMIN*(2*LM4+MXMIN+4) + 2*LM4 + 3
         IF(UHF) LXMIN = LXMIN + (MXMIN+1)*LM4
C        DETERMINE MXDIIS.
         JDIIS  = IDIIS/10
         PHALF  = LM4+2
         QQUAD  = 3-LSCMAX
         IF(JDIIS.NE.1 .AND. JDIIS.NE.3) QQUAD=QQUAD+2*LM4
         IF(UHF) THEN
            PHALF  = PHALF+LM4/2
            IF(JDIIS.NE.1 .AND. JDIIS.NE.3) QQUAD=QQUAD+LM4
         ENDIF
         MXMAX  = INT(-PHALF+SQRT(PHALF**2-QQUAD))
C        DATA FOR MXMAX DIIS ITERATIONS WILL FIT INTO THE MEMORY.
C        HOWEVER THERE CAN BE AT MOST KITSCF SCF ITERATIONS.
C        THE DIIS PROCEDURE RESTARTS EVERY 12-ITERATION (DETERMINED BY
C        EXPERIENCE) FOR THE BEST SCF CONVERGENCE.
C        MXDIIS = MIN(MXMAX,KITSCF)
         MXDIIS = MIN(MXMAX,12)
         MX1    = MXDIIS+1
         MX1P   = (MX1*(MX1+1))/2
         IF(JDIIS.EQ.1 .OR. JDIIS.EQ.3) THEN
            MXBUFF = MXDIIS
         ELSE
            MXBUFF = MX1
         ENDIF
C        ADDRESSES FOR RHF.
C        LDIIS1 = LSCR1 IF DIIS BUFFER IS PART OF THE GENERAL BUFFER.
C        LDIIS1 = 1     IF DIIS BUFFER IS ALLOCATED DYNAMICALLY.
         LDIIS1 = 1
         LDIIS2 = LDIIS1+LM4*MXBUFF
         LDIIS3 = LDIIS2+LM4*MXBUFF
         LDIIS4 = LDIIS3+MX1P
         LDIIS5 = LDIIS4+MX1P
C        ADDRESSES FOR UHF.
         IF(UHF) THEN
            LDIIS6 = LDIIS5+MX1
            LMD    = LDIIS6+LM4*MXBUFF-1
         ELSE
            LDIIS6 = LDIIS1
            LMD    = LDIIS5+MXDIIS
         ENDIF
C        PRINTING SECTION.
         IF(IDIIS.GT.0 .AND. JPRINT.GE.2) THEN
            IF(LDIIS1.EQ.1) THEN
               WRITE(NB6,640) LMD,MXMAX,MXDIIS
            ELSE
               WRITE(NB6,650) LEN,LDIIS1,LMD,MXMAX,MXDIIS
            ENDIF
            WRITE(NB6,660) LDIIS1,LDIIS1+LM4*MXBUFF-1,LM4*MXBUFF,
     1                     LDIIS2,LDIIS2+LM4*MXBUFF-1,LM4*MXBUFF,
     2                     LDIIS3,LDIIS3+MX1P-1,MX1P,
     3                     LDIIS4,LDIIS4+MX1P-1,MX1P,
     4                     LDIIS5,LDIIS5+MX1 -1,MX1
            IF(UHF) THEN
               WRITE(NB6,670) LDIIS6,LDIIS6+LM4*MXBUFF-1,LM4*MXBUFF
            ENDIF
         ENDIF
C        DIIS NOT FEASIBLE DUE TO MEMORY LIMITATIONS.
         IF(MXDIIS.LT.MXMIN) THEN
            IN2(9) =-1
            IF(JPRINT.GE.5 .OR. (IDIIS.GT.0 .AND. JPRINT.GE.0)) THEN
               WRITE(NB6,680) LSCMAX,MXDIIS
            ENDIF
         ENDIF
C        SAVE LAST ADDRESS USED.
         IF(LDIIS1.GT.1) LM5X = MAX(LM5X,LMD)
      ENDIF
      RETURN
  640 FORMAT(///1X,'MEMORY ALLOCATION FOR DIIS',
     1       /  1X,'TOTAL LENGTH OF ALLOCATABLE DIIS BUFFER    ',I10,
     2       /  1X,'MAXIMUM NUMBER OF DIIS ITERATIONS POSSIBLE ',I10,
     3       /  1X,'MAXIMUM NUMBER OF DIIS ITERATIONS CHOSEN   ',I10)
  650 FORMAT(///1X,'MEMORY ALLOCATION FOR DIIS',
     1       // 1X,'AVAILABLE LENGTH OF BLANK COMMON           ',I10,
     2       /  1X,'ADDRESS OF FIRST AVAILABLE WORD            ',I10,
     3       /  1X,'ADDRESS OF LAST  AVAILABLE WORD            ',I10,
     4       /  1X,'MAXIMUM NUMBER OF DIIS ITERATIONS POSSIBLE ',I10,
     5       /  1X,'MAXIMUM NUMBER OF DIIS ITERATIONS CHOSEN   ',I10)
  660 FORMAT(///1X,'MEMORY ALLOCATION FOR DIIS',
     1       // 1X,'    START    FINAL   LENGTH    CONTENTS',
     2       // 1X,3I9,4X,'FOCK MATRICES IN DIIS ITERATIONS',
     3       /  1X,3I9,4X,'ERROR MATRICES IN DIIS ITERATIONS',
     4       /  1X,3I9,4X,'SCALAR PRODUCTS OF ERROR MATRICES',
     5       /  1X,3I9,4X,'COEFFICIENTS IN LINEAR EQUATIONS',
     6       /  1X,3I9,4X,'RHS AND SOLUTION VECTORS')
  670 FORMAT(   1X,3I9,4X,'FOCK MATRICES IN DIIS ITERATIONS (BETA)')
  680 FORMAT(///1X,'NOT ENOUGH MEMORY FOR DIIS PROCEDURE',
     1       /  1X,'MAXIMUM AVAILABLE MEMORY (WORDS)           ',I10,
     2       /  1X,'MAXIMUM NUMBER OF DIIS ITERATIONS POSSIBLE ',I10,
     3       /  1X,'RESET IDIIS=-1 AND CONTINUE WITHOUT DIIS')
      END
