      SUBROUTINE DGRAD (DXYZ,PA,PB,Q,A2,A,B,LM4,LMA2,LMQ,NPS)
C     *
C     CALCULATION OF THE COSMO GRADIENT CONTRIBUTIONS.
C     *
C     NOTATION.  I=INPUT, O=OUTPUT, S=SCRATCH.
C     DXYZ       CARTESIAN DERIVATIVES (I,O).
C     PA(LM4)    DENSITY MATRIX FOR ALPHA ELECTRONS (I).
C     PB(LM4)    DENSITY MATRIX FOR BETA ELECTRONS (I).
C     Q(LMQ)     POPULATIONS OF ONE-CENTER PAIRS (S).
C     A2(LMA2)   INVERSE OF COSMO A-MATRIX, PACKED (I).
C     A(NPS,NPS) INVERSE OF COSMO A-MATRIX, SQUARE (I).
C     B(LMQ,NPS) RECTANGULAR COSMO B-MATRIX (I)
C     LMQ        TOTAL NUMBER OF SOLUTE CHARGES (I).
C     NPS        TOTAL NUMBERS OF SEGMENTS ON COSMO SURFACE (I).
C     *
      USE LIMIT, ONLY: LM1, LMI, LMZ, LMNPS
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (SQ3=1.7320508075689D0)
      COMMON
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./ATOMC / COORD(3,LM1)
     ./CONSTF/ A0,AFACT,EV,EVCAL,PI,W1,W2,BIGEXP
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./COSMO3/ FEPSI,RDS,DISEX2,SRAD(LM1)
     ./COSMO4/ IATSP(LMNPS)
     ./COSMO7/ JPC(LMI+LM1+1)
     ./COSMO8/ COSURF(3,LMNPS),AREASG(LMNPS*2)
     ./INOPT2/ IN2(300)
     ./MULTIP/ DD(6,0:LMZ),PO(9,0:LMZ)
C    ./NBFILE/ NBF(20)
      DIMENSION DXYZ(3,*),DB(0:3,45),XK(3),XL(3),XX(3)
      DIMENSION PA(LM4),PB(LM4),Q(LMQ)
      DIMENSION A2(LMA2),A(NPS,NPS),B(LMQ,NPS)
      DIMENSION QS(LMNPS)
C *** READ COSMO MATRICES FROM FILE (IF NEEDED).
C     CALL CODISK (A,B,LMA2,LMQ*NPS,0)
C *** INITIALIZATION.
C     MPRINT = IN2(41)
      MODCSM = IN2(235)
      LM6    = LMQ-NUMAT
      DO 20 I=1,45
      DO 10 K=1,3
      DB(K,I)= ZERO
   10 CONTINUE
   20 CONTINUE
      DB(0,1)= ONE
C *** CONVERSION FACTOR (SEE COMMENTS IN DMAT).
      FACT   =-EV*A0*FEPSI*EVCAL
COLD  FACT   =-TWO*13.60580D0*0.52920D0*FEPSI*EVCAL
C *** ONE-CENTER PAIR POPULATIONS AND CORE CHARGES.
      CALL PQDEN (PA,PB,Q,LM4,LMQ)
C *** CALCULATION OF THE SCREENING CHARGES QS(K).
      DO 40 I=1,NPS
      QS(I)  = ZERO
   40 CONTINUE
      DO 90 I=1,NPS
      POSI   = ZERO
      DO 50 J=1,LMQ
      POSI   = POSI+Q(J)*B(J,I)
   50 CONTINUE
      IF(MODCSM.GT.0) THEN
         DO 60 K=1,I
         QS(K)  = QS(K)+POSI*A2(K+JPC(I))
   60    CONTINUE
         DO 70 K=I+1,NPS
         QS(K)  = QS(K)+POSI*A2(I+JPC(K))
   70    CONTINUE
      ELSE
         DO 80 K=1,NPS
         QS(K)  = QS(K)+POSI*A(K,I)
   80    CONTINUE
      ENDIF
   90 CONTINUE
C     IF(MPRINT.GT.5) THEN
C        NB6 = NBF(6)
C        WRITE(NB6,500) NPS
C        WRITE(NB6,510) (QS(K),K=1,NPS)
C        WRITE(NB6,520) NUMAT
C        WRITE(NB6,530) ((DXYZ(I,J),I=1,3),J=1,NUMAT)
C     ENDIF
C     *
C *** CONTRIBUTION TO COSMO GRADIENT FROM THE INTERACTION BETWEEN
C     DIFFERENT SCREENING CHARGES.
      DO 130 K=1,NPS
      IAK    = IATSP(K)
      XK(1)  = COSURF(1,K)
      XK(2)  = COSURF(2,K)
      XK(3)  = COSURF(3,K)
      QSK    = QS(K)
      DO 120 L=1,K-1
      IAL    = IATSP(L)
      IF(IAL.EQ.IAK) GO TO 120
      DIST2  = ZERO
      DO 100 IX=1,3
      XXX     = COSURF(IX,L)-XK(IX)
      XL(IX)  = XXX
      DIST2   = DIST2+XXX*XXX
  100 CONTINUE
      FF      = QSK*QS(L)*FACT/SQRT(DIST2*DIST2*DIST2)
      DO 110 IX=1,3
      DXYZ(IX,IAK) = DXYZ(IX,IAK)-XL(IX)*FF
      DXYZ(IX,IAL) = DXYZ(IX,IAL)+XL(IX)*FF
  110 CONTINUE
  120 CONTINUE
  130 CONTINUE
C     IF(MPRINT.GT.5) THEN
C        WRITE(NB6,540) NUMAT
C        WRITE(NB6,530) ((DXYZ(I,J),I=1,3),J=1,NUMAT)
C     ENDIF
C     *
C *** CONTRIBUTION TO COSMO GRADIENT FROM THE INTERACTION BETWEEN
C     THE SCREENING CHARGES AND THE ELECTRONIC AND CORE CHARGES.
      DO 190 K=1,NPS
      IAK    = IATSP(K)
      XK(1)  = COSURF(1,K)
      XK(2)  = COSURF(2,K)
      XK(3)  = COSURF(3,K)
      QSK    = QS(K)
      IDEN   = 0
      DO 180 I=1,NUMAT
      IORBS  = NLAST(I)-NFIRST(I)+1
      IPAIRS = (IORBS*(IORBS+1))/2
      IF(I.EQ.IAK) GO TO 176
      NATI   = NAT(I)
      DIST2  = ZERO
      DO 140 IX=1,3
      XXX    = XK(IX)-COORD(IX,I)
      XX(IX) = XXX
      DIST2  = DIST2+XXX*XXX
  140 CONTINUE
      FF0    =-QSK*FACT/SQRT(DIST2*DIST2*DIST2)
      IF(IORBS.EQ.1) GO TO 150
C     SECTION FOR P ORBITALS.
      DDA    = DD(2,NATI)*A0
      QQA    = DD(3,NATI)*DD(3,NATI)*A0*A0
      QQB    = DD(4,NATI)*DD(4,NATI)*A0*A0*PT5
      DDB    = DD(5,NATI)*A0
      QQC    = DD(6,NATI)*DD(6,NATI)*A0*A0*PT5
      RM2    = ONE/DIST2
      RM4    = RM2**2
C     GRADIENT TERMS RELEVANT FOR X, Y, AND Z (FIRST INDEX 0).
      DB(0,2)  = DDA*THREE*XX(1)*RM2
      DB(0,4)  = DDA*THREE*XX(2)*RM2
      DB(0,7)  = DDA*THREE*XX(3)*RM2
      DB(0,3)  = ONE+QQA*(15.0D0*XX(1)**2*RM2-THREE)*RM2
      DB(0,6)  = ONE+QQA*(15.0D0*XX(2)**2*RM2-THREE)*RM2
      DB(0,10) = ONE+QQA*(15.0D0*XX(3)**2*RM2-THREE)*RM2
      DB(0,5)  = QQA*15.0D0*XX(1)*XX(2)*RM4
      DB(0,8)  = QQA*15.0D0*XX(1)*XX(3)*RM4
      DB(0,9)  = QQA*15.0D0*XX(3)*XX(2)*RM4
C     GRADIENT TERMS SPECIFIC TO X, Y, OR Z (FIRST INDEX 1,2,3).
      DB(1,2)  = DDA
      DB(2,4)  = DB(1,2)
      DB(3,7)  = DB(1,2)
      DB(1,3)  = 6.0D0*QQA*XX(1)*RM2
      DB(2,6)  = 6.0D0*QQA*XX(2)*RM2
      DB(3,10) = 6.0D0*QQA*XX(3)*RM2
      DB(1,5)  = PT5*DB(2,6)
      DB(2,5)  = PT5*DB(1,3)
      DB(1,8)  = PT5*DB(3,10)
      DB(3,8)  = PT5*DB(1,3)
      DB(2,9)  = PT5*DB(3,10)
      DB(3,9)  = PT5*DB(2,6)
      IF(IORBS.EQ.4) GO TO 150
C     SECTION FOR D ORBITALS.
C     GRADIENT TERMS RELEVANT FOR X, Y, AND Z (FIRST INDEX 0).
      DB(0,11) = 7.5D0*QQB*(XX(1)-XX(2))*(XX(1)+XX(2))*RM4
      DB(0,16) = 15.D0*QQB*XX(1)*XX(3)*RM4
      DB(0,22) = SQ3*QQB*RM2+2.5D0*SQ3*QQB*(2*XX(3)*XX(3)-
     1           XX(1)*XX(1)-XX(2)*XX(2))*RM4
      DB(0,29) = 15.0D0*QQB*XX(2)*XX(3)*RM4
      DB(0,37) = 15.0D0*QQB*XX(1)*XX(2)*RM4
      DB(0,12) = THREE*DDB*XX(1)*RM2
      DB(0,13) =-THREE*DDB*XX(2)*RM2
      DB(0,17) = THREE*DDB*XX(3)*RM2
      DB(0,19) = DB(0,12)
      DB(0,23) =-DB(0,12)/SQ3
      DB(0,24) = DB(0,13)/SQ3
      DB(0,25) = TWO*DB(0,17)/SQ3
      DB(0,31) = DB(0,17)
      DB(0,32) =-DB(0,13)
      DB(0,38) =-DB(0,13)
      DB(0,39) = DB(0,12)
      DB(0,15) = ONE+QQC*(THREE-15.0D0*XX(3)*XX(3)*RM2)*RM2
      DB(0,21) = ONE+QQC*(THREE-15.0D0*XX(2)*XX(2)*RM2)*RM2
      DB(0,28) =-ONE+QQC*(THREE-15.0D0*XX(3)*XX(3)*RM2)*RM2
      DB(0,36) = ONE+QQC*(THREE-15.0D0*XX(1)*XX(1)*RM2)*RM2
      DB(0,45) = DB(0,15)
      DB(0,20) = 15.0D0*QQC*XX(1)*XX(3)*RM4
      DB(0,26) =- 5.0D0*SQ3*QQC*(XX(1)-XX(2))*(XX(1)+XX(2))*RM4
      DB(0,27) =  5.0D0*SQ3*QQC*XX(1)*XX(3)*RM4
      DB(0,33) =-15.0D0*QQC*XX(2)*XX(3)*RM4
      DB(0,34) = 15.0D0*QQC*XX(1)*XX(2)*RM4
      DB(0,35) =  5.0D0*SQ3*XX(2)*XX(3)*RM4
      DB(0,42) =-DB(0,33)
      DB(0,43) =-10.0D0*SQ3*QQC*XX(1)*XX(2)*RM4
      DB(0,44) = DB(0,20)
C     GRADIENT TERMS SPECIFIC TO X, Y, OR Z (FIRST INDEX 1,2,3).
      DB(1,11) = THREE*QQB*XX(1)*RM2
      DB(2,11) =-THREE*QQB*XX(2)*RM2
      DB(1,16) = THREE*QQB*XX(3)*RM2
      DB(3,16) = THREE*QQB*XX(1)*RM2
      DB(3,22) = THREE*SQ3*QQB*XX(3)*RM2
      DB(2,29) = THREE*QQB*XX(3)*RM2
      DB(3,29) = THREE*QQB*XX(2)*RM2
      DB(1,37) = THREE*QQB*XX(2)*RM2
      DB(2,37) = THREE*QQB*XX(1)*RM2
      DB(1,12) = DDB
      DB(2,13) =-DB(1,12)
      DB(3,17) = DB(1,12)
      DB(1,19) = DB(1,12)
      DB(1,23) =-DB(1,12)/SQ3
      DB(2,24) = DB(1,23)
      DB(3,25) = TWO*DDB/SQ3
      DB(3,31) = DB(1,12)
      DB(2,32) = DB(1,12)
      DB(2,38) = DB(1,12)
      DB(1,39) = DB(1,12)
      DB(3,15) =-6.0D0*QQC*XX(3)*RM2
      DB(2,21) =-6.0D0*QQC*XX(2)*RM2
      DB(3,28) = 6.0D0*QQC*XX(3)*RM2
      DB(1,36) =-6.0D0*QQC*XX(1)*RM2
      DB(3,45) = DB(3,15)
      DB(1,20) = THREE*QQC*XX(3)*RM2
      DB(3,20) = THREE*QQC*XX(1)*RM2
      DB(1,26) =-TWO*SQ3*QQC*XX(1)*RM2
      DB(2,26) = TWO*SQ3*QQC*XX(2)*RM2
      DB(1,27) = SQ3*QQC*XX(3)*RM2
      DB(3,27) = SQ3*QQC*XX(1)*RM2
      DB(2,33) =-THREE*QQC*XX(3)*RM2
      DB(3,33) =-THREE*QQC*XX(2)*RM2
      DB(1,34) = THREE*QQC*XX(2)*RM2
      DB(2,34) = THREE*QQC*XX(1)*RM2
      DB(2,35) = SQ3*QQC*XX(3)*RM2
      DB(3,35) = SQ3*QQC*XX(2)*RM2
      DB(2,42) = THREE*QQC*XX(3)*RM2
      DB(3,42) = THREE*QQC*XX(2)*RM2
      DB(1,43) =-TWO*SQ3*QQC*XX(2)*RM2
      DB(2,43) =-TWO*SQ3*QQC*XX(1)*RM2
      DB(1,44) = THREE*QQC*XX(3)*RM2
      DB(3,44) = THREE*QQC*XX(1)*RM2
C     ASSEMBLE GRADIENT CONTRIBUTIONS FOR THE INTERACTION
C     BETWEEN THE SCREENING CHARGES AND THE ELECTRONIC CHARGES.
  150 CONTINUE
      DO 170 J=1,IPAIRS
      FF =  FF0*Q(IDEN+J)
      DO 160 IX=1,3
      DX = (XX(IX)*DB(0,J)-DB(IX,J))*FF
      DXYZ(IX,IAK) = DXYZ(IX,IAK)+DX
      DXYZ(IX,I)   = DXYZ(IX,I)  -DX
  160 CONTINUE
  170 CONTINUE
C     ASSEMBLE GRADIENT CONTRIBUTIONS FOR THE INTERACTION
C     BETWEEN THE SCREENING CHARGES AND THE CORE CHARGES.
      FF = FF0*Q(LM6+I)
      DO 175 IX=1,3
      DX = XX(IX)*FF
      DXYZ(IX,IAK) = DXYZ(IX,IAK)+DX
      DXYZ(IX,I)   = DXYZ(IX,I)  -DX
  175 CONTINUE
  176 IDEN = IDEN+IPAIRS
  180 CONTINUE
  190 CONTINUE
C     IF(MPRINT.GT.5) THEN
C        WRITE(NB6,550) NUMAT
C        WRITE(NB6,530) ((DXYZ(I,J),I=1,3),J=1,NUMAT)
C     ENDIF
      RETURN
C 500 FORMAT(/1X,'DEBUG PRINT FROM DGRAD: SCREENING CHARGES. ',I10)
C 510 FORMAT( 1X,10F10.5)
C 520 FORMAT(/1X,'DEBUG PRINT FROM DGRAD: GRADIENTS - START. ',I10)
C 530 FORMAT( 1X,3F10.5)
C 540 FORMAT(/1X,'DEBUG PRINT FROM DGRAD: GRADIENTS - COSMO1.',I10)
C 550 FORMAT(/1X,'DEBUG PRINT FROM DGRAD: GRADIENTS - COSMO2.',I10)
      END
