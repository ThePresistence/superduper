      SUBROUTINE ITFRG (CA,DA,EA,FA,H,PA,Q,W,LM2,LM4,LM6,LM9,NITER)
C     *
C     RHF-SCF ITERATIONS FOR FRAGMENTS.
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     CA(LM2,*) RHF MO EIGENVECTORS (O).
C     DA(LM4)   RHF DIFFERENCE DENSITY MATRIX (S).
C     EA(LM2)   RHF MO EIGENVALUES (O).
C     FA(LM4)   RHF FOCK MATRIX (O).
C     H(LM4)    CORE HAMILTONIAN MATRIX (I).
C     PA(LM4)   RHF DENSITY MATRIX (O).
C     Q(LM6)    SCRATCH ARRAY USED FOR VARIOUS PURPOSES (S).
C     W(LM9)    TWO-ELECTRON INTEGRALS (I).
C     NITER     NUMBER OF SCF ITERATIONS DONE (O).
C     *
      USE LIMIT, ONLY: LMX
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     CHARACTER*80 KTITLE,KOMENT
      COMMON
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./ENERGT/ EE,ENUCLR,EAT,ATHEAT
C    ./FLAG1 / KTITLE,KOMENT
     ./HALFE / IOD,JOD
     ./INOPT2/ IN2(300)
     ./NBFILE/ NBF(20)
     ./ORBITS/ NUMB,NORBS,NMOS,NALPHA,NBETA
     ./SCRT  / SCFCRT,PLCRT,SCFCRS(2)
C     ARRAYS IN THE ARGUMENT LIST.
      DIMENSION CA(LM2,LM2),EA(LM2)
      DIMENSION DA(LM4),FA(LM4),H(LM4)
      DIMENSION PA(LM4),Q(LM2*8),W(LM9)
C     AUTOMATIC SCRATCH ARRAYS.
      DIMENSION IWORK(6*LMX)
C *** FILE NUMBERS.
      NB1    = NBF(1)
      NB6    = NBF(6)
C *** INPUT OPTIONS.
      IMODE  = IN2(211)
      INOUT  = 0
      JPRINT = IN2(42)
      LINFRG = IN2(58)
      KTRIAL = IN2(67)
      KITSCF = IN2(71)
      IDIAG  = IN2(74)
C     IDIAG  = 2
C     NSTART = -1
      IF(KTRIAL.GE.31 .AND. KTRIAL.LE.39) THEN
         KITSCF = KTRIAL-30
      ELSE IF(LINFRG.GT.0) THEN
         KITSCF = LINFRG
      ENDIF
C *** INITIALIZATION.
      INFO   = 0
      KEXT   = 0
      NITER  = 0
      EEP    = ZERO
      PL     = ZERO
C *** DEFINE INITIAL DENSITY MATRIX.
      MPDIAG = 0
      CALL GUESSP (CA,CA,PA,PA,LM2,LM2,LM4,MPDIAG)
      IN2(67)= KTRIAL
C *** PRINT HEADER BEFORE SCF ITERATIONS.
      IF(JPRINT.GE.5) THEN
         WRITE(NB6,500)
      ENDIF
C     *
C *** START OF SCF LOOP.
C     *
C *** CONSTRUCT THE FOCK MATRIX.
   20 CONTINUE
      DO 30 I=1,LM4
      FA(I)  = H(I)
   30 CONTINUE
      CALL ESCF  (EHA,NORBS,PA,FA,LM4)
      IF(IMODE.GT.0) THEN
         CALL FOCK2 (FA,PA,PA,Q,W,LM4,LM6,LM9)
         CALL FOCK1 (FA,PA,PA,LM4)
      ELSE
         CALL FOCKX (FA,PA,PA,Q,W,LM4,LM6)
      ENDIF
C *** CALCULATE THE ELECTRONIC ENERGY.
      CALL ESCF (EFA,NORBS,PA,FA,LM4)
      EF     = EFA+EFA
      EH     = EHA+EHA
      EE     = EF+EH
      EERROR = EE-EEP
      EEP    = EE
C *** PRINT SCF INFORMATION.
      IF(NITER.EQ.0 .AND. JPRINT.GE.5) THEN
         WRITE(NB6,510) NITER,EH
         WRITE(NB6,510) NITER,EE,EF
      ENDIF
      IF(JPRINT.GE.5) THEN
         WRITE(NB6,510) NITER,EE,EERROR,PL,'NO  ','NO  '
      ENDIF
C *** TEST FOR SCF CONVERGENCE.
      IF(NITER.EQ.0) GO TO 50
      IF(KEXT.EQ.-1) GO TO 100
      DERROR = ABS(EERROR)
      IF(DERROR.LT.SCFCRT .AND. PL.LT.PLCRT .AND. KEXT.NE.1) THEN
         KEXT   =-1
      ELSE
         IF(NITER.GE.KITSCF) GO TO 60
      ENDIF
C *** DIAGONALISE THE FOCK MATRIX.
   50 CONTINUE
      MODE = 0
      CALL DIAGON (FA,CA,EA,Q,IWORK,LM2,LM4,NORBS,NUMB,IDIAG,
     1             MODE,INFO)
      NITER  = NITER+1
C *** COMPUTE THE DENSITY MATRIX.
      CALL BORDER (CA,DA,PA,FA,PL,LM2,LM2,LM4,NORBS,NUMB,IOD,JOD,
     1             NITER,KEXT,INOUT,NB1,1)
      GO TO 20
C *** NO SCF CONVERGENCE.
   60 CONTINUE
      ICALL  = -1
C     *
C *** END OF SCF LOOP.
C     *
C *** SCF CONVERGENCE HAS BEEN ACHIEVED.
  100 CONTINUE
      RETURN
  500 FORMAT(///5X,'INFORMATION ON SCF ITERATIONS.',
     1       // 5X,'NITER',12X,'ENERGY',14X,'DELTAE',14X,'DELTAP',
     2         11X,'EXTRAP',7X,'FAST'/)
  510 FORMAT(   5X,I3,4X,3F20.10,9X,A4,8X,A4)
      END
