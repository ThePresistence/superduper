      SUBROUTINE DYNFRG (LM5X,LM2,LM4,LM6,LM9,
     1                   LS1,LS2,LS3,LS5,LS6,LS7,LS8,LS9,
     2                   LG1,LG2,LG3,LG4,JPRINT)
C     *
C     DYNAMIC MEMORY ALLOCATION FOR FRAGMENT RHF-SCF CALCULATION.
C     *
C     NOTATION.
C     LM5X   = LAST ADDRESS OF BLANK COMMON AREA THAT IS ACTUALLY USED
C              BY THE ARRAYS DEFINED PRESENTLY (DETERMINED HERE).
C     LM*    = DIMENSIONS OF SCF ARRAYS NORMALLY HELD IN /LIMITS/
C     LS*    = ADDRESSES FOR SCF ARRAYS NORMALLY HELD IN /LMSCF/
C     LG*    = ADDRESSES FOR OM2 ARRAYS NORMALLY HELD IN /LMGRAD/
C     JPRINT = PRINTING OPTION (I).
C     *
C     CONVENTIONS: IMODE=0, INOUT=0, IUHF=-1, IFAST=2.
C     *
      USE LIMIT, ONLY: LM1
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./INOPT2/ IN2(300)
     ./NBFILE/ NBF(20)
     ./ORBITS/ NUMB,NORBS,NMOS,NALPHA,NBETA
C     *
C *** FILE NUMBERS.
      NB6    = NBF(6)
C *** INPUT OPTIONS.
      IOP    = IN2(2)
      IDIAG  = IN2(74)
C     IDIAG  = 2
C     *
C *** DEFINE SIZE OF MATRICES USED IN SCF CALCULATION.
      LM2    = NORBS
      LM3    = LM2
      LM4    = (NORBS*(NORBS+1))/2
      L22    = LM2*NORBS
C     *
C *** DEFINE NUMBER OF UNIQUE ONE-CENTER AO PAIRS.
      LM6    = 0
      DO 10 I=1,NUMAT
      ITEMP  = NLAST(I)-NFIRST(I)+1
      LM6    = LM6+(ITEMP*(ITEMP+1))/2
   10 CONTINUE
      IF(IOP.GT.1) LM6=NUMAT
C     *
C *** DEFINE NUMBER OF TWO-CENTER TWO-ELECTRON INTEGRALS.
      INTSUM = LM6*LM6
      IF(IOP.GT.0) INTSUM=(NUMAT*(NUMAT+1))/2
C *** DEFINE BUFFER FOR TWO-ELECTRON INTEGRALS.
C     NOTE CONVENTION THAT IMODE=0 FOR IOP.LE.0.
      LM9    = INTSUM
C     *
C *** COMPUTE LENGTH OF GENERAL BUFFER FOR SCF CALCULATION.
C     THE SCF ROUTINES EMPLOY THE BUFFER FOR INTERMEDIATE ARRAYS IN:
C     - STANDARD DIAGONALIZATION (EVVRSP,TDIAG,TQL2,TRED2,DSPEV,DSPEVX,
C       DSYEV,DSYEVX: UP TO 8*LM2 WORDS),
C     - DIVIDE-AND-CONQUER DIAGONALIZATION (DSPEVD,DSYEVD: UP TO
C       3*LM2*LM2 + 2*LM2*LG(LM2) + 5*LM2 + 1 WORDS).
C     - FOCK MATRIX GENERATION (FOCK,FOCKX,FOCK2: LM6 WORDS),
C     THE CODE DETERMINES THE MAXIMUM LENGTH ACTUALLY REQUIRED.
      CALL DYNDIA (IDIAG,NORBS,LWORK,LIWORK)
      LD     = MAX(LWORK,LM6)
C *** COMPUTE LENGTH OF BUFFER FOR IN-CORE SCF CALCULATION.
C     MAXIMUM MEMORY REQUIREMENTS FOR RHF.
      LSA    = 2*L22+LM2+LD+3*LM4
C     *
C *** DEFINE MEMORY FOR SCF CALCULATION.
      LM5X   = LSA+LM9
C     NOTE THAT THE DENSITY MATRIX P(LM4) MAY BE PUT INTO SQUARE FORM
C     AFTER THE FRAGMENT RHF-SCF CALCULATION (SEE SUBROUTINE FRAGMT).
C     ADDITIONAL MEMORY MAY BE NEEDED FOR THIS OPERATION.
      LM5X   = MAX(LM5X,LM5X+L22-LM4-LD)
C     *
C *** ASSIGN ADDRESSES FOR SCF CALCULATION.
C     THE SCF ARRAYS START AT THE FOLLOWING ADDRESSES.
C     RHF: C  LS1, E  LS2, Q LS3, D  LS5, F  LS6, H LS7, P  LS8, W LS9.
C     THE ORDER OF THE ARRAYS IN MEMORY IS INDICATED BY COMMENTS BELOW.
C     RHF: C(L22),E(LM2),W(LM9),F(L22),H(LM4),D(LM4),P(LM4),Q(LD).
      L23    = LM2*LM3
      LS1    = 1
      LS2    = LS1+L23
      LS9    = LS2+LM2
      LS6    = LS9+LM9
      LS7    = LS6+L22
      LS5    = LS7+LM4
      LS8    = LS5+LM4
      LS3    = LS8+LM4
C
C *** THE DYNAMIC MEMORY ALLOCATION FOR ORTHOGONALIZATION CORRECTIONS
C     IN OM2 AND OM3 EMPLOYS THE FOLLOWING ARRAYS:
C     ARRAY: S(LM4),B(LM4),COR(),HG(LM4),SG(LM4),BG(LM4),CORG(),HREF().
C     START: LG1....LG2....LG3...LG4.....LG5.....LG6.....LG7....LG8
C     THE FIRST FOUR ARRAYS ARE USED FOR THE ENERGY   EVALUATION.
C     THE LAST  FIVE ARRAYS ARE USED FOR THE GRADIENT EVALUATION.
C     THE LAST  FIVE ARRAYS ARE NOT NEEDED PRESENTLY.
C     THE ARRAYS START AT ADDRESS LM5X+1.
C     *
      IF((IOP.EQ.-6 .OR. IOP.EQ.-8 .OR. IOP.EQ.-22 .OR. IOP.EQ.-23)
     1   .AND. NUMAT.GT.2) THEN
         LMC    = LM2*NUMAT
         LG1    = LM5X+1
         LG2    = LG1+LM4
         LG3    = LG2+LM4
         LG4    = LG3+LMC
         LM5X   = LM5X+3*LM4+LMC
      ELSE
         LG1    = 1
         LG2    = 1
         LG3    = 1
         LG4    = 1
      ENDIF
C     *
C *** PRINTING SECTION.
      IF(JPRINT.LT.5) RETURN
C     DETAILED MESSAGES ON MEMORY USAGE.
      WRITE(NB6,500)
      WRITE(NB6,560) LM2,LM3,LM4,LM6
      WRITE(NB6,570) LM9
C     MEMORY ALLOCATION.
      WRITE(NB6,610) LS1,LS1+L23-1,L23,LS2,LS2+LM2-1,LM2,
     1               LS9,LS9+LM9-1,LM9,
     2               LS6,LS6+L22-1,L22,LS7,LS7+LM4-1,LM4,
     3               LS5,LS5+LM4-1,LM4,LS8,LS8+LM4-1,LM4,
     4               LS3,LS3+LD -1,LD ,LS8,LS8+L22-1,L22
      IF((IOP.EQ.-6 .OR. IOP.EQ.-8 .OR. IOP.EQ.-22 .OR. IOP.EQ.-23)
     1   .AND. NUMAT.GT.2) THEN
         WRITE(NB6,620) LG1,LG1+LM4-1,LM4,LG2,LG2+LM4-1,LM4,
     1                  LG3,LG3+LMC-1,LMC,LG4,LG4+LM4-1,LM4
      ENDIF
      RETURN
  500 FORMAT(///1X,'MEMORY ASSIGNMENT FOR ALLOCATABLE ARRAYS   ',
     1       /  1X,'USED DURING FRAGMENT RHF-SCF CALCULATIONS  ')
  560 FORMAT(///1X,'NUMBER OF BASIS ORBITALS                   ',I10,
     1       /  1X,'NUMBER OF EIGENVECTORS COMPUTED            ',I10,
     2       /  1X,'DIMENSION OF LOWER TRIANGLE MATRIX IN SCF  ',I10,
     3       /  1X,'NUMBER OF ONE-CENTER AO PAIRS              ',I10)
  570 FORMAT(   1X,'NUMBER OF TWO-ELECTRON INTEGRALS           ',I10)
  610 FORMAT(///1X,'MEMORY ALLOCATION FOR FRAGMENT RHF-SCF CALCULATION',
     1       // 1X,'    START    FINAL   LENGTH    CONTENTS',
     2       // 1X,3I9,4X,'EIGENVECTORS',
     3       /  1X,3I9,4X,'EIGENVALUES',
     4       /  1X,3I9,4X,'TWO-ELECTRON INTEGRALS',
     5       /  1X,3I9,4X,'FOCK MATRIX',
     6       /  1X,3I9,4X,'CORE HAMILTONIAN MATRIX',
     7       /  1X,3I9,4X,'DIFFERENCE DENSITY MATRIX',
     8       /  1X,3I9,4X,'DENSITY MATRIX',
     9       /  1X,3I9,4X,'DIAGONALIZATION BUFFERS',
     A       /  1X,3I9,4X,'DENSITY MATRIX IN SQUARE FORM')
  620 FORMAT(///1X,'MEMORY ALLOCATION FOR ORTHOGONALIZATION (OM2)',
     1       // 1X,'    START    FINAL   LENGTH    CONTENTS',
     2       // 1X,3I9,4X,'OVERLAP MATRIX, REFERENCE',
     3       /  1X,3I9,4X,'RESONANCE MATRIX, REFERENCE',
     4       /  1X,3I9,4X,'LOCAL CORE MATRIX, REFERENCE',
     5       /  1X,3I9,4X,'ORTHOGONALIZATION CORRECTIONS')
      END
