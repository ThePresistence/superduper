      SUBROUTINE FMTRXA (A,APT,LMA,LMAPT,ARRAY,LM5,ICALL,SCFCAL)
C     *
C     ANALYTICAL EVALUATION OF FORCE CONSTANT MATRIX.
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     A(LMA)    CARTESIAN FORCE CONSTANT MATRIX IN ATOMIC UNITS (O).
C     APT()     CARTESIAN DIPOLE DERIVATIVES IN ATOMIC UNITS (O).
C     LMAPT     DIMENSION OF APT (I), LMAPT=9*NUMAT.
C     ARRAY     AVAILABLE BUFFER (S).
C     LM5       DIMENSION OF ARRAY.
C     ICALL     CONTROL AND ERROR FLAG (I,O).
C     SCFCAL    EXTERNAL ROUTINE FOR ENERGY EVALUATION (I).
C     *
      USE LIMIT, ONLY: LM1, LMV, LM1M
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      EXTERNAL SCFCAL
      COMMON
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./CGRAD / CG(LMV+3*LM1M)
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./ERG   / ENERGY,G(LMV),GNORM,CNORM
     ./ERG1  / CNORM1
     ./ERGREF/ H298,H0,HF298,HF0,HAT298,HAT0,D00,EVIB,SCFENR
     ./FORCE3/ TMA,TMF
     ./GUGA2 / LCI1,LCI2
     ./INOPT2/ IN2(300)
      COMMON
     ./LIMITS/ LM2,LM3,LM4,LM6,LM7,LM8,LM9
     ./LMSCF / LS1,LS2,LS3,LS4,LS5,LS6,LS7,LS8,LS9
     ./LMUHF / LU1,LU2,LU3,LU4,LU5,LU6,LU7,LU8
     ./NBFILE/ NBF(20)
     ./PSDOPT/ RPSOPT(10),IPSOPT(28)
      DIMENSION A(LMA),APT(LMAPT),ARRAY(LM5)
      DIMENSION CG1(LMV)
C *** CONVERSION FACTORS: SEE COMMENTS IN SUBROUTINE FMTRX.
C     F0  -  GRADIENT     FROM ATOMIC UNITS TO KCAL/(MOL*ANGSTROM)
      DATA F0/1185.806768D0/
C     *
C *** FILE NUMBERS.
      NB6    = NBF(6)
C *** INPUT OPTIONS.
      JOP    = IN2(3)
      KPRINT = IN2(39)
      LCONVG = IN2(49)
      IPSPRT = IN2(90)
      IF(JOP.LT.2 .OR. JOP.GT.6) RETURN
C *** INITIALIZATION.
      I3N    = 3*NUMAT
      DO 10 I=1,LMA
      A(I)   = ZERO
   10 CONTINUE
      DO 20 I=1,LMAPT
      APT(I) = ZERO
   20 CONTINUE
      TMF    = ZERO
      RF0    = ONE/F0
C     *
C *** DO THE FIRST CALCULATION AT THE REFERENCE GEOMETRY.
      ICALL  = 11
      IF(JOP.GT.2) ICALL=31
      CALL CPUSEC(T1)
      CALL SCF (ARRAY,LM5,ICALL,SCFCAL)
      IF(ICALL.EQ.-1) RETURN
      CALL DENSAV (0,ARRAY,LM5,0)
      CALL CPUSEC(T2)
      TMA    = T2-T1
      SCFENR = ENERGY
      IF(KPRINT.GE.0) WRITE(NB6,500) ENERGY
C     PRINTING SECTION.
      IF(KPRINT.GE.0) THEN
         WRITE(NB6,510)
         DO 60 I=1,NUMAT
         I3     = 3*(I-1)
         DO 50 J=1,3
         CG1(J) = CG(I3+J)*RF0
   50    CONTINUE
         WRITE(NB6,520) I,NAT(I),(CG1(J),J=1,3)
   60    CONTINUE
      ENDIF
C     RMS GRADIENT.
      SUM    = ZERO
      DO 70 I=1,I3N
      SUM    = SUM+CG(I)*CG(I)
   70 CONTINUE
      CNORM  = SQRT(SUM)
      CNORM1 = CNORM
      CNORMA = CNORM*RF0
      RMS    = SQRT(SUM/I3N)
      RMSA   = RMS*RF0
      IF(KPRINT.GE.-1) WRITE(NB6,530) CNORM,CNORMA,RMS,RMSA
      IF(KPRINT.GE.0 ) WRITE(NB6,540) TMA
C     CHECK FOR MAGNITUDE OF GRADIENT NORM.
C     WHEN USING OPTIONS JOP=5 OR JOP=6, THE FORCE CONSTANTS WILL ONLY
C     BE CALCULATED IF THE CARTESIAN GRADIENT NORM IS BELOW CNORMX,
C     IN KCAL/(MOL*ANGSTROM), OTHERWISE THE GEOMETRY IS REOPTIMIZED.
      CNORMX = DBLE(LCONVG)
      IF(LCONVG.GT.0 .AND. CNORM.GT.CNORMX) THEN
         IF(KPRINT.LT.-1) WRITE(NB6,530) CNORM,CNORMA,RMS,RMSA
         WRITE(NB6,531) CNORMX
         IF(JOP.LT.5) THEN
            WRITE(NB6,532)
         ELSE IF(JOP.EQ.5 .OR. JOP.EQ.6) THEN
            WRITE(NB6,533)
            ICALL = -7
            RETURN
         ENDIF
      ENDIF
C *** CALCULATE ANALYTICAL DERIVATIVES.
C     PSDRV CONVENTIONS FOR IMOD:
C       2: SECOND ENERGY DERIVATIVES ONLY.
C     102: SECOND ENERGY DERIVATIVES AND FIRST DIPOLE DERIVATIVES.
C     202: SECOND ENERGY DERIVATIVES, ALSO FOR ANY EXTERNAL CHARGES.
C     302: SECOND ENERGY DERIVATIVES AND FIRST DIPOLE DERIVATIVES,
C          ALSO FOR ANY EXTERNAL POINT CHARGES THAT MAY BE PRESENT.
C     THE PRESENT MEMORY MANAGEMENT SUPPORTS ONLY IMOD=2,102.
C     THE OPTIONS IMOD=202,302 REQUIRE LARGER ARRAYS AND DIFFERENT
C     DEFINITIONS FOR KEY VARIABLES (E.G. I3N).
      IMOD = 102
      CALL CPUSEC(T3)
      IF(IPSPRT.EQ.0) IPSOPT(5)=KPRINT
      CALL PSDRV(IMOD,CG1,A,APT,I3N,ARRAY,LM5,ARRAY(LS8),ARRAY(LU8),
     1           ARRAY(LS1),ARRAY(LU1),LM2,ARRAY(LS2),ARRAY(LU2),
     2           ARRAY(LCI1),ARRAY(LCI2))
      IPSOPT(5) = IPSPRT
      CALL CPUSEC(T4)
      TMF    = T4-T3
      IF(KPRINT.GE.0) WRITE(NB6,590) TMF
C     *
C *** PRINT ORIGINAL FORCE CONSTANT MATRIX.
      IF(KPRINT.GT.0) THEN
         WRITE(NB6,610)
         CALL MATPRT (A,I3N,I3N,I3N,I3N)
      ENDIF
C *** SYMMETRIZE FORCE CONSTANT MATRIX.
      DLMAX  = ZERO
      DO 291 I=1,I3N
      DO 290 J=1,I
      IJ     = I3N*(J-1)+I
      JI     = I3N*(I-1)+J
      DU     = (A(IJ)+A(JI))*PT5
      DL     = (A(IJ)-A(JI))*PT5
      A(IJ)  = DU
      A(JI)  = DU
      ABSDL  = ABS(DL)
      IF(ABSDL.GT.DLMAX) DLMAX=ABSDL
  290 CONTINUE
  291 CONTINUE
C *** PRINT SYMMETRIZED FORCE CONSTANT MATRIX.
      IF(KPRINT.GT.0) THEN
         WRITE(NB6,620)
         CALL MATPRT (A,I3N,I3N,I3N,I3N)
      ENDIF
      IF(KPRINT.GE.0) WRITE(NB6,630) DLMAX
C *** SAVE FINAL RESULTS ON FILE.
      CALL FORSAV (A,APT,CG,CG1,LMA,LMAPT,I3N,I3N,0,0)
      RETURN
  500 FORMAT(// 5X,'HEAT OF FORMATION',F14.6,' KCAL/MOL')
  510 FORMAT(// 5X,'GRADIENTS (ATOMIC UNITS)',
     1       // 5X,'ATOM NO.',9X,'ATOMIC NO.',9X,'X-COORDINATE',
     2          8X,'Y-COORDINATE',8X,'Z-COORDINATE'//)
  520 FORMAT(   8X,I2,16X,I2,5X,3F20.8)
  530 FORMAT(///5X,'GRADIENT NORM =',F12.5,' KCAL/(MOL*ANGSTROM)  =',
     1                               F12.8,' ATOMIC UNITS',
     2       /  5X,'RMS GRADIENT  =',F12.5,' KCAL/(MOL*ANGSTROM)  =',
     3                               F12.8,' ATOMIC UNITS')
  531 FORMAT(///5X,'THE GRADIENT NORM IS LARGER THAN REQUESTED.',
     1       /  5X,'TARGET NORM   =',F12.5,' KCAL/(MOL*ANGSTROM),',
     2          1X,'SEE INPUT OPTION LCONVG.')
  532 FORMAT(// 5X,'FORCE CONSTANTS ARE COMPUTED NEVERTHELESS.')
  533 FORMAT(/  5X,'THE GEOMETRY WILL BE REOPTIMIZED.')
  540 FORMAT(///5X,'TIME FOR INITIAL EVALUATION OF ENERGY AND',
     1          1X,'GRADIENT   ',F12.3,' SECONDS')
  590 FORMAT(///5X,'TIME FOR ANALYTICAL EVALUATION OF THE FORCE',
     1          1X,'CONSTANTS',F12.3,' SECONDS')
  610 FORMAT(///5X,'ORIGINAL FORCE CONSTANT MATRIX.'/)
  620 FORMAT(///5X,'FORCE CONSTANT MATRIX AFTER SYMMETRIZATION.'/)
  630 FORMAT(// 5X,'MAXIMUM DEVIATION DUE TO SYMMETRIZATION',F12.8/)
      END
