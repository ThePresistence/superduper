      SUBROUTINE DIAG (FAO,VECTOR,EIG,FMO,WS,LM2,N,NOCC)
C     *
C     FAST DIAGONALIZATION PROCEDURE.
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     FAO       FOCK MATRIX IN AO BASIS (I).
C     VECTOR    MO VECTORS (I,O).
C     EIG       MO ENERGIES (I).
C     FMO       PART OF FOCK MATRIX IN MO BASIS (O).
C     WS        SCRATCH ARRAY FOR INTERMEDIATE RESULTS (S).
C     LM2       LEADING DIMENSION OF ALL MATRICES (I).
C     N         NUMBER OF ATOMIC ORBITALS (I).
C     NOCC      NUMBER OF OCCUPIED MOLECULAR ORBITALS (I).
C     *
C     DIAG IS A PSEUDO-DIAGONALISATION PROCEDURE SINCE THE VECTORS
C     GENERATED BY IT ARE MORE NEARLY ABLE TO BLOCK-DIAGONALISE
C     THE FOCK MATRIX OVER MOLECULAR ORBITALS THAN THE STARTING
C     VECTORS. IT MUST BE CONSIDERED PSEUDO FOR SEVERAL REASONS:
C     (A) IT DOES NOT GENERATE EIGENVECTORS - THE SECULAR DETERMINANT
C         IS NOT DIAGONALISED, ONLY THE OCCUPIED-VIRTUAL INTERSECTION.
C     (B) MANY SMALL ELEMENTS IN THE SEC.DET. ARE IGNORED AS BEING TOO
C         SMALL COMPARED WITH THE LARGEST ELEMENT.
C     (C) WHEN ELEMENTS ARE ELIMINATED BY ROTATION, THE REST OF THE
C         SEC. DET. IS ASSUMED NOT TO CHANGE, I.E. ELEMENTS CREATED
C         ARE IGNORED.
C     (D) THE ROTATION REQUIRED TO ELIMINATE THOSE ELEMENTS CONSIDERED
C         SIGNIFICANT IS APPROXIMATED BY USING THE EIGENVALUES OF THE
C         EXACT DIAGONALISATION THROUGHOUT THE REST OF THE ITERATIVE
C         PROCEDURE.
C     *
C     IN AN ITERATIVE PROCEDURE ALL THE APPROXIMATIONS PRESENT IN
C     DIAG BECOME VALID AT SELF-CONSISTENCY, SELF-CONSISTENCY IS
C     NOT SLOWED DOWN BY USE OF THESE APPROXIMATIONS.
C     *
C     REFERENCE:
C     J.J.P.STEWART,P.CSASZAR AND P.PULAY, J.COMPUT.CHEM. 3,227(1982)
C     *
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION FAO(LM2,LM2),VECTOR(LM2,LM2),EIG(LM2)
      DIMENSION FMO(LM2,NOCC),WS(LM2,NOCC)
      DATA ZERO,PT25,PT5,ONE/0.0D0,0.25D0,0.5D0,1.0D0/
      DATA CUTOFF/0.04D0/
C     *
C     CONSTRUCT THE FOCK MO INTERACTION MATRIX BETWEEN OCCUPIED AND
C     VIRTUAL MOS IN FMO(LM2,NOCC).
C     *
C     THE ARRAYS FAO AND FMO MAY OCCUPY THE SAME CORE SPACE.
C     THE BUFFER WS MUST HOLD LM2*NOCC WORDS.
C     *
      LUMO   = NOCC+1
      NVIRT  = N-NOCC
      IF(NOCC.LT.NVIRT) THEN
C        CALL MXM(FAO,N,VECTOR,N,WS,NOCC)
C        CALL MXMA(VECTOR(1,LUMO),N,1,WS,1,N,FMO,1,NVIRT,NVIRT,N,NOCC)
         CALL ZZERO(N,NOCC,WS,LM2)
         CALL DGEMM('N','N',N,NOCC,N,ONE,FAO,LM2,VECTOR,LM2,ZERO,WS,LM2)
         CALL DGEMM('T','N',NVIRT,NOCC,N,ONE,VECTOR(1,LUMO),LM2,WS,LM2,
     1              ZERO,FMO,LM2)
      ELSE
C        CALL MXM(FAO,N,VECTOR(1,LUMO),N,WS,NVIRT)
C        CALL MXMA(WS,N,1,VECTOR,1,N,FMO,1,NVIRT,NVIRT,N,NOCC)
         CALL ZZERO(N,NVIRT,WS,LM2)
         CALL DGEMM('N','N',N,NVIRT,N,ONE,FAO,LM2,VECTOR(1,LUMO),LM2,
     1              ZERO,WS,LM2)
         CALL DGEMM('T','N',NVIRT,NOCC,N,ONE,WS,LM2,VECTOR,LM2,ZERO,FMO,
     1              LM2)
      ENDIF
      TINY   = ZERO
      DO 20 J=1,NOCC
      DO 10 I=1,NVIRT
      TINY   = MAX(ABS(FMO(I,J)),TINY)
   10 CONTINUE
   20 CONTINUE
      TINY   = CUTOFF*TINY
C     *
C     DO A CRUDE 2 BY 2 ROTATION TO ELIMINATE SIGNIFICANT ELEMENTS.
C     *
C     DO 50 I=LUMO,N
C     IVIRT  = I-NOCC
C     DO 40 J=1,NOCC
      IIMAX  = MAX(NOCC,NVIRT)
      JJMAX  = MIN(NOCC,NVIRT)
      DO 50 II=1,IIMAX
CFPP$ NOSYNC
CFPP$ CONCUR
C$OMP PARALLEL DO SCHEDULE(STATIC)
C$OMP.PRIVATE(A,ALPHA,B,BETA,C,D,E,I,IVIRT,J,M)
      DO 40 JJ=1,JJMAX
      IF(NOCC.LT.NVIRT) THEN
         I   = LUMO+MOD(II+JJ-2,IIMAX)
         J   = JJ
      ELSE
         I   = JJ+NOCC
         J   = 1+MOD(II+JJ-2,IIMAX)
      ENDIF
      IVIRT  = I-NOCC
      C      = FMO(IVIRT,J)
      D      = EIG(I)-EIG(J)
C     DO NOT PERFORM THE ROTATION IF THE OFFDIAGONAL FOCK MATRIX ELEMENT
C     IS ALREADY TINY, OR IF A NEGATIVE ARGUMENT OF SQRT MAY OCCUR.
C     NOTE: PT5*ABS(C).GE.D IMPLIES E.GE.2, HENCE (E-E*E*PT25).LE.0.
      IF(ABS(C).LT.TINY .OR. PT5*ABS(C).GE.D) GO TO 40
      E      = (C/D)**2
      ALPHA  = ONE-E*PT5
      BETA   = -SIGN(SQRT(E-E*E*PT25),C)
CFPP$ NOCONCUR
      DO 30 M=1,N
      A      = VECTOR(M,J)
      B      = VECTOR(M,I)
      VECTOR(M,J) = ALPHA*A+BETA*B
      VECTOR(M,I) = ALPHA*B-BETA*A
   30 CONTINUE
   40 CONTINUE
C$OMP END PARALLEL DO
   50 CONTINUE
      RETURN
      END
