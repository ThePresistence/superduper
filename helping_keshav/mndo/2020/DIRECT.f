C     ******************************************************************
      SUBROUTINE DIRSCF (CA,CB,DA,DB,EA,EB,FA,FB,H,PA,PB,Q,PPB,D2,
     1                   LM2,LM3,LM4,LM6,LMD2,LMQ,
     2                   NROOT,NOPRT,ICALL)
C     *
C     DIRECT SCF ITERATIONS.
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     CA(LM2,*) RHF OR UHF-ALPHA MO EIGENVECTORS (O).
C     CB(LM2,*) UHF-BETA MO EIGENVECTORS (O).
C     DA(LM2,*) RHF OR UHF-ALPHA DIFFERENCE DENSITY MATRIX (S).
C     DB(LM2,*) UHF-BETA DIFFERENCE DENSITY MATRIX (S).
C     EA(LM2)   RHF OR UHF-ALPHA MO EIGENVALUES (O).
C     EB(LM2)   UHF-BETA MO EIGENVALUES (O).
C     FA(LM2,*) RHF OR UHF-ALPHA FOCK MATRIX (O).
C     FB(LM2,*) UHF-BETA FOCK MATRIX (O).
C     H(LM42,*) CORE HAMILTONIAN MATRIX (I).
C     PA(LM2,*) RHF OR UHF-ALPHA DENSITY MATRIX (I).
C     PB(LM2,*) UHF-BETA DENSITY MATRIX (I).
C     Q(LM2*8)  SCRATCH ARRAY FOR DIAGONALIZATION (S).
C     Q(LM6)    SCRATCH ARRAY FOR ONE-CENTER DENSITY MATRIX PPA (S).
C     PPB(LM6)  SCRATCH ARRAY FOR ONE-CENTER DENSITY MATRIX PPB (S).
C     D2(LMD2)  DIELECTRIC MATRIX FOR COSMO SOLVATION TREATMENT (I).
C     LMQ       TOTAL NUMBER OF SOLUTE CHARGES IN COSMO (I).
C     NROOT     NUMBER OF MO EIGENVECTORS REQUIRED (I).
C     NOPRT     LOGICAL PRINTING FLAG: NO OUTPUT IF NOPRT IS TRUE (I).
C     ICALL     ERROR FLAG (I,O), NORMALLY NOT CHANGED.
C               =-1 ON OUTPUT: NO SCF CONVERGENCE.
C     *
      USE LIMIT, ONLY: LM1, LMX
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (ITS=20)
      PARAMETER (TRANS=0.10D0)
      LOGICAL DODIIS,FASTDG,FASTNO,HALFEL
      LOGICAL NOPRT,PRT,PRT2,UHF
      LOGICAL HEVAL,WEVAL
      CHARACTER*80 KTITLE,KOMENT
      CHARACTER*4 MEXT,MFAST
      CHARACTER*4 MXS(ITS),MFS(ITS)
      COMMON
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./ENERGT/ EE,ENUCLR,EAT,ATHEAT
     ./FLAG1 / KTITLE,KOMENT
     ./GUGA3 / EEREF
     ./HALFE / IOD,JOD
     ./INOPT2/ IN2(300)
     ./LMDIIS/ LDIIS1,LDIIS2,LDIIS3,LDIIS4,LDIIS5,LDIIS6,MXDIIS,MX1P,LMD
     ./NBFILE/ NBF(20)
     ./OCCFL / IMOCC,NOCCA,NOCCB,MSUB,MOSUMA,MOSUMB,MOCCA(8),MOCCB(8)
     ./ORBITS/ NUMB,NORBS,NMOS,NALPHA,NBETA
     ./SCFPRT/ EBIND(6),ITSAVE
     ./SCRT  / SCFCRT,PLCRT,SCFCRS(2)
     ./SKIPA / ISKPA
     ./STATCG/ NCGTOT(20)
     ./UHF   / UHF
C     ARRAYS IN THE ARGUMENT LIST.
      DIMENSION CA(LM2,LM3),CB(LM2,LM3),EA(LM3),EB(LM3)
      DIMENSION DA(LM2,LM3),DB(LM2,LM3),FA(LM2,LM3),FB(LM2,LM3)
      DIMENSION H(LM2,LM3)
      DIMENSION PA(LM2,LM3),PB(LM2,LM3),Q(LM2*8),PPB(LM6),D2(LMD2)
C     LOCAL SCRATCH ARRAYS.
      DIMENSION EDS(ITS),EES(ITS),ERS(ITS),PLS(ITS)
      DIMENSION IWORK(6*LMX)
C     ALLOCATABLE SCRATCH ARRAY FOR DIIS TREATMENT.
      DOUBLE PRECISION, DIMENSION (:), ALLOCATABLE :: AC
C *** FILE NUMBERS.
      NB6    = NBF(6)
C *** INPUT OPTIONS.
   10 CONTINUE
      IDIIS  = IN2(9)
      IDIIS1 = MAX(1,MOD(IDIIS,10))
      JDIIS  = IDIIS/10
C     ICOSMO = IN2(28)
      IMULT  = IN2(66)
      KTRIAL = IN2(67)
      KITSCF = IN2(71)
      NPRINT = IN2(72)
      IFAST  = IN2(73)
      IDIAG  = IN2(74)
      KCI    = IN2(77)
C     INOUT  = IN2(212)
C *** INITIALIZATION.
      INFO   = 0
      ITSAVE = 0
      KEXT   = 0
      NDIIS  = 0
      NITER  = 0
      EEP    = ZERO
      PL     = ZERO
      HALFEL = .NOT.UHF .AND. IMULT.GT.0
      FASTDG = IFAST.LT.0 .AND. .NOT.HALFEL
      FASTNO = IFAST.GT.1 .OR. HALFEL
      PRT    = .NOT.NOPRT
      PRT2   = PRT .AND. NPRINT.GE.2
      IF(FASTNO .AND. IMOCC.LE.2) THEN
         NROOTA = NUMB
         NROOTB = NBETA
      ELSE
         NROOTA = NORBS
         NROOTB = NORBS
      ENDIF
C *** DEFINE INITIAL DENSITY MATRIX.
      MPDIAG = 0
      IF(KTRIAL.GE.0) THEN
         CALL GUESSP (CA,CB,PA,PB,LM2,LM3,LM4,MPDIAG)
      ENDIF
C *** PUT INITIAL DENSITY MATRIX IN SQUARE FORM.
      CALL SQUARE (PA,PA,NORBS,LM2,LM4)
      IF(UHF) THEN
         CALL SQUARE (PB,PB,NORBS,LM2,LM4)
      ENDIF
C *** SECOND ATTEMPT FOR SCF USING DIIS.
      IF(ICALL.EQ.-1 .AND. IDIIS.GT.0) THEN
         WRITE(NB6,570)
      ENDIF
C     HEADER FOR DETAILED OUTPUT.
      IF(PRT2) THEN
         IF(IDIIS.LE.0) THEN
            WRITE(NB6,500)
         ELSE
            WRITE(NB6,505)
         ENDIF
      ENDIF
C *** ALLOCATE DIIS SCRATCH ARRAY.
      IF(IDIIS.GT.0) ALLOCATE (AC(LMD))
C     *
C *** START OF SCF LOOP.
C     *
   20 CONTINUE
C     HEVAL  = NITER.EQ.0 .OR. INOUT.LT.0
      HEVAL  = NITER.EQ.0
      WEVAL  = .TRUE.
C     EF     = ZERO
C     EH     = ZERO
      IF(HEVAL) ENUCLR = ZERO
C     EXTRACT ONE-CENTER DENSITY MATRIX ELEMENTS PP(LM6) FROM THE
C     FULL SQUARE DENSITY MATRIX P(LM2,LM2).
      CALL PONEP (PA,Q,LM2,LM6)
      IF(UHF) THEN
         CALL PONEP (PB,PPB,LM2,LM6)
      ENDIF
C *** CONSTRUCT THE F-MATRIX FOR RHF OR THE FALPHA-MATRIX FOR UHF.
      DO 30 I=1,NUMAT
      IA  = NFIRST(I)
      CALL HFOCKP (H(1,IA),FA(1,IA),PA(1,IA),PB(1,IA),Q,PPB,
     1             LM2,LM6,I,I,HEVAL,WEVAL,EFX,EHX,EN,NPRINT)
      IF(HEVAL) ENUCLR = ENUCLR+EN
   30 CONTINUE
      IF(HEVAL) ENUCLR = ENUCLR*PT5
C *** CONSTRUCT THE FBETA-MATRIX FOR UHF.
      IF(UHF) THEN
         DO 40 I=1,NUMAT
         IA  = NFIRST(I)
         CALL HFOCKP (H(1,IA),FB(1,IA),PB(1,IA),PA(1,IA),PPB,Q,
     1                LM2,LM6,I,I,HEVAL,WEVAL,EFX,EHX,EN,NPRINT)
   40    CONTINUE
      ENDIF
C *** INCLUDE TERMS FROM COSMO SOLVATION MODEL.
C     IF(ICOSMO.GT.0) THEN
C        CALL ADDFCK (FA,PA,PB,Q,D2,D2,LM4,LMD2,LMQ)
C        IF(UHF) THEN
C           CALL ADDFCK (FB,PA,PB,Q,D2,D2,LM4,LMD2,LMQ)
C        ENDIF
C     ENDIF
C *** APPLY DIIS CONVERGENCE ACCELERATION.
      DODIIS = IDIIS.GT.0 .AND. NITER.GE.IDIIS1 .AND. KEXT.NE.-1
      IF(DODIIS) THEN
         CALL DIISP (FA,FB,PA,PB,AC(LDIIS1),AC(LDIIS6),AC(LDIIS2),
     1               AC(LDIIS3),AC(LDIIS4),AC(LDIIS5),LM2,LM4,NORBS,
     2               MXDIIS,MX1P,NDIIS,JDIIS,NPRINT,EDMAX)
         NCGTOT(3) = NCGTOT(3)+1
         IF(UHF) NCGTOT(3) = NCGTOT(3)+1
      ENDIF
C *** CALCULATE THE ELECTRONIC ENERGY.
      EFA    = PT5*DOTMAT(PA,FA,LM2,NORBS,0)
      EHA    = PT5*DOTMAT(PA,H,LM2,NORBS,0)
      IF(UHF) THEN
         EFB = PT5*DOTMAT(PB,FB,LM2,NORBS,0)
         EHB = PT5*DOTMAT(PB,H,LM2,NORBS,0)
      ELSE
         EFB = EFA
         EHB = EHA
      ENDIF
      EF     = EFA+EFB
      EH     = EHA+EHB
      EE     = EF+EH
      EERROR = EE-EEP
      EEP    = EE
C *** PRINT OR SAVE SCF INFORMATION.
      IF(NITER.EQ.0 .AND. PRT .AND. NPRINT.GE.5) THEN
         WRITE(NB6,510) NITER,EH
         WRITE(NB6,510) NITER,EE,EF
      ENDIF
      IF(PRT2 .OR. (NITER.GT.0 .AND. NITER.LE.ITS)) THEN
         IF(DODIIS) THEN
            MEXT  = 'DIIS'
         ELSE IF(KEXT.GE.2) THEN
            MEXT  = 'DAMP'
         ELSE IF(KEXT.EQ.1) THEN
            MEXT  = 'YES '
         ELSE
            MEXT  = 'NO  '
         ENDIF
         IF(FASTDG) THEN
            MFAST = 'YES '
         ELSE
            MFAST = 'NO  '
         ENDIF
         IF(PRT2) THEN
            IF(DODIIS) THEN
               WRITE(NB6,510) NITER,EE,EERROR,PL,MEXT,MFAST,EDMAX
            ELSE
               WRITE(NB6,510) NITER,EE,EERROR,PL,MEXT,MFAST
            ENDIF
         ELSE
            EES(NITER) = EE
            ERS(NITER) = EERROR
            PLS(NITER) = PL
            MXS(NITER) = MEXT
            MFS(NITER) = MFAST
            EDS(NITER) = EDMAX
         ENDIF
      ENDIF
C     DEBUG PRINT.
      IF(NPRINT.GE.8) THEN
         WRITE(NB6,700) NITER,EH,EF
         WRITE(NB6,710) NITER
         CALL MATPRT(H,NORBS,NORBS,LM2,N)
         WRITE(NB6,720) NITER
         CALL MATPRT(FA,NORBS,NORBS,LM2,N)
         WRITE(NB6,730) NITER
         CALL MATPRT(PA,NORBS,NORBS,LM2,N)
         WRITE(6,740) NITER,LM6
         WRITE(6,750) (Q(I),I=1,LM6)
         WRITE(6,760) (PPB(I),I=1,LM6)
      ENDIF
C *** SPECIAL OPTION: RETURN AFTER COMPUTING ENERGY FOR GIVEN DENSITY.
      IF(KITSCF.LT.0) RETURN
C *** TEST FOR SCF CONVERGENCE AND SET FLAG FOR FAST DIAGONALIZATION.
      IF(NITER.EQ.0) GO TO 50
      IF(KEXT.EQ.-1) GO TO 100
      DERROR = ABS(EERROR)
      IF(DERROR.LT.SCFCRT .AND. PL.LT.PLCRT .AND. KEXT.NE.1) THEN
         ITSAVE = NITER+1
         KEXT   =-1
         FASTNO = IFAST.GT.1 .OR. HALFEL .OR. PRT
         FASTNO = FASTNO .OR. KCI.GT.0 .OR. ISKPA.LT.0 .OR. DODIIS
         FASTDG = .NOT.FASTNO
         IF(FASTNO .AND. IMOCC.LE.2) THEN
            NROOTA = NROOT
            NROOTB = NROOT
         ENDIF
      ELSE
         IF(NITER.GT.KITSCF) GO TO 60
         FASTDG = IFAST.LT.2 .AND. PL.LT.TRANS .AND. NITER.GT.1
         FASTDG = FASTDG .OR. IFAST.LT.0
         FASTDG = FASTDG .AND. .NOT.HALFEL
      ENDIF
C *** DIAGONALISE THE F-MATRIX.
   50 CONTINUE
      MODE = 1
      IF(FASTDG) THEN
         CALL DIAG   (FA,CA,EA,FA,Q,LM2,NORBS,NUMB)
         NCGTOT(3)  = NCGTOT(3)+2
         NCGTOT(14) = NCGTOT(14)+1
      ELSE
         IF(INFO.NE.0) IDIAG=6
         CALL DIAGON (FA,CA,EA,Q,IWORK,LM2,LM4,NORBS,NROOTA,IDIAG,
     1                MODE,INFO)
         NCGTOT(13) = NCGTOT(13)+1
         IF(INFO.NE.0 .AND. IDIAG.NE.6) THEN
            IF(NDIIS.GT.0) NDIIS=NDIIS-1
            GO TO 20
         ENDIF
      ENDIF
      IF(UHF) THEN
         IF(FASTDG) THEN
            CALL DIAG   (FB,CB,EB,FB,Q,LM2,NORBS,NBETA)
            NCGTOT(3)  = NCGTOT(3)+2
            NCGTOT(14) = NCGTOT(14)+1
         ELSE
            CALL DIAGON (FB,CB,EB,Q,IWORK,LM2,LM4,NORBS,NROOTB,IDIAG,
     1                   MODE,INFO)
            NCGTOT(13) = NCGTOT(13)+1
            IF(INFO.NE.0 .AND. IDIAG.NE.6) THEN
               IF(NDIIS.GT.0) NDIIS=NDIIS-1
               GO TO 20
            ENDIF
         ENDIF
      ENDIF
      NITER  = NITER+1
C *** COMPUTE THE DENSITY MATRIX AND EXTRAPOLATE, IF POSSIBLE.
      IF(IMOCC.GT.2) CALL OCCDEF (CA,CB,EA,EB,LM2,LM3)
      IF(UHF) THEN
         CALL BORDP1 (CA,FA,LM2,LM3,NORBS,NALPHA,0,0,1)
         CALL BORDP2 (DA,PA,FA,PL,LM2,LM3,NORBS,NITER,KEXT)
         CALL BORDP1 (CB,FB,LM2,LM3,NORBS,NBETA,0,0,2)
         CALL BORDP2 (DB,PB,FB,PM,LM2,LM3,NORBS,NITER,KEXT)
         IF(PM.GT.PL) PL=PM
         NCGTOT(3) = NCGTOT(3)+2
      ELSE
         CALL BORDP1 (CA,FA,LM2,LM3,NORBS,NUMB,IOD,JOD,1)
         CALL BORDP2 (DA,PA,FA,PL,LM2,LM3,NORBS,NITER,KEXT)
         NCGTOT(3) = NCGTOT(3)+1
      ENDIF
      GO TO 20
C *** NO SCF CONVERGENCE.
   60 CONTINUE
      WRITE(NB6,560) KTITLE
      WRITE(NB6,520)
      IF(.NOT.PRT2) THEN
         IF(IDIIS.LE.0) THEN
            WRITE(NB6,500)
         ELSE
            WRITE(NB6,505)
         ENDIF
         ITSPRT = MIN(NITER,ITS)
         DO 70 I=1,ITSPRT
         IF(IDIIS.GT.0) THEN
            WRITE(NB6,510) I,EES(I),ERS(I),PLS(I),MXS(I),MFS(I),EDS(I)
         ELSE
            WRITE(NB6,510) I,EES(I),ERS(I),PLS(I),MXS(I),MFS(I)
         ENDIF
   70    CONTINUE
         IF(IDIIS.GT.0) THEN
            WRITE(NB6,530) NITER,EE,EERROR,PL,EDMAX
         ELSE
            WRITE(NB6,530) NITER,EE,EERROR,PL
         ENDIF
      ENDIF
      WRITE(NB6,540) SCFCRT,PLCRT
C     IF(KRESET.EQ.1) WRITE(NB6,550)
C     ICALL  = -1 INDICATES FAILURE TO REACH SCF CONVERGENCE.
      ICALL  = -1
C     SECOND ATTEMPT: USE DIIS EXTRAPOLATION (IF NOT YET DONE).
C     DEFAULT OPTIONS: IDIIS=3, KTRIAL=0, NSTART=-1.
      IF(IDIIS.LE.0) THEN
         IN2(9)  = 1
         IN2(67) = 0
         IN2(78) =-1
         GO TO 10
      ENDIF
      IF(IDIIS.GT.0) DEALLOCATE (AC)
      RETURN
C     *
C *** END OF SCF LOOP.
C     *
C *** SCF CONVERGENCE HAS BEEN ACHIEVED.
  100 CONTINUE
      IF(IDIIS.GT.0) DEALLOCATE (AC)
C     SUCCESSFUL SECOND ATTEMPT FOR SCF USING DIIS.
      IF(ICALL.EQ.-1 .AND. IDIIS.GT.0) THEN
         WRITE(NB6,580)
         ICALL = 0
      ENDIF
C *** SAVE REFERENCE ENERGY FOR GUGA-CI.
      EEREF = EE
C     PUT MATRICES INTO PACKED LINEAR FORM.
      CALL LINEAR (PA,PA,NORBS,LM2,LM4)
      IF(UHF) THEN
         CALL LINEAR (PB,PB,NORBS,LM2,LM4)
      ENDIF
      IF(PRT2) THEN
         CALL LINEAR (H,H,NORBS,LM2,LM4)
         CALL LINEAR (FA,FA,NORBS,LM2,LM4)
         IF(UHF) THEN
            CALL LINEAR (FB,FB,NORBS,LM2,LM4)
         ENDIF
      ENDIF
C *** UPDATE GLOBAL STATISTICS.
      NCGTOT(9)  = NCGTOT(9)+NITER
      NCGTOT(10) = NCGTOT(10)+1
      RETURN
C 400 FORMAT(///5X,'DEBUG PRINT BEFORE STARTING THE SCF ITERATIONS.')
C 410 FORMAT(///5X,'CORE HAMILTONIAN MATRIX H(LM4).'/)
  500 FORMAT(///5X,'INFORMATION ON SCF ITERATIONS.',
     1       // 5X,'NITER',12X,'ENERGY',14X,'DELTAE',14X,'DELTAP',
     2         11X,'EXTRAP',7X,'FAST'/)
  505 FORMAT(///5X,'INFORMATION ON SCF ITERATIONS.',
     1       // 5X,'NITER',12X,'ENERGY',14X,'DELTAE',14X,'DELTAP',
     2         11X,'EXTRAP',7X,'FAST',11X,'DIIS ERROR'/)
  510 FORMAT(   5X,I3,4X,3F20.10,9X,A4,8X,A4,F20.10)
  520 FORMAT(// 5X,'UNABLE TO ACHIEVE SCF CONVERGENCE'/)
  530 FORMAT(/  5X,I3,4X,3F20.10,25X,F20.10)
  540 FORMAT(/  5X,'CONVERGENCE CRITERIA',7X,2F20.10//)
C 550 FORMAT(   5X,'NO SCF CONVERGENCE IN GRADIENT CALCULATION'//)
  560 FORMAT(///5X,A)
  570 FORMAT(// 5X,'DIIS EXTRAPOLATION HAS BEEN TURNED ON.')
  580 FORMAT(/  5X,'SCF CONVERGENCE HAS BEEN ACHIEVED USING DIIS.')
  700 FORMAT(/  5X,'DIRECT: NITER =',I5,
     1       /  5X,'DIRECT: EH    =',F20.10,
     2       /  5X,'DIRECT: EF    =',F20.10)
  710 FORMAT(// 5X,'CORE HAMILTONIAN MATRIX (H): NITER =',I4)
  720 FORMAT(// 5X,'CURRENT FOCK MATRIX (FA): NITER =',I4)
  730 FORMAT(// 5X,'CURRENT DENSITY MATRIX (PA): NITER =',I4)
  740 FORMAT(/  5X,'DIRECT: NITER =',I5,
     1       /  5X,'DIRECT: LM6   =',I5)
  750 FORMAT(   5X,'DIRECT: PPA',10F10.5)
  760 FORMAT(   5X,'DIRECT: PPB',10F10.5)
      END
