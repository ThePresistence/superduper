      SUBROUTINE FORMD1 (EIGVAL,FX,U,LMH,NVAR,DMAX,TS,IPRINT,MODE)
C     *
C     THIS ROUTINE DEFINES THE SEARCH DIRECTION VECTOR (D) FOR UPDATING
C     THE GEOMETRY USING THE RECOMMENDED ALGORITHM FROM:
C     J.NICHOLS ET AL, J.CHEM.PHYS. 92, 340 (1990).
C     CONDITION: THE STEP SIZE MUST BE LESS THAN DMAX.
C     *
      USE LIMIT, ONLY: LMV
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DOUBLE PRECISION LAMDA
      LOGICAL TS
      LOGICAL PRT,PRTDEB
      COMMON
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./FLPOCM/ GRAD(LMV),D(LMV),ALPHA,FIP1
     ./NBFILE/ NBF(20)
     ./OPTEF / OLDG(LMV),VMODE(LMV),DD
      DIMENSION EIGVAL(NVAR),FX(NVAR),U(LMH,LMH)
C *** FILE NUMBERS.
      NB6    = NBF(6)
C *** INITIALIZATION.
      PRT    = IPRINT.GE.1
      PRTDEB = IPRINT.GE.5
      ALPHA  = ONE
      LAMDA  = ZERO
      SKAL   = ONE
      DO 10 I=1,NVAR
      D(I)   = ZERO
   10 CONTINUE
C *** MINIMIZATION WALKS.
C     ICASE=1 : POSITIVE EONE, NEWTON-RAPHSON STEP ACCEPTABLE.
C     ICASE=2 : POSITIVE EONE, NEWTON-RAPHSON STEP TOO LONG, LAMDA<0.
C     ICASE=3 : NEGATIVE EONE, LAMDA.LT.EONE.
C     DDNR IS THE NEWTON-RAPHSON STEP SIZE, DMAX IS THE TRUST RADIUS.
      IF(.NOT.TS) THEN
         IF(PRTDEB) WRITE(NB6,610)
         IT   = 1
         EONE = EIGVAL(1)
         IF(EONE.GT.ZERO) THEN
            DDNR   = ZERO
            DO 20 I=1,NVAR
            DDNR   = DDNR+(FX(I)/EIGVAL(I))**2
   20       CONTINUE
            DDNR   = SQRT(DDNR)
            IF(DDNR.LE.DMAX) THEN
               ICASE  = 1
               LAMDA  = ZERO
            ELSE
               ICASE  = 2
               LAMDA  = EONE-ABS(FX(1)/DMAX)
            ENDIF
         ELSE
            ICASE  = 3
            LAMDA  = EONE-ABS(FX(1)/DMAX)
         ENDIF
      ENDIF
C *** TRANSITION STATE WALKS.
C     MODE=1 : WALKING UP THE LOWEST EIGENMODE.
C     MODE>1 : WALKING UP ANOTHER EIGENMODE WHILE IGNORING LOWER MODES.
      IF(TS) THEN
         IF(PRTDEB) WRITE(NB6,620)
         IT     = MODE
         EIGIT  = EIGVAL(MODE)
         EONE   = EIGVAL(MODE+1)
         IF(EIGIT.GT.ZERO) THEN
            IF(EONE*PT5.GT.EIGIT) THEN
               ICASE  = 1
               ALPHA  = ONE
               LAMDA  = (EIGIT+EONE*PT5)*PT5
            ELSE
               ICASE  = 2
               ALPHA  = (EONE-EIGIT)/EONE
               LAMDA  = (EIGIT+(EIGIT+EONE)*PT5)*PT5
            ENDIF
         ELSE
            ICASE  = 3
            ALPHA  = ONE
            LAMDA  = (EIGIT+EONE)*PT25
         ENDIF
      ENDIF
C *** DETERMINE STEP.
C     XLAMD  = LAMDA
C     XLAMD0 = LAMDA
      DO 40 I=IT,NVAR
      TEMP   = ALPHA*FX(I)/(LAMDA-EIGVAL(I))
      DO 30 J=1,NVAR
      D(J)   = D(J)+TEMP*U(J,I)
   30 CONTINUE
   40 CONTINUE
C *** CHECK FOR SCALING.
      DD     = SQRT(DDOT(NVAR,D,1,D,1))
      IF(DD.GT.DMAX) THEN
         SKAL = DMAX/DD
         DO 50 J=1,NVAR
         D(J) = D(J)*SKAL
   50    CONTINUE
         DD   = DMAX
      ENDIF
C *** PRINTING SECTION.
      IF(PRT) THEN
         WRITE(NB6,500) DD
         IF(LAMDA.NE.ZERO) WRITE(NB6,510) LAMDA
         IF(ALPHA.NE.ONE)  WRITE(NB6,520) ALPHA
         IF(SKAL .LT.ONE)  WRITE(NB6,530) SKAL
      ENDIF
      IF(PRTDEB) THEN
         IF(.NOT.TS .AND. ICASE.LT.3) WRITE(NB6,540) DDNR
      ENDIF
      RETURN
  500 FORMAT( 1X,'CURRENT STEP SIZE      = ',E11.4)
  510 FORMAT( 1X,'CURRENT LAMBDA VALUE   = ',E11.4)
  520 FORMAT( 1X,'CURRENT ALPHA VALUE    = ',E11.4)
  530 FORMAT( 1X,'SCALE FACTOR FOR STEP  = ',E11.4)
  540 FORMAT( 1X,'PURE NR STEP SIZE      = ',E11.4)
  610 FORMAT( 1X,'MIN SEARCH, NEWTON-RAPHSON STEP')
  620 FORMAT( 1X,'TS SEARCH, NEWTON-RAPHSON STEP')
      END
