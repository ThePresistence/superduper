      SUBROUTINE ZLIMIT (IOPPRT)
C     *
C     INPUT OF TIME LIMIT AND GENERAL OPTIONS.
C     *
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*7  METHOD
      COMMON
     ./BESAFE/ TLIMIT
     ./INOPT1/ IN1(300)
     ./INOPT2/ IN2(300)
     ./MOPAC / IMOPAC
     ./NBFILE/ NBF(20)
     ./QMNAME/ METHOD(-23:6)
C *** FILE NUMBERS.
      NB5    = NBF(5)
      NB6    = NBF(6)
C *** READ INPUT.
      IF(IMOPAC.EQ.0) READ(NB5,500) (IN1(I),I=1,31)
      IN2(1:31) = IN1(1:31)
      IOP    = IN2(2)
      JOP    = IN2(3)
      IEF    = IN2(8)
      IPAROK = IN2(11)
C *** IMPOSE DEFAULT VALUES.
C     IN2(1) =LIMIT, IN2(4) =IGEOM, IN2(5) =IFORM, IN2(6) =NEXMOL.
C     IN2(22)=IFLD1, IN2(24)=IFLD3.
      IF(IN2( 1).EQ.0 .AND. IMOPAC .EQ. 1) IN2( 1)=3600
      IF(IN2( 5).EQ.3 .OR.  IN2( 5).EQ.-3) IN2( 4)=1
      IF(IN2(22).GT.0 .AND. IN2(24).LE. 0) IN2(24)=10
      IF(IN2(1).NE.0) THEN
         TLIMIT = IN2(1)
      ELSE
         TLIMIT = 1.0D+10
      ENDIF
      IF(IN2(6).EQ.0) THEN
         IF(IMOPAC.EQ.0) THEN
            IN2(6) =-1
         ELSE
            IN2(6) = 1
         ENDIF
      ENDIF
C     IN2(30)=IMMDP: DEFAULT -3 FOR ODM2 AND ODM3, -1 FOR OTHER METHODS.
      IF(IN2(30).GT.3) IN2(30)=-1
      IF(IOP.EQ.-22 .OR. IOP.EQ.-23) THEN
         IF(IN2(30).EQ.0) IN2(30)=-3
      ELSE
         IF(IN2(30).EQ.0) IN2(30)=-1
      ENDIF
C *** PRINTING SECTION.
      IF(IOPPRT.GT.-5) THEN
         WRITE(NB6,100)
         WRITE(NB6,110) (IN2(I),I=1,31)
      ENDIF
      IF(IOPPRT.GT. -1) THEN
         IF(IOP.GE.-23 .AND. IOP.LE.6) THEN
            WRITE(NB6,120) METHOD(IOP)
         ENDIF
         IF(IOP.EQ.-10) WRITE(NB6,130)
         IF(IOP.EQ. -3 .OR. IOP.EQ.-13) WRITE(NB6,140)
         IF(IOP.EQ. -4) THEN
            IF(IPAROK.GE.1 .AND. IPAROK.LE.3) WRITE(NB6,145)
            IF(IPAROK.EQ.4) WRITE(NB6,150)
            IF(IPAROK.EQ.5) WRITE(NB6,160)
            IF(IPAROK.EQ.6) WRITE(NB6,170)
         ENDIF
         IF(IOP.LE.0) THEN
            IF(IPAROK.EQ.7) WRITE(NB6,171)
         ENDIF
         IF(IOP.EQ.-4 .OR. IOP.EQ.-7) THEN
            IF(IPAROK.EQ.8) WRITE(NB6,172)
         ENDIF
         IF(IOP.EQ.5) WRITE(NB6,173)
         IF(IOP.EQ.6) WRITE(NB6,174)
         IF(IN2(27).GT.0) THEN
            WRITE(NB6,180)
            WRITE(NB6,190)
         ENDIF
      ENDIF
      IF(IOPPRT.GT. -2) THEN
         IF(JOP.EQ. -2) WRITE(NB6,200)
         IF(JOP.EQ. -1) WRITE(NB6,210)
         IF(JOP.EQ.  0) WRITE(NB6,220)
         IF(JOP.EQ.  1) WRITE(NB6,230)
         IF(JOP.EQ.  2) WRITE(NB6,240)
         IF(JOP.EQ.  3) WRITE(NB6,250)
         IF(JOP.EQ.  4) WRITE(NB6,260)
         IF(JOP.EQ.  5) WRITE(NB6,261)
         IF(JOP.EQ.  6) WRITE(NB6,262)
         IF(IEF.GT.  0) WRITE(NB6,263)
         IF(IEF.LT.  0) WRITE(NB6,264)
      ENDIF
      IF(IOPPRT.GT.-3) THEN
         IGEOM  = IN2(4)
         IF(IGEOM.LE.0) WRITE(NB6,270)
         IF(IGEOM.EQ.1) WRITE(NB6,280)
         IF(IN2(5).EQ.1) WRITE(NB6,290)
         IF(IN2(5).GT.1) WRITE(NB6,300)
         IF(IN2(14).EQ.1) WRITE(NB6,360)
         IF(IN2(14).EQ.2) WRITE(NB6,361)
         IF(IN2(14).EQ.3) WRITE(NB6,362)
         IF(IN2(14).EQ.4) WRITE(NB6,363)
         IF(IN2(14).EQ.5) WRITE(NB6,364)
         IF(IN2(15).EQ.1) WRITE(NB6,365)
         IF(IN2(16).EQ.1) WRITE(NB6,366)
         IF(IN2(17).EQ.1) WRITE(NB6,370)
         IF(IN2(17).EQ.2) WRITE(NB6,371)
         IF(IN2(19).EQ.1) WRITE(NB6,375)
         IF(IN2(20).GT.0) WRITE(NB6,380)
         IF(IN2(10).NE.0) WRITE(NB6,390)
         IF(IN2(22).GT.0) THEN
            IF(IN2(23).NE.0) THEN
               EFIELD = DBLE(IN2(22))*10.D0**(-IN2(23))
            ELSE
               EFIELD = 1.0D-03
            ENDIF
            WRITE(NB6,400) EFIELD
            IF(IN2(24).NE.10) THEN
               PLCRT  = 10.D0**(-IN2(24))
               WRITE(NB6,410) PLCRT
            ENDIF
         ENDIF
         IF(IN2(28).GT.0) WRITE(NB6,420)
         IF(IN2(28).LT.0) WRITE(NB6,430)
         IF(IN2(29).GT.0) WRITE(NB6,440)
         IF(IN2(29).LT.0) WRITE(NB6,450)
C *** CHECK FOR ERRORS: IN2(30)=IMMDP.
C     DISPERSION CORRECTIONS ARE ONLY AVAILABLE FOR AM1, PM3, OM2, OM3, ODM2, AND ODM3.
         IF(IN2(30).GT.0) THEN
           IF(IOP.EQ.-2 .OR. IOP.EQ.-7)THEN
             WRITE(NB6,457)
           ELSEIF(IOP.NE.-6 .AND. IOP.NE.-8 .AND.
     1            IOP.NE.-22 .AND. IOP.NE.-23) THEN
             WRITE(NB6,458) IOP
             STOP 'IMMDP'
           ELSEIF(IN2(30).EQ.1 .AND. IOP.EQ.-22) THEN
             WRITE(NB6,459)
             STOP 'IMMDP'
           ELSEIF(IN2(30).EQ.2 .AND. IOP.EQ.-22) THEN
             WRITE(NB6,460)
             STOP 'IMMDP'
           ELSEIF(IN2(30).EQ.1 .AND. IOP.EQ.-23) THEN
             WRITE(NB6,461)
             STOP 'IMMDP'
           ELSEIF(IN2(30).EQ.2 .AND. IOP.EQ.-23) THEN
             WRITE(NB6,462)
             STOP 'IMMDP'
           ELSEIF(IN2(30).EQ.1) THEN
             WRITE(NB6,463)
           ELSEIF(IN2(30).EQ.2) THEN
             WRITE(NB6,464)
           ELSEIF(IN2(30).EQ.3) THEN
             WRITE(NB6,465)
           ELSEIF(IN2(30).EQ.-3) THEN
             WRITE(NB6,466)
           ENDIF
         ENDIF
      ENDIF
C *** CHECK FOR ERRORS: IN2(27)=IEXBAS.
      IF(IN2(27).GT.0) THEN
         IF(IOP.NE.0 .AND. IOP.NE.-4 .AND. IOP.NE.-10) THEN
            WRITE(NB6,900) IOP
            STOP 'INPSCF'
         ENDIF
      ENDIF
      RETURN
  100 FORMAT(///1X,'*** OPTIONS FROM THE FIRST LINE OF INPUT    ***',
     1       /  1X,'*** DEFINED EITHER EXPLICITLY OR BY DEFAULT ***')
  110 FORMAT(/  1X,'LIMIT  =',I5,5X,'IOP    =',I5,5X,'JOP    =',I5,
     1          5X,'IGEOM  =',I5,5X,'IFORM  =',I5,
     2       /  1X,'NEXMOL =',I5,5X,'MPLIB  =',I5,5X,'IEF    =',I5,
     3          5X,'IDIIS  =',I5,5X,'INREFD =',I5,
     4       /  1X,'IPAROK =',I5,5X,'MMINP  =',I5,5X,'NMR    =',I5,
     5          5X,'NSAV7  =',I5,5X,'NSAV8  =',I5,
     6       /  1X,'NSAV9  =',I5,5X,'NSAV13 =',I5,5X,'NSAV15 =',I5,
     7          5X,'NSAV16 =',I5,5X,'IMMOK  =',I5,
     8       /  1X,'IHBOND =',I5,5X,'IFLD1  =',I5,5X,'IFLD2  =',I5,
     9          5X,'IFLD3  =',I5,5X,'ICUTS  =',I5,
     A       /  1X,'ICUTG  =',I5,5X,'IEXBAS =',I5,5X,'ICOSMO =',I5,
     B          5X,'IPSANA =',I5,5X,'IMMDP  =',I5,
     C       /  1X,'INAC   =',I5//)
  120 FORMAT(/  1X,A)
  130 FORMAT(   1X,'PARAMETERS ARE FINAL FOR Na, Mg, Al, Si, P, S,',
     1          1X,'Cl, Br, I, Zn, Cd, and Hg.',
     2       /  1X,'PARAMETERS FOR OTHER ELEMENTS ARE PRELIMINARY',
     3          1X,'UNTIL THEY ARE PUBLISHED.')
  140 FORMAT(/  1X,'SPECIAL TREATMENT OF HYDROGEN BONDS')
  145 FORMAT(/  1X,'SPECIAL PARAMETERS ARE DEFINED BY USER INPUT')
  150 FORMAT(/  1X,'ORIGINAL MNDO PARAMETERS FOR Si AND S ARE USED')
  160 FORMAT(/  1X,'PARAMETER VALUES ARE COPIED FROM MNDO87-MNDO89.',
     1       /  1X,'COMPARED WITH THE DEFAULT VALUES FROM MOPAC(6.0)',
     2       /  1X,'THERE ARE VERY SLIGHT NUMERICAL DEVIATIONS FOR',
     3       /  1X,'THE DEPENDENT PARAMETERS OF H,LI,BE,B,C,N,O,F.')
  170 FORMAT(/  1X,'USING SPECIAL MNDO FULLERENE PARAMETERS FROM',
     1       /  1X,'THEORETICA CHIMICA ACTA 92, 269 (1996), SET B.')
  171 FORMAT(/  1X,'DEPENDENT PARAMETERS ARE COMPUTED INTERNALLY.')
  172 FORMAT(/  1X,'USING SPECIAL PDDG PARAMETERIZATION FROM',
     1       /  1X,'JOURNAL OF COMPUTATIONAL CHEMISTRY (2002).')
  173 FORMAT(/  1X,'USING CALCULATED ELECTRONIC ENERGIES OF ATOMS ',
     1       /  1X,'DURING CONVERSION TO HEATS OF FORMATION.')
  174 FORMAT(/  1X,'USING FITTED ELECTRONIC ENERGIES OF ATOMS ',
     1       /  1X,'DURING CONVERSION TO HEATS OF FORMATION.')
  180 FORMAT(/  1X,'MINIMAL BASIS EXTENDED BY 2P FUNCTIONS AT HYDROGEN',
     1             ' AND 3D FUNCTIONS AT FIRST-ROW ATOMS')
  190 FORMAT(/  1X,'PARAMETERS FOR POLARIZATION FUNCTIONS MUST BE ',
     1             'PROVIDED VIA BLOCKDATA OR INPUT')
  200 FORMAT(/  1X,'GRADIENT CALCULATION FOR INPUT GEOMETRY')
  210 FORMAT(/  1X,'STANDARD CALCULATION FOR INPUT GEOMETRY')
  220 FORMAT(/  1X,'GEOMETRY OPTIMIZATION FOR ENERGY MINIMUM')
  230 FORMAT(/  1X,'GEOMETRY OPTIMIZATION FOR TRANSITION STATE')
  240 FORMAT(/  1X,'FORCE CONSTANT CALCULATION FOR INPUT GEOMETRY')
  250 FORMAT(/  1X,'GEOMETRY OPTIMIZATION FOR ENERGY MINIMUM AND ',
     1             'FORCE CONSTANT CALCULATION FOR OPTIMIZED GEOMETRY')
  260 FORMAT(/  1X,'GEOMETRY OPTIMIZATION FOR TRANSITION STATE AND ',
     1             'FORCE CONSTANT CALCULATION FOR OPTIMIZED GEOMETRY')
  261 FORMAT(/  1X,'FORCE CONSTANT CALCULATION AFTER GEOMETRY ',
     1             'OPTIMIZATION FOR ENERGY MINIMUM - IF NECESSARY')
  262 FORMAT(/  1X,'FORCE CONSTANT CALCULATION AFTER GEOMETRY ',
     1             'OPTIMIZATION FOR TRANSITION STATE - IF NECESSARY')
  263 FORMAT(/  1X,'EIGENVECTOR FOLLOWING IN GEOMETRY OPTIMIZATION')
  264 FORMAT(/  1X,'GEOMETRY OPTIMIZATION USING HDLC APPROACH')
  270 FORMAT(/  1X,'INPUT IN INTERNAL COORDINATES')
  280 FORMAT(/  1X,'INPUT IN CARTESIAN COORDINATES')
  290 FORMAT(/  1X,'INPUT OF MOLECULAR DATA IN FREE FORMAT')
  300 FORMAT(/  1X,'INPUT OF MOLECULAR DATA IN FREE FORMAT WITH ',
     1             'SIMPLIFICATIONS FOR SYMMETRY DATA')
  360 FORMAT(/  1X,'NEW INPUT ON FILE NB7 IN STANDARD FORMAT')
  361 FORMAT(/  1X,'NEW INPUT ON FILE NB7 SUITABLE FOR FREE FORMAT')
  362 FORMAT(/  1X,'NEW INPUT ON FILE NB7 IN MOPAC FORMAT')
  363 FORMAT(/  1X,'NEW INPUT ON FILE NB7 SUITABLE FOR FREE FORMAT - ',
     1             'GEOMETRY IN CARTESIAN COORDINATES')
  364 FORMAT(/  1X,'NEW INPUT ON FILE NB7 IN MOPAC FORMAT - ',
     1             'GEOMETRY IN CARTESIAN COORDINATES')
  365 FORMAT(/  1X,'MOPAC-TYPE DATA AND CHARGES SAVED ON FILE NB8')
  366 FORMAT(/  1X,'DATA IN PDB-COMPATIBLE FORMAT SAVED ON FILE NB9')
  370 FORMAT(/  1X,'DATA FOR GRAPHICAL EVALUATION SAVED ON FILE NB13')
  371 FORMAT(/  1X,'DATA FOR MOLDEN POSTPROCESSING SAVED ON FILE')
  375 FORMAT(/  1X,'DATA FOR SYBYL POSTPROCESSING SAVED ON FILE NB16')
  380 FORMAT(/  1X,'MOLECULAR MECHANICS CORRECTION FOR PEPTIDES')
  390 FORMAT(/  1X,'EXPERIMENTAL REFERENCE DATA AS ADDITIONAL INPUT')
  400 FORMAT(/  1X,'CALCULATION OF STATIC ELECTRIC PROPERTIES BY THE',
     1       /  1X,'FINITE-FIELD TECHNIQUE WITH AN APPLIED FIELD OF',
     2       /  1X,'EFIELD =',F11.8,' ATOMIC UNITS')
  410 FORMAT(   1X,'SCF CONVERGENCE CRITERION ON THE DENSITY MATRIX',
     1       /  1X,'PLCRT  =',F17.15)
  420 FORMAT(/  1X,'COSMO SOLVATION TREATMENT')
  430 FORMAT(/  1X,'SINGLE-POINT COSMO SOLVATION TREATMENT')
  440 FORMAT(/  1X,'ANALYTICAL DERIVATIVES WILL BE USED WHENEVER ',
     1             'AVAILABLE')
  450 FORMAT(/  1X,'ANALYTICAL DERIVATIVES WILL NOT BE USED ',
     1             'REGARDLESS WHETHER THEY MIGHT BE AVAILABLE')
  457 FORMAT(/  1X,'INCLUDE DISPERSION CORRECTIONS FROM',
     1       /  1X,'PCCP 9, 2362 (2007)')
  458 FORMAT(/  1X,'DISPERSION CORRECTIONS NOT AVAILABLE WITH THE ',
     1             'METHOD SELECTED BY IOP =',I3/)
  459 FORMAT(/  1X,'DISPERSION CORRECTIONS (D1) ARE NOT AVAILABLE ',
     1             'WITH ODM2')
  460 FORMAT(/  1X,'DISPERSION CORRECTIONS (D2) ARE NOT AVAILABLE ',
     1             'WITH ODM2')
  461 FORMAT(/  1X,'DISPERSION CORRECTIONS (D1) ARE NOT AVAILABLE ',
     1             'WITH ODM3')
  462 FORMAT(/  1X,'DISPERSION CORRECTIONS (D2) ARE NOT AVAILABLE ',
     1             'WITH ODM3')
  463 FORMAT(/  1X,'INCLUDE DISPERSION CORRECTIONS (D1)')
  464 FORMAT(/  1X,'INCLUDE DISPERSION CORRECTIONS (D2)')
  465 FORMAT(/  1X,'INCLUDE DISPERSION CORRECTIONS (D3)')
  466 FORMAT(/  1X,'INCLUDE DISPERSION CORRECTIONS (D3) ',
     1             'WITH 3-BODY TERMS')
  500 FORMAT(6I5,7I2,6I1,10I2,3I5)
  900 FORMAT(/  1X,'POLARIZED BASIS SETS ARE NOT AVAILABLE WITH THE ',
     1             'METHOD SELECTED BY IOP =',I3/)
      END
