      SUBROUTINE INPUTS
C     *
C     DEFINE CONTROL VARIABLES FROM MOLECULAR DATA.
C     *
C     CODE DERIVED FROM SUBROUTINE INPUT BY REMOVING INPUT OF DATA,
C     DEFAULT ASSIGNMENTS, STANDARD PRINTOUT OF DATA, AND ERROR CHECKS.
C     *
C     INPUT NEEDED FROM COMMON BLOCKS:
C     /ATOMS / NUMAT,NAT(LM1)
C     /DPARM / LORBS(LMZ)
C     /FLAG1 / KTITLE,KOMENT
C     /INOPT2/ IN2(300)
C     /NBFILE/ NBF(20)
C     /PARDER/ CORE(LMZ),EHEAT(LMZ),EISOL(LMZ)
C     *
C     OUTPUT PROVIDED THROUGH COMMON BLOCKS:
C     /ATOMS / NFIRST(LM1),NLAST(LM1)
C     /DELEMT/ NELMD,NFOCK
C     /ENERGT/ EAT,ATHEAT
C     /HALFE / IODD,JODD
C     /OCCFL / IMOCC,NOCCA,NOCCB,MSUB,MOSUMA,MOSUMB,MOCCA(8),MOCCB(8)
C     /ORBITS/ NUMB,NORBS,NMOS,NALPHA,NBETA
C     /SKIPA / ISKPA
C     /UHF   / UHF
C     *
      USE LIMIT, ONLY: LM1, LMZ
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL UHF
      CHARACTER*80 KTITLE,KOMENT
      COMMON
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./DELEMT/ NELMD,NFOCK
     ./DPARM / LORBS(LMZ)
     ./ENERGT/ EE,ENUCLR,EAT,ATHEAT
     ./FLAG1 / KTITLE,KOMENT
      COMMON
     ./HALFE / IODD,JODD
     ./INOPT2/ IN2(300)
     ./NBFILE/ NBF(20)
     ./OCCFL / IMOCC,NOCCA,NOCCB,MSUB,MOSUMA,MOSUMB,MOCCA(8),MOCCB(8)
     ./ORBITS/ NUMB,NORBS,NMOS,NALPHA,NBETA
     ./PARDER/ CORE(LMZ),EHEAT(LMZ),EISOL(LMZ)
     ./SKIPA / ISKPA
     ./UHF   / UHF
C *** FILE NUMBERS.
      NB6    = NBF(6)
C *** DEFINE LOCAL VARIABLES FOR THIS ROUTINE.
      IFORM  = IN2(5)
      JPRINT = IN2(42)
      KHARGE = IN2(65)
      IMULT  = IN2(66)
      IUHF   = IN2(70)
      IFAST  = IN2(73)
      KCI    = IN2(77)
      IGRAD  = IN2(199)
C *** DETERMINE THE FOLLOWING VARIABLES.
C     NFIRST(I) FIRST BASIS ORBITAL OF ATOM I.
C     NLAST(I)  LAST  BASIS ORBITAL OF ATOM I.
C     NEL       NUMBER OF ELECTRONS.
C     NELMD     NUMBER OF ATOMS WITH D ORBITALS.
C     NFOCK     STEP SIZE IN FOCK (5 SP, 10 SPD).
      NELMD  = 0
      NFOCK  = 5
      NEL    = -KHARGE
      IB     = 0
      DO 20 I=1,NUMAT
      NFIRST(I) = IB+1
      NI     = NAT(I)
      NEL    = NEL+NINT(CORE(NI))
      IB     = IB+LORBS(NI)
      NLAST(I) = IB
      IF(LORBS(NI).GE.9) THEN
         NELMD = NELMD+1
         NFOCK = 10
      ENDIF
   20 CONTINUE
C *** CHECK FOR UHF OPTION.
      UHF    = .FALSE.
      IF(IUHF.EQ.0 .AND. IMULT.GT.0 .AND. KCI.EQ.0) UHF=.TRUE.
      IF(IUHF.GT.0) UHF=.TRUE.
C *** CHECK FOR TYPE OF GRADIENT CALCULATION.
C     ISKPA = 0: FAST FINITE-DIFFERENCE CALCULATION.
C     ISKPA = 1: SLOW FINITE-DIFFERENCE CALCULATION.
      ISKPA = 0
      IF(IMULT.GT.0 .AND. .NOT.UHF) ISKPA=1
      IF(IGRAD.EQ.1 .OR. KCI.GT.0)  ISKPA=1
C *** DETERMINE OCCUPATION OF THE MOLECULAR ORBITALS.
C     NEL      NUMBER OF ELECTRONS       (NEL = NALPHA+NBETA).
C     NALPHA   NUMBER OF ALPHA ELECTRONS (CORRECT FOR RHF AND UHF).
C     NBETA    NUMBER OF BETA  ELECTRONS (CORRECT FOR RHF AND UHF).
C     NBETA    EQUAL TO NUMBER OF DOUBLY OCCUPIED MOLECULAR ORBITALS
C              IN RHF CALCULATIONS WITH IMULT.NE.1.
C     NUMB     NUMBER OF HIGHEST OCCUPIED MOLECULAR ORBITAL.
      NORBS  = NLAST(NUMAT)
      IODD   = 0
      JODD   = 0
      NODD   = MAX(1,IMULT)-1
      NBETA  = (NEL-NODD)/2
      NALPHA = NBETA+NODD
      NUMB   = NALPHA
      NCLO   = NBETA
      IF(IMULT.GT.0 .AND. .NOT.UHF) THEN
         IF(IMULT.EQ.1) THEN
            NUMB = NBETA+1
            IODD = NBETA
            JODD = NUMB
            NCLO = NBETA-1
         ELSE IF(IMULT.EQ.2) THEN
            IODD = NUMB
         ELSE IF(IMULT.EQ.3) THEN
            IODD = NBETA+1
            JODD = NBETA+2
         ENDIF
      ENDIF
      NMOS   = NUMB
C     EXPLICIT DEFINITION OF OCCUPATION NUMBERS.
      IMOCC  = ABS(IUHF)
      IF(IMOCC.LT.2) THEN
         NOCCA  = 0
         NOCCB  = 0
      ELSE IF(IMOCC.EQ.2) THEN
         CALL OCCSTD
      ELSE IF(IMOCC.EQ.3) THEN
         CALL INPOCC (IFORM,JPRINT)
         IFAST   = 2
         IN2(73) = 2
         NMOS    = NORBS
      ELSE IF(IMOCC.EQ.4) THEN
         IFAST   = 2
         IN2(73) = 2
         NMOS    = NORBS
      ENDIF
C *** COMPUTE SUMS OF ATOMIC ENERGIES AND HEATS OF FORMATION.
      ATHEAT = ZERO
      EAT    = ZERO
      DO 50 I=1,NUMAT
      NI     = NAT(I)
      ATHEAT = ATHEAT + EHEAT(NI)
      EAT    = EAT + EISOL(NI)
   50 CONTINUE
C *** PRINTING SECTION.
      IF(JPRINT.LT.5) RETURN
      WRITE(NB6,600) KOMENT,KTITLE
      IF(UHF) THEN
         WRITE(NB6,690) KHARGE,NEL,NALPHA,NBETA
      ELSE
         WRITE(NB6,700) KHARGE,NEL,NCLO
         IF(IODD.GT.0) WRITE(NB6,710) IODD
         IF(JODD.GT.0) WRITE(NB6,710) JODD
      ENDIF
      IF(IMULT.GT.0) WRITE(NB6,720) IMULT
      WRITE(NB6,740)
      WRITE(NB6,750) (IN2(I),I=65,79)
      IF(IUHF .LT.0) WRITE(NB6,760)
      IF(IUHF .GT.0) WRITE(NB6,770)
      IF(IFAST.EQ.1) WRITE(NB6,780)
      IF(IFAST.GT.1) WRITE(NB6,790)
      RETURN
  600 FORMAT(// 1X,A,/1X,A)
  690 FORMAT(///1X,'MOLECULAR CHARGE     ',I5,
     1       /  1X,'NUMBER OF ELECTRONS  ',I5,
     2       /  1X,'    ALPHA ELECTRONS  ',I5,
     3       /  1X,'    BETA  ELECTRONS  ',I5)
  700 FORMAT(///1X,'MOLECULAR CHARGE     ',I5,
     1       /  1X,'NUMBER OF ELECTRONS  ',I5,
     2       /  1X,'DOUBLY OCCUPIED MOS  ',I5)
  710 FORMAT(   1X,'ONE ELECTRON IN MO   ',I5)
  720 FORMAT(   1X,'MULTIPLICITY         ',I5)
  740 FORMAT(// 1X,'*** OPTIONS FOR THE MOLECULE UNDER STUDY    ***',
     1       /  1X,'*** DEFINED EITHER EXPLICITLY OR BY DEFAULT ***')
  750 FORMAT(/  1X,'KHARGE =',I5,5X,'IMULT  =',I5,5X,'KTRIAL =',I5,5X,
     1             'KGEOM  =',I5,5X,'IPUBO  =',I5,
     2       /  1X,'IUHF   =',I5,5X,'KITSCF =',I5,5X,'NPRINT =',I5,5X,
     3             'IFAST  =',I5,5X,'IDIAG  =',I5,
     4       /  1X,'KSYM   =',I5,5X,'NUMSYM =',I5,5X,'KCI    =',I5,5X,
     5             'NSTART =',I5,5X,'NSTEP  =',I5)
  760 FORMAT(/  1X,'RHF CALCULATION')
  770 FORMAT(/  1X,'UHF CALCULATION')
  780 FORMAT(/  1X,'FAST DIAGONALIZATIONS ALLOWED IN SCF ONLY AFTER',
     1       /  1X,'FULL DIAGONALIZATIONS IN FIRST SCF ITERATIONS')
  790 FORMAT(/  1X,'FAST DIAGONALIZATIONS NOT ALLOWED IN SCF')
      END
