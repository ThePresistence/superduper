      SUBROUTINE SCF (ARRAY,LM5,ICALL,SCFCAL)
C     *
C     CONTROL ROUTINE FOR ENERGY AND GRADIENT EVALUATION.
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     ARRAY     AVAILABLE BUFFER (S).
C     LM5       DIMENSION OF ARRAY (I).
C     ICALL     CONTROL AND ERROR FLAG (I,O).
C     SCFCAL    EXTERNAL ROUTINE FOR ENERGY EVALUATION (I).
C     *
C     ICALL  DEFINES THE TYPE OF CALCULATION.
C      00    ENERGY ONLY             SINGLE-POINT CALCULATION
C      01    ENERGY AND GRADIENT     SINGLE-POINT CALCULATION
C      10    ENERGY ONLY             SINGLE-POINT AFTER OPTIMIZATION
C      11    ENERGY AND GRADIENT     SINGLE-POINT BEFORE FORCE CONSTANTS
C      20    ENERGY ONLY             IN GEOMETRY OPTIMIZATION
C      21    ENERGY AND GRADIENT     IN GEOMETRY OPTIMIZATION
C      22    GRADIENT ONLY           IN GEOMETRY OPTIMIZATION
C      30    ENERGY ONLY             IN FORCE CONSTANT CALCULATION
C      31    ENERGY AND GRADIENT     IN FORCE CONSTANT CALCULATION
C      32    GRADIENT ONLY           IN FORCE CONSTANT CALCULATION
C      40    ENERGY ONLY             IN FINITE-FIELD CALCULATION
C     *
C     ICALL1 IS THE FIRST DIGIT OF ICALL.
C       0    SINGLE-POINT CALCULATION
C       1    SINGLE-POINT CALCULATION - SPECIAL CASES
C       2    GEOMETRY OPTIMIZATION
C       3    FORCE CONSTANT CALCULATION
C       4    FINITE-FIELD CALCULATION
C     ICALL2 IS THE SECOND DIGIT OF ICALL.
C       0    ENERGY ONLY
C       1    ENERGY AND GRADIENT
C       2    GRADIENT ONLY
C       3    CI GRADIENT OR NONADIABATIC COUPLINGS ONLY
C     *
C     ISKPA  DEFINES THE MODE OF GRADIENT CALCULATION.
C       0    FAST FINITE DIFFERENCES VIA INTEGRAL RECALCULATION
C       1    SLOW FINITE DIFFERENCES VIA FULL CALCULATIONS
C      -1    FULL ANALYTIC EVALUATION FOR NON-VARIATIONAL METHODS (CPHF)
C      -2    FULL ANALYTIC EVALUATION FOR VARIATIONAL METHODS (NO CPHF)
C      -3    HYBRID ANALYTIC EVALUATION FOR ALL METHODS (CPHF AS NEEDED)
C      -3    WITH NUMERICAL INTEGRAL AND FOCK MATRIX DERIVATIVES
C     *
C     ICALL  ALSO SERVES AS AN ERROR FLAG FOR SUBROUTINE SCFCAL.
C      -1    RETURNED FROM SCFCAL IF THERE IS NO SCF CONVERGENCE
C     *
      USE LIMIT, ONLY: LM1, LMV, LM1M, LMGRD, LMPROP, LMSTAT
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      EXTERNAL SCFCAL
      COMMON
     ./AMASS / AMS(LM1)
     ./ATOMC / COORD(3,LM1)
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./ATSYM / IELSYM(3,7)
     ./CGRAD / CG(3,LM1+LM1M)
     ./CGRAD1/ ICG(3,LM1)
     ./CONSTF/ A0,AFACT,EV,EVCAL,PI,W1,W2,BIGEXP
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./DENERG/ DENER
     ./DFP   / X(LMV),NVAR
     ./ERG   / ENERGY,G(LMV),GNORM,CNORM
     ./FLAG3 / KRESET,MPRINT,T2
      COMMON
     ./GRDORG/ IGRST(LMGRD),ISTATE,JSTATE
     ./GUGA2 / LCI1,LCI2,LCI3,LCI4
     ./INOPT2/ IN2(300)
     ./LIMITS/ LM2,LM3,LM4,LM6,LM7,LM8,LM9
     ./LMSCF / LS1,LS2,LS3,LS4,LS5,LS6,LS7,LS8,LS9
     ./NBFILE/ NBF(20)
     ./PARM1 / A(LMV),NABC(LM1,4),NATOMS
     ./PARM3 / LOC(LMV),NVAR3
     ./QMMM1 / COORDM(3,LM1M),CHARGM(LM1M)
     ./SKIPA / ISKPA
      DIMENSION ARRAY(LM5)
      DIMENSION DELTA(3,2)
      DIMENSION IEL(3),ISYM(3,LM1)
C     PREDEFINED DISPLACEMENTS.
      DATA DELTA/1.0D-05,3.49066D-05,8.72665D-05,3*1.0D-05/
C *** FILE NUMBERS.
      NB6    = NBF(6)
      NB7    = NBF(7)
C *** INPUT OPTIONS.
      IGEOM  = IN2(4)
      MMINP  = IN2(12)
      NSAV7  = IN2(14)
      NSAV13 = IN2(17)
      NSAV15 = IN2(18)
      INAC   = IN2(31)
      MPRINT = IN2(41)
      NUMATM = IN2(120)
      MULTCI = IN2(142)
      ICROSS = IN2(160)
      LFAC   = IN2(201)
C *** INITIALIZATION.
      NUMALL = NUMAT+NUMATM
      CNORM  = ZERO
      GNORM  = ZERO
      CG(1:3,1:NUMALL) = ZERO
C *** SET CONTROL OPTIONS.
      ICALL1 = ICALL/10
      ICALL2 = ICALL-10*ICALL1
      ICALL3 = 0
      ICALL4 = 0
      KRESET = 0
C *** FOR NON-ADIABATIC COUPLING CALCULATION BETWEEN STATES OF
C     DIFFERENT MULTIPLICITY, THE RESULT IS 0 BY DEFINITION.
      IF(ICROSS.GT.10 .AND. MULTCI.EQ.-1) THEN
C        OTHER RELEVANT VARIABLES ARE ALREADY ZEROED ABOVE
         G(1:NVAR) = ZERO
         RETURN
      ENDIF
C *** SET INITIAL TIME AND PRINT OPTION.
      IF((ICALL1.EQ.0 .AND. MPRINT.GE.0) .OR. MPRINT.GE.5) THEN
         CALL CPUSEC(T1)
      ELSE
         MPRINT = -1
      ENDIF
C     IF(MPRINT.GE.5) WRITE(NB6,900) ISKPA,ICALL,ICALL1,ICALL2
C
C *** CALCULATE ENERGY.
C     CALCULATE CARTESIAN GRADIENT (IN ANALYTIC OR FAST MODE ONLY).
C     ICALL = (00,01,10,11,20,21,22,30,31,32,40)
      CALL SCFCAL (ARRAY,LM5,ICALL)
      IF(ICALL.EQ.-1) GOTO 300
      ENERGY = DENER
C
C *** CALCULATE SECOND TERM (CI BASIS FUNCTION DERIVATIVES) OF
C     NON-ADIABATIC COUPLING.
c        write(*,'(1x,"LS1  =",I10)') LS1
c        write(*,'(1x,"LS2  =",I10)') LS2
c        write(*,'(1x,"LS6  =",I10)') LS6
c        write(*,'(1x,"LS7  =",I10)') LS7
c        write(*,'(1x,"LS9  =",I10)') LS9
c        write(*,'(1x,"LCI1 =",I10)') LCI1
c        write(*,'(1x,"LM5  =",I10)') LM5
      IF(ABS(IN2(77)).LE.5.AND.MOD(ICROSS,10).GE.6) THEN
c        write(*,*)'calling nacint...'
c        write(*,'(1x,"LS1  =",I10)') LS1
c        write(*,'(1x,"LS2  =",I10)') LS2
c        write(*,'(1x,"LS6  =",I10)') LS6
c        write(*,'(1x,"LS7  =",I10)') LS7
c        write(*,'(1x,"LS9  =",I10)') LS9
c        write(*,'(1x,"LCI1 =",I10)') LCI1
c        write(*,'(1x,"LM5  =",I10)') LM5
         CALL NACINT (ARRAY(LS1),ARRAY(LS2),ARRAY(LS6),ARRAY(LS7),
     1                ARRAY(LS9),ARRAY(LCI1),ARRAY(1),CG,CG,
     2                LM2,LM3,LM4,LM5,LM6,ICALL,SCFCAL)
c        write(*,*)'back from nacint.'
      ENDIF
C
C *** CHECK FOR NUMERICAL GRADIENT CALCULATION.
      IF(ICALL2.EQ.0) GO TO 200
      IF(ISKPA.EQ.1) THEN
         CALL DENSAV (-1,ARRAY,LM5,0)
         IF(ICALL1.EQ.0 .OR. ICALL1.EQ.2) GO TO 100
         IF(ICALL1.EQ.1 .OR. ICALL1.EQ.3) GO TO 120
      ENDIF
C
C *** CARTESIAN GRADIENT AVAILABLE (IN ANALYTIC OR FAST MODE).
C     COMPUTE CARTESIAN GRADIENT NORM.
      CNORM  = SQRT(DDOT(3*NUMAT,CG,1,CG,1))
      ICALL3 = 1
      IF(ICALL1.EQ.1 .OR. ICALL1.EQ.3) GO TO 200
C     EVALUATE INTERNAL OR CARTESIAN GRADIENT FOR GEOMETRY OPTIMIZATION.
C     ICALL = (01,21,22,51,52) AND ISKPA = (0,-1,-2,-3).
      CALL GEOGRD (CG,G,NUMAT,NVAR)
      GNORM  = SQRT(DDOT(NVAR,G,1,G,1))
      ICALL4 = 1
      GO TO 200
C
C *** FULLY NUMERICAL GRADIENT FOR GEOMETRY OPTIMIZATION.
C     EVALUATED IN INTERNAL OR CARTESIAN COORDINATES.
C     ICALL = (01,21,22) AND ISKPA = 1.
  100 CONTINUE
      KRESET = 1
      DO 110 I=1,NVAR
      K      = LOC(I)
      L      = K-3*((K-1)/3)
      DEL    = DELTA(L,IGEOM+1)*LFAC
      A(K)   = A(K)+DEL
      CALL SYMTRY (-1)
      CALL GMETRY (-1)
C     IF(ICALL2.EQ.1) CALL DENSAV (-1,ARRAY,LM5,1)
      CALL SCFCAL (ARRAY,LM5,ICALL)
      IF(ICALL.EQ.-1) GOTO 300
      AA     = DENER
      A(K)   = A(K)-DEL*TWO
      CALL SYMTRY (-1)
      CALL GMETRY (-1)
      IF(ICALL2.EQ.1) CALL DENEXT (-1,ARRAY,LM5)
      CALL SCFCAL (ARRAY,LM5,ICALL)
      IF(ICALL.EQ.-1) GOTO 300
      A(K)   = A(K)+DEL
      G(I)   = (AA-DENER)*PT5/DEL
      IF(IGEOM.EQ.1) CG(L,(K+2)/3) = G(I)
  110 CONTINUE
      GNORM  = SQRT(DDOT(NVAR,G,1,G,1))
      IF(IGEOM.EQ.1 .AND. NVAR.EQ.3*NUMAT) CNORM = GNORM
      ICALL4 = 1
      KRESET = 0
      GO TO 200
C
C *** FULLY NUMERICAL CARTESIAN GRADIENT FOR FORCE CONSTANTS.
C     ICALL = (31,32) AND ISKPA = 1.
  120 CONTINUE
      DEL    = DELTA(1,2)*LFAC
      KRESET = 1
      CALL ASSYM (NUMAT,AMS,COORD,ISUB,MSYM,IEL,ISYM,MPRINT)
      DO 180 I=1,NUMAT
C     CHECK SYMMETRY FOR ATOM I.
      IF(MSYM.GT.0) THEN
         DO 140 M=1,MSYM
         MI  = ISYM(M,I)
         IF(MI.GE.I) GO TO 140
         MEL = IEL(M)
         DO 130 J=1,3
         CG(J,I) = CG(J,MI)*IELSYM(J,MEL)
  130    CONTINUE
         GO TO 180
  140    CONTINUE
      ENDIF
C     CALCULATE NEW GRADIENT.
      DO 160 J=1,3
      CG(J,I) = ZERO
      IF(MSYM.GT.0) THEN
         DO 150 M=1,MSYM
         IF(ISYM(M,I).NE.I) GO TO 150
         MEL = IEL(M)
         IF(IELSYM(J,MEL).EQ.-1) GO TO 160
  150    CONTINUE
      ENDIF
      IF(ICG(J,I).EQ.-1) GO TO 160
      COORD(J,I) = COORD(J,I)+DEL
C     IF(ICALL2.EQ.1) CALL DENSAV (-1,ARRAY,LM5,1)
      CALL SCFCAL (ARRAY,LM5,ICALL)
      IF(ICALL.EQ.-1) GOTO 300
      AA     = DENER
      COORD(J,I) = COORD(J,I)-DEL*TWO
      IF(ICALL2.EQ.1) CALL DENEXT (-1,ARRAY,LM5)
      CALL SCFCAL (ARRAY,LM5,ICALL)
      IF(ICALL.EQ.-1) GOTO 300
      COORD(J,I) = COORD(J,I)+DEL
      CG(J,I)= (AA-DENER)*PT5/DEL
  160 CONTINUE
  180 CONTINUE
      CNORM  = SQRT(DDOT(3*NUMAT,CG,1,CG,1))
      ICALL3 = 1
      KRESET = 0
C
C *** SAVE CURRENT RESULTS ON FILE.
C     USEFUL AS AN INTERFACE TO OTHER PROGRAMS AND FOR DEBUGGING.
  200 CONTINUE
      IF((NSAV13.EQ.2 .OR. NSAV15.GT.0).AND.ICROSS.EQ.0) THEN
         CALL SCFSAV (NSAV13,NSAV15,ICALL1,ICALL3,ICALL4)
      ENDIF
C     GENERATE INPUT FILE CORRESPONDING TO CURRENT GEOMETRY.
      IF(NSAV7.EQ.9) CALL GEOSAV (NATOMS,5,NB7)
C
C *** POSTPROCESSING FOR QM/MM TREATMENT.
C     CNORMT: CARTESIAN GRADIENT NORM FOR ALL ATOMS (QM+MM).
      IF(MMINP.GT.0 .AND. NUMATM.GT.0) THEN
         CNORMT = CNORM
         IF(ICALL2.GT.0) THEN
            IF(ISKPA.EQ.1) THEN
               WRITE(NB6,800)
            ELSE
               CNORMT = SQRT(DDOT(3*NUMALL,CG,1,CG,1))
            ENDIF
         ENDIF
      ENDIF
C
C *** PRINTING SECTION.
C     CURRENT GRADIENT NORM.
C     CHECK FOR IN2(41) BECAUSE MPRINT MAY HAVE BEEN RESET.
      IF(ICALL1.GT.0 .AND. ICALL2.GT.0 .AND. IN2(41).EQ.1) THEN
         WRITE(NB6,400)
         IF(GNORM.GT.ZERO) WRITE(NB6,410) GNORM
         IF(CNORM.GT.ZERO) WRITE(NB6,420) CNORM
      ENDIF
      IF(MPRINT.LT.0) RETURN
C     TIME FOR ENERGY EVALUATION (T2 FROM SCFCAL).
      IF(ICALL2.LE.1) THEN
         TM  = T2-T1
         WRITE(NB6,500) TM
         IF(ICALL2.EQ.0) RETURN
      ENDIF
C     TIME FOR GRADIENT EVALUATION (T2 FROM SCFCAL).
      IF(ICALL2.GT.0) THEN
         CALL CPUSEC (T3)
         TM  = T3-T2
         WRITE(NB6,510) TM
      ENDIF
C     GRADIENT IN CARTESIAN COORDINATES.
      IF(CNORM.GT.ZERO) THEN
         WRITE(NB6,520)
         DO 210 I=1,NUMAT
         WRITE(NB6,530) I,NAT(I),(COORD(J,I),J=1,3),(CG(J,I),J=1,3)
  210    CONTINUE
         WRITE(NB6,540) CNORM
C        CONTRIBUTIONS FOR EXTERNAL POINT CHARGES.
         IF(MMINP.GT.0) THEN
            IF(NUMATM.LE.100 .OR. MPRINT.GE.5) THEN
               WRITE(NB6,550)
               DO 220 I=1,NUMATM
               K = NUMAT+I
               WRITE(NB6,530) K,I,(COORDM(J,I),J=1,3),(CG(J,K),J=1,3)
  220          CONTINUE
            ENDIF
            WRITE(NB6,560) CNORMT
         ENDIF
      ENDIF
C     GRADIENT IN INTERNAL COORDINATES.
      IF(ICALL1.LE.2) THEN
         WRITE(NB6,570)
         DO 230 I=1,NVAR
         K   = LOC(I)
         AA  = A(K)
         K   = (LOC(I)+2)/3
         L   = LOC(I)-3*(K-1)
         IF(IGEOM.EQ.0 .AND. L.GT.1) AA=AA*AFACT
         WRITE(NB6,580) I,K,L,AA,G(I)
  230    CONTINUE
         WRITE(NB6,590) GNORM
      ENDIF
      RETURN
C
C *** SCF CONVERGENCE/MO MAPPING ERROR
C     SAVE ERROR CODE ON FILE FOR EXTERNAL PROGRAMS
  300 CONTINUE
      IF (NSAV15.GT.0) CALL ERRSAV(NSAV15, ICALL)
      RETURN
C
  400 FORMAT (   1X)
  410 FORMAT (   1X,'CURRENT GRADIENT NORM          ',5X,F20.5)
  420 FORMAT (   1X,'CURRENT CARTESIAN GRADIENT NORM',5X,F20.5)
  500 FORMAT (///5X,'TIME FOR ENERGY EVALUATION  ',F10.3,' SECONDS')
  510 FORMAT (   5X,'TIME FOR GRADIENT EVALUATION',F10.3,' SECONDS')
  520 FORMAT (///26X,'COORDINATES (ANGSTROM)',
     1          15X,'GRADIENTS (KCAL/(MOL*ANGSTROM))',
     2        // 8X,'I   NI',10X,'X',11X,'Y',11X,'Z',16X,'X',11X,'Y',
     3          11X,'Z'/)
  530 FORMAT (   4X,2I5,3X,3F12.5,5X,3F12.5)
  540 FORMAT (// 5X,'CARTESIAN GRADIENT NORM',5X,F20.5)
  550 FORMAT (///5X,'GRADIENT CONTRIBUTIONS TO EXTERNAL POINT CHARGES',
     1        // 26X,'COORDINATES (ANGSTROM)',
     2          15X,'GRADIENTS (KCAL/(MOL*ANGSTROM))',
     3        // 8X,'K    I',10X,'X',11X,'Y',11X,'Z',16X,'X',11X,'Y',
     4          11X,'Z'/)
  560 FORMAT (// 5X,'CARTESIAN QM+MM GRADIENT NORM',5X,F14.5)
  570 FORMAT (///5X,'GRADIENTS FOR GEOMETRY OPTIMIZATION',
     1        // 8X,'I   LOCATION',13X,'VARIABLE    GRADIENT'/)
  580 FORMAT (   4X,3I5,10X,2F12.5)
  590 FORMAT (// 5X,'GRADIENT NORM',15X,F20.5)
  800 FORMAT (// 5X,'WARNING. THE GRADIENT ON MM ATOMS IS NOT COMPUTED',
     1           1X,'WHEN USING A FULLY NUMERICAL APPROACH.',
     2        /  5X,'THE GRADIENT ON MM ATOMS IS PROVIDED WHEN USING ',
     3              'ANALYTICAL OR SEMI-ANALYTICAL METHODS.')
C 900 FORMAT (/  5X,'DEBUG PRINT - SCF: ISKPA,ICALL,ICALL1,ICALL2',4I5)
      END
