      FUNCTION DIGIT(STRING,ISTART)
C     *
C     FORTRAN FUNCTION TO CONVERT NUMERIC FIELD TO DOUBLE PRECISION
C     NUMBER.  THE STRING IS ASSUMED TO BE CLEAN (NO INVALID DIGIT
C     OR CHARACTER COMBINATIONS FROM ISTART TO THE FIRST NONSPACE,
C     NONDIGIT, NONSIGN, AND NONDECIMAL POINT CHARACTER).
C     ADAPTED FROM MOPAC(6.0) WRITTEN BY J.J.P.STEWART.
C     *
      CHARACTER STRING*(*)
      DOUBLE PRECISION C1,C2,DECIML,DIGIT
      LOGICAL SIGN
C     DEFINE ASCII VALUES OF NUMERIC FIELD CHARACTERS
      I0     = ICHAR('0')
      I9     = ICHAR('9')
      INEG   = ICHAR('-')
      IPOS   = ICHAR('+')
      IDOT   = ICHAR('.')
      ISPC   = ICHAR(' ')
C     INITIALIZATION
      C1     = 0.0D0
      C2     = 0.0D0
      SIGN   = .TRUE.
      L      = LEN(STRING)
C     DETERMINE THE CONTRIBUTION TO THE NUMBER GREATER THAN ONE
      IDIG   = 0
      DO 10 I=ISTART,L
         N=ICHAR(STRING(I:I))
         IF(N.GE.I0 .AND. N.LE.I9) THEN
            IDIG=IDIG+1
            C1=C1*10.0D0+N-I0
         ELSEIF(N.EQ.INEG .OR. N.EQ.IPOS .OR. N.EQ.ISPC) THEN
            IF(N.EQ.INEG) SIGN=.FALSE.
         ELSEIF(N.EQ.IDOT)THEN
            GO TO 20
         ELSE
            GO TO 40
         ENDIF
   10 CONTINUE
C     DETERMINE THE CONTRIBUTION TO THE NUMBER LESS THAN THAN ONE
   20 DECIML = 1.0D0
      DO 30 J=I+1,L
         N=ICHAR(STRING(J:J))
         IF(N.GE.I0 .AND. N.LE.I9) THEN
            DECIML=DECIML*0.1D0
            C2=C2+(N-I0)*DECIML
         ELSEIF(N.NE.ISPC) THEN
            GO TO 40
         ENDIF
   30 CONTINUE
C     PUT THE PIECES TOGETHER
   40 DIGIT  = C1+C2
      IF(.NOT.SIGN) DIGIT=-DIGIT
      RETURN
      END
