      SUBROUTINE GEOSAV (LMA,MODE,NB7)
C     *
C     WRITE A NEW INPUT FILE (NB7) FOR MODE=1-8.
C     INPUT SECTIONS COVERED: 1, 2, 2.1 - 2.4
C     INPUT SECTIONS COVERED: 3.1, 3.2, 3.3, 3.8, 3.9., 3.14.
C     INPUT FROM OTHER SECTIONS MUST BE ADDED MANUALLY.
C     *
      USE LIMIT, ONLY: LM1, LMV, LMS, LMX, LMF, LMM, LMACT, LMREF
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     *
C     THIS ROUTINE MAY BE CALLED FOR THE FOLLOWING PURPOSES.
C     -  CONVERTING INPUT FILES FROM ONE TYPE TO ANOTHER TYPE.
C     -  SAVING THE OPTIMIZED GEOMETRY FOR SUBSEQUENT JOBS.
C     *
C     CONVENTIONS FOR THE NEW INPUT FILE GENERATED.
C     MODE=1. STANDARD INPUT, STANDARD FORMAT (IFORM=0).
C     MODE=2. STANDARD INPUT, FREE FORMAT     (IFORM=1).
C     MODE=3. KEYWORD  INPUT, STANDARD FORMAT (IFORM=0).
C     MODE=4. KEYWORD  INPUT, FREE FORMAT     (IFORM=1).
C     MODE=5. MOPAC    INPUT, MOPAC FORMAT.
C     MODE=6. ANALOGOUS TO MODE=2 - HOWEVER, REGARDLESS OF IGEOM, WRITE
C             CARTESIAN COORDINATES AND MARK THEM FOR OPTIMIZATION.
C     MODE=7. ANALOGOUS TO MODE=4 - HOWEVER, REGARDLESS OF IGEOM, WRITE
C             CARTESIAN COORDINATES AND MARK THEM FOR OPTIMIZATION.
C     MODE=8. ANALOGOUS TO MODE=5 - HOWEVER, REGARDLESS OF IGEOM, WRITE
C             CARTESIAN COORDINATES AND MARK THEM FOR OPTIMIZATION.
C     *
C     NOTE SPECIAL CASE.
C     MODE=1  IS TREATED AS MODE=2 FOR NATOMS.GT.100.
C     *
      PARAMETER (IZ=0)
      PARAMETER (IONE=1)
      PARAMETER (I99=99)
      CHARACTER*800 KEYWRD,ALLKEY
      CHARACTER*80  KTITLE,KOMENT
      CHARACTER*30  KOMEXP
      CHARACTER*2   ELEMNT
      LOGICAL FRGOUT,KEYOUT,MOPOUT
      COMMON
     ./ATOMC / COORD(3,LM1)
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./CIMOSY/ JMOCI(LMX),MOCISY(LMX)
     ./CIREFS/ ICIREF(LMACT,LMREF),JCIREF(LMACT,LMREF)
     ./CONSTF/ A0,AFACT,EV,EVCAL,PI,W1,W2,BIGEXP
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./ELEMTS/ ELEMNT(107)
     ./FLAG1 / KTITLE,KOMENT
     ./FRGMT1/ NFRAGS(LM1),NCHRGS(LM1)
     ./INOPT1/ IN1(300)
     ./INOPT3/ XN3(50)
      COMMON
     ./KEYWRD/ KEYWRD
     ./MOPAC / IMOPAC
     ./PAR2  / MOL
     ./PAR21 / ID1(7,LMF),LITEXP(LMF)
     ./PAR22 / XEXP(LMF),ERREXP(LMF),WEXP(LMF)
     ./PAR23 / KOMEXP(LMF)
     ./PAR24 / NREF1(LMM),NREF2(LMM)
     ./PARM1 / A(3,LM1),NC(LM1),NB(LM1),NA(LM1),NN(LM1),NATOMS
     ./PARM2 / NSYM,LPAR(LMS),LNUM(LMS),LDEP(LMS)
     ./PARM3 / LOC(LMV),NVAR
C     AUTOMATIC SCRATCH ARRAY.
      DIMENSION IARRAY(3,LMA)
      DIMENSION IN1GUG(40)
      IF(MODE.LT.1 .OR. MODE.GT.8) RETURN
C *** INPUT OPTIONS.
      IGEOM  = IN1(4)
      IFORM  = IN1(5)
      KSYM   = IN1(75)
C *** INITIALIZATION.
      KEYOUT = MODE.EQ.3 .OR. MODE.EQ.4 .OR. MODE.EQ.7
      MOPOUT = MODE.EQ.5 .OR. MODE.EQ.8
C *** DETERMINE OUTPUT FORMAT.
      IF(MODE.EQ.2 .OR. MODE.GT.3 .OR. NATOMS.GT.100) THEN
         NFORM = 2
      ELSE
         NFORM = 0
      ENDIF
C *** DETERMINE KEYWORD STRING FOR KEYWORD OR MOPAC INPUT.
      IF(IMOPAC.EQ.0) THEN
         IF(KEYOUT) THEN
            IDUMMY =-1
            KEYMOD = 2
            CALL KEYDEF (KEYWRD,IDUMMY,KEYMOD)
         ELSE IF(MOPOUT) THEN
            IDUMMY = 1
            KEYMOD = 2
            CALL KEYDEF (KEYWRD,IDUMMY,KEYMOD)
         ENDIF
      ENDIF
C *** DETERMINE POSITION OF LAST NON-BLANK CHARACTER IN KEYWRD.
      IF(KEYOUT .OR. MOPOUT) THEN
         DO  5 I=800,2,-1
         IF(KEYWRD(I:I).NE.' ') GO TO 6
    5    CONTINUE
    6    KEYLEN = I
         ALLKEY = KEYWRD
      ENDIF
C *** MODIFY KEYWORD STRING FOR KEYWORD INPUT (IF NEEDED).
C     SET SPECIAL VALUES FOR IFORM, IGEOM, AND KSYM.
      IF(MODE.EQ.3) THEN
         CALL KEYADD (ALLKEY,KEYLEN,'IFORM=0',5)
         J = INDEX(ALLKEY(:KEYLEN),'IFORM')
         IF(J.GT.0) ALLKEY(J+6:J+6) = '0'
      ENDIF
      IF(MODE.EQ.4 .OR. MODE.EQ.7) THEN
         CALL KEYADD (ALLKEY,KEYLEN,'IFORM=1',5)
         J = INDEX(ALLKEY(:KEYLEN),'IFORM')
         IF(J.GT.0) ALLKEY(J+6:J+6) = '2'
      ENDIF
      IF(MODE.EQ.7 .OR. MODE.EQ.8) THEN
         CALL KEYADD (ALLKEY,KEYLEN,'IGEOM=1',5)
         J = INDEX(ALLKEY(:KEYLEN),'IGEOM')
         IF(J.GT.0) ALLKEY(J+6:J+6) = '1'
         CALL KEYADD (ALLKEY,KEYLEN,'KSYM=0',3)
         J = INDEX(ALLKEY(:KEYLEN),'KSYM')
         IF(J.GT.0) ALLKEY(J+5:J+5) = '0'
      ENDIF
C *** DETERMINE POSITION OF OPTIMIZED VARIABLES.
      DO 10 I=1,NATOMS
      IARRAY(1,I) = 0
      IARRAY(2,I) = 0
      IARRAY(3,I) = 0
   10 CONTINUE
      DO 20 I=1,NVAR
      J      = (LOC(I)+2)/3
      K      = LOC(I)-(J-1)*3
      IARRAY(K,J) = 1
   20 CONTINUE
C *** WRITE KEYWORD AND TITLE LINES (MODE=1-8).
C     STANDARD INPUT.
      IF(MODE.LT.3 .OR. MODE.EQ.6) THEN
         IN1(5) = NFORM
         IF(MODE.EQ.6) IN1(5)  = NFORM
         IF(MODE.EQ.6) IN1(75) = 0
C        GENERAL OPTIONS.
         WRITE(NB7,500) (IN1(I),I=1,31)
         WRITE(NB7,505) (IN1(I),I=32,64)
C        SPECIAL OPTIONS FOR OPTIMIZATIONS ETC (2.1).
         IF(IN1(60).GT.0) THEN
            WRITE(NB7,510) (IN1(I),I=191,209)
         ENDIF
C        OPTIONS FOR EIGENVECTOR FOLLOWING (2.2).
         IF(IN1(8).GT.0) THEN
            WRITE(NB7,511) (IN1(I),I=80,89),(XN3(J),J=1,6)
         ENDIF
C        OPTIONS FOR ANALYTIC DERIVATIVES (2.3).
         IPSABS = ABS(IN1(29))
         IF(IPSABS.GE.2 .OR. IN1(13).GT.10 .OR. IN1(13).LT.-1) THEN
            WRITE(NB7,512) (IN1(I),I=90,114),(IN1(I),I=127,130)
            WRITE(NB7,513) (XN3(I),I=8,15)
         ENDIF
C        OPTIONS FOR CG-DMS AND CUTOFFS (2.4).
         IF(IN1(55).NE.0 .OR. IN1(56).NE.0 .OR. IN1(63).NE.0) THEN
            WRITE(NB7,514) (IN1(I),I=171,186)
            IF(IN1(63).GT.1) WRITE(NB7,513) (XN3(I),I=20,24)
         ENDIF
C        OPTIONS FROM TITLE LINE (3.1).
         IF(KTITLE(:48).NE.' ') THEN
            WRITE(NB7,520) (IN1(I),I=65,79),KTITLE(:48)
         ELSE
            WRITE(NB7,520) (IN1(I),I=65,79),KOMENT(:48)
         ENDIF
         IN1(5) = IFORM
         IF(MODE.EQ.6) IN1(5)  = IFORM
         IF(MODE.EQ.6) IN1(75) = KSYM
C     KEYWORD INPUT.
      ELSE IF(KEYOUT) THEN
         I = INDEX(ALLKEY,'MOVO=2')
         IF(I.GT.0)  ALLKEY(I+5:I+5) = '1'
         I = INDEX(ALLKEY,'MCIREF=2')
         IF(I.GT.0)  ALLKEY(I+7:I+7) = '1'
         NLINES = (KEYLEN-1)/80 + 1
         DO 25 I=1,NLINES
         ICOL1  = (I-1)*80+1
         ICOL2  = MIN(KEYLEN,I*80)
         WRITE(NB7,525) ALLKEY(ICOL1:ICOL2)
   25    CONTINUE
         WRITE(NB7,525) KTITLE
         WRITE(NB7,525) KOMENT
C     MOPAC INPUT.
      ELSE IF(MOPOUT) THEN
         I = INDEX(ALLKEY,'MOVO=2')
         IF(I.GT.0)  ALLKEY(I+5:I+5) = '1'
         I = INDEX(ALLKEY,'MCIREF=2')
         IF(I.GT.0)  ALLKEY(I+7:I+7) = '1'
         WRITE(NB7,525) ALLKEY(1:80)
         IF(INDEX(ALLKEY(1:80),' +').NE.0) THEN
            WRITE(NB7,525) ALLKEY(81:160)
            IF(INDEX(ALLKEY(81:160),' +').NE.0) THEN
               WRITE(NB7,525) ALLKEY(161:240)
            ENDIF
            WRITE(NB7,525) KTITLE
            WRITE(NB7,525) KOMENT
         ELSE IF(INDEX(ALLKEY(1:80),' &').NE.0) THEN
            WRITE(NB7,525) ALLKEY(81:160)
            IF(INDEX(ALLKEY(81:160),' &').NE.0) THEN
               WRITE(NB7,525) ALLKEY(161:240)
            ELSE
               WRITE(NB7,525) KTITLE
            ENDIF
         ELSE
            WRITE(NB7,525) KTITLE
            WRITE(NB7,525) KOMENT
         ENDIF
      ENDIF
C *** CHECK FORMAT FOR WRITING THE GEOMETRY.
      IF(MODE.EQ.6 .OR. MODE.EQ.7) GO TO 100
      IF(MODE.EQ.8) GO TO 120
      IF(NFORM.GT.0) GO TO 60
C *** WRITE THE GEOMETRY IN STANDARD FORMAT (MODE=1,3).
      IF(IGEOM.EQ.0) THEN
         DO 30 I=1,NATOMS
         W   = A(2,I)*AFACT
         X   = A(3,I)*AFACT
         I1  = IARRAY(1,I)
         I2  = IARRAY(2,I)
         I3  = IARRAY(3,I)
         WRITE(NB7,530) NN(I),A(1,I),I1,W,I2,X,I3,NA(I),NB(I),NC(I)
   30    CONTINUE
         WRITE(NB7,530) IZ,ZERO,IZ,ZERO,IZ,ZERO,IZ,IZ,IZ,IZ
      ELSE IF(IGEOM.EQ.1) THEN
         DO 40 I=1,NATOMS
         I1  = IARRAY(1,I)
         I2  = IARRAY(2,I)
         I3  = IARRAY(3,I)
         WRITE(NB7,530) NN(I),A(1,I),I1,A(2,I),I2,A(3,I),I3
   40    CONTINUE
         WRITE(NB7,530) IZ,ZERO,IZ,ZERO,IZ,ZERO,IZ
      ENDIF
C     WRITE THE SYMMETRY CONDITIONS IN STANDARD FORMAT.
      IF(KSYM.NE.0) THEN
         DO 50 I=1,NSYM
         WRITE(NB7,540) LPAR(I),LNUM(I),LDEP(I)
   50    CONTINUE
         WRITE(NB7,540) IZ,IZ,IZ
      ENDIF
      GO TO 200
C *** WRITE THE GEOMETRY SUITABLE FOR INPUT IN FREE FORMAT (MODE=2,4,5).
   60 CONTINUE
      IF(IGEOM.EQ.0) THEN
         DO 70 I=1,NATOMS
         W   = A(2,I)*AFACT
         X   = A(3,I)*AFACT
         I1  = IARRAY(1,I)
         I2  = IARRAY(2,I)
         I3  = IARRAY(3,I)
         IF(MODE.EQ.2 .OR. MODE.EQ.4) THEN
            WRITE(NB7,550) NN(I),A(1,I),I1,W,I2,X,I3,NA(I),NB(I),NC(I)
         ELSE
            WRITE(NB7,555) ELEMNT(NN(I)),A(1,I),I1,W,I2,X,I3,
     1                     NA(I),NB(I),NC(I)
         ENDIF
   70    CONTINUE
         IF(MODE.EQ.2 .OR. MODE.EQ.4) THEN
            WRITE(NB7,550) IZ,ZERO,IZ,ZERO,IZ,ZERO,IZ,IZ,IZ,IZ
         ELSE
            WRITE(NB7,570)
         ENDIF
      ELSE IF(IGEOM.EQ.1) THEN
         DO 80 I=1,NATOMS
         I1  = IARRAY(1,I)
         I2  = IARRAY(2,I)
         I3  = IARRAY(3,I)
         IF(MODE.EQ.2 .OR. MODE.EQ.4) THEN
            WRITE(NB7,550) NN(I),A(1,I),I1,A(2,I),I2,A(3,I),I3
         ELSE
            WRITE(NB7,555) ELEMNT(NN(I)),A(1,I),I1,A(2,I),I2,A(3,I),I3
         ENDIF
   80    CONTINUE
         IF(MODE.EQ.2 .OR. MODE.EQ.4) THEN
            WRITE(NB7,550) IZ,ZERO,IZ,ZERO,IZ,ZERO,IZ
         ELSE
            WRITE(NB7,570)
         ENDIF
      ENDIF
C     WRITE THE SYMMETRY CONDITIONS SUITABLE FOR INPUT IN FREE FORMAT.
      IF(KSYM.NE.0) THEN
         DO 90 I=1,NSYM
         WRITE(NB7,560) LPAR(I),LNUM(I),LDEP(I)
   90    CONTINUE
         WRITE(NB7,560) IZ,IZ,IZ
      ENDIF
      GO TO 200
C *** WRITE CARTESIAN COORDINATES SUITABLE FOR INPUT IN FREE FORMAT.
C     STANDARD CONVENTIONS (MODE=6,7).
  100 CONTINUE
      DO 110 I=1,NUMAT
      WRITE(NB7,550) NAT(I),COORD(1,I),IONE,COORD(2,I),IONE,
     1               COORD(3,I),IONE
  110 CONTINUE
      WRITE(NB7,550) IZ,ZERO,IZ,ZERO,IZ,ZERO,IZ
      GO TO 200
C *** WRITE CARTESIAN COORDINATES SUITABLE FOR INPUT IN FREE FORMAT.
C     MOPAC CONVENTIONS (MODE=8).
  120 CONTINUE
      DO 130 I=1,NUMAT
      WRITE(NB7,555) ELEMNT(NAT(I)),COORD(1,I),IONE,
     1               COORD(2,I),IONE,COORD(3,I),IONE
  130 CONTINUE
      WRITE(NB7,570)
C *** WRITE FRAGMENT DATA.
  200 CONTINUE
      INGEOM = IN1(54)
      LINFRG = IN1(58)
      INPFRG = IN1(59)
      KTRIAL = IN1(67)
      FRGOUT = INPFRG.GE.0 .AND. (LINFRG.GT.0 .OR. KTRIAL/10.EQ.3)
      FRGOUT = FRGOUT .OR. INGEOM.EQ.1
      IF(FRGOUT) THEN
         WRITE(NB7,575) (NFRAGS(I),I=1,NUMAT)
         DO 210 I=1,NUMAT
         IF(NCHRGS(I).NE.0)  WRITE(NB7,575) I,NCHRGS(I)
  210    CONTINUE
         WRITE(NB7,575) IZ,IZ
      ENDIF
C *** WRITE GUGA-CI LINES.
      KCI = IN1(77)
      IF(ABS(KCI).EQ.5) THEN
         IN1GUG = IN1(131:170)
         IF(IN1(134).EQ.2) IN1GUG(4) = 1
         IF(IN1(137).EQ.2) IN1GUG(7) = 1
         ICI1   = IN1GUG(1)
         ICI2   = IN1GUG(2)
         MOVO   = IN1GUG(4)
         NCIREF = IN1GUG(6)
         MCIREF = IN1GUG(7)
         IF(.NOT.(KEYOUT .OR. MOPOUT)) THEN
            WRITE(NB7,580) IN1GUG
         ENDIF
         IF(MOVO.EQ.1 .OR. MOVO.EQ.3) THEN
            WRITE(NB7,580) JMOCI(1:ICI1+ICI2)
         END IF
         IF(MOVO.EQ.3) THEN
            WRITE(NB7,580) MOCISY(1:ICI1+ICI2)
         END IF
         IF(NCIREF.GT.0 .AND. MCIREF.EQ.1) THEN
            DO 220 I=1,NCIREF
            WRITE(NB7,580) JCIREF(1:ICI1+ICI2,I)
  220       CONTINUE
         ENDIF
      ENDIF
C *** WRITE REFERENCE PROPERTIES.
      INREFD = IN1(10)
      IF(INREFD.NE.0) THEN
         DO 230 NR=NREF1(MOL),NREF2(MOL)
         WRITE(NB7,590) ID1(:,NR),XEXP(NR),ERREXP(NR),
     1                  WEXP(NR),LITEXP(NR),KOMEXP(NR)(1:28)
  230    CONTINUE
         WRITE(NB7,590) IZ,IZ,IZ,IZ,IZ,IZ,IZ,ZERO,ZERO,ZERO,IZ
      ENDIF
C *** WRITE FINAL CARD (MODE=1-4,6,7).
      IF(.NOT.(KEYOUT .OR. MOPOUT)) WRITE(NB7,505) I99
      RETURN
  500 FORMAT(6I5,7I2,6I1,10I2,2I5)
  505 FORMAT(3I2,2I1,6I2,I4,5I2,I4,4I2,I4,10I2)
  510 FORMAT(2I4,8I2,I4,2I2,I4,3I2,2I4)
  511 FORMAT(10I2,6F10.5)
  512 FORMAT(4I5,5I2,I4,2I2,I4,I2,I4,5I2,I4,5I2,I4,2I2)
  513 FORMAT(8G10.5)
  514 FORMAT(16I5)
  520 FORMAT(6I2,I4,I2,2I1,5I2,1X,A)
  525 FORMAT(A)
  530 FORMAT(I2,8X,3(F10.5,2X,I2,6X),3I2)
  540 FORMAT(I2,I3,14X,I3)
  550 FORMAT(I4,3(F17.10,I2),3I5)
  555 FORMAT(A2,3(F17.10,I2),3I5)
  560 FORMAT(3I5)
  570 FORMAT(' ')
  575 FORMAT(10I5)
  580 FORMAT(20I4)
  590 FORMAT(I2,6I3,2F10.5,F5.1,I5,2X,A)
      END
