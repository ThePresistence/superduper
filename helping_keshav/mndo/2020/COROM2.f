      SUBROUTINE COROM2 (COORD,S,COR,LM2,LM4,MODE)
C     *
C     LOCAL CORE-ELECTRON ATTRACTIONS FOR ORTHOGONALIZATION CORRECTIONS.
C     THIS ROUTINE IS USED ONLY FOR THE GRADIENT IN OM2.
C     *
C     NOTATION. I=INPUT, O=OUTPUT.
C     COORD     CURRENT ATOMIC COORDINATES (I).
C     S         REFERENCE OVERLAP MATRIX (I).
C     COR       LOCAL CORE MATRIX (I,O).
C     LM2       ROW DIMENSION OF COR (I).
C     MODE      TYPE OF INTEGRAL CALCULATION (I).
C               = 0  COMPUTE ALL INTEGRALS.
C               = I  RECOMPUTE INTEGRALS INVOLVING ATOM I.
C     *
      USE LIMIT, ONLY: LM1, LMX, LMZ
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (SMALLS=1.0D-06)
      COMMON
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./CONSTF/ A0,AFACT,EV,EVCAL,PI,W1,W2,BIGEXP
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./INDEX / INDX(LMX)
     ./INOPT2/ IN2(300)
     ./NBFILE/ NBF(20)
     ./PARDER/ TORE(LMZ),EHEAT(LMZ),EISOL(LMZ)
     ./PAROPT/ USS(LMZ),UPP(LMZ),ZZ(LMZ*5)
     ./REP   / GSS(LMZ),REPDUM(LMZ*5)
      DIMENSION COORD(3,LM1)
      DIMENSION S(LM4)
      DIMENSION COR(LM2,LM2)
      DIMENSION RI(22)
C *** INPUT VARIABLES.
      ICUTS  = IN2(25)
      NPRINT = IN2(72)
C *** GENERAL INITIALIZATION.
      CUTS   = SMALLS
      IF(ICUTS.GT.0) CUTS=10.0D0**(-ICUTS)
      IF(MODE.LE.0) THEN
         NORBS  = NLAST(NUMAT)
         DO 11 J=1,NUMAT
         DO 10 I=1,NORBS
         COR(I,J) = ZERO
   10    CONTINUE
   11    CONTINUE
      ENDIF
C *** LOOP OVER ATOM PAIRS I-J FOR OFFDIAGONAL TWO-CENTER TERMS.
      DO 31 I=2,NUMAT
      NI     = NAT(I)
      IA     = NFIRST(I)
      IORBS  = NLAST(I)-IA+1
      ISHELL = I
      DO 30 J=1,I-1
      IF(MODE.GT.0 .AND. MODE.NE.I .AND. MODE.NE.J) GO TO 30
      NJ     = NAT(J)
      JA     = NFIRST(J)
      IF(ICUTS.GE.0) THEN
         ISS = INDX(IA)+JA
         IF(ABS(S(ISS)).LT.CUTS) GO TO 30
      ENDIF
      JORBS  = NLAST(J)-JA+1
      JSHELL = J
      R      = SQRT( (COORD(1,J)-COORD(1,I))**2
     1              +(COORD(2,J)-COORD(2,I))**2
     2              +(COORD(3,J)-COORD(3,I))**2 ) / A0
C     SEMIEMPIRICAL TWO-ELECTRON INTEGRAL (SS,SS).
      POI    = PT5*EV/GSS(NI)
      POJ    = PT5*EV/GSS(NJ)
      AEE    = (POI+POJ)**2
      SEMI   = EV/SQRT(R*R+AEE)
C *** LOCAL CORE INTEGRALS DEFINED IN TERMS OF THE
C     KLOPMAN-OHNO SCALED TWO-ELECTRON INTEGRALS.
C     CASE (SS,SS): USE THE SEMIEMPIRICAL INTEGRAL DIRECTLY.
      CORE11 = -SEMI*TORE(NJ)
      CORE12 = -SEMI*TORE(NI)
C     OTHER CASES: COMPUTE ANALYTICAL TWO-ELECTRON INTEGRALS.
C     OTHER CASES: COMPUTE KLOPMAN-OHNO FACTOR (FKO).
      IF(IORBS.GE.4 .OR. JORBS.GE.4) THEN
         CALL REPGAU (R,RI,ISHELL,JSHELL,NI,NJ,MODE)
         FKO = SEMI/RI(1)
      ENDIF
C     SEMIEMPIRICAL CORE-ELECTRON ATTRACTIONS.
      IF(IORBS.GE.4) THEN
         CORE31 = -RI(3)*FKO*TORE(NJ)
         CORE41 = -RI(4)*FKO*TORE(NJ)
      ENDIF
      IF(JORBS.GE.4) THEN
         CORE32 = -RI(11)*FKO*TORE(NI)
         CORE42 = -RI(12)*FKO*TORE(NI)
      ENDIF
C *** SAVE CORE INTEGRALS FOR USE IN BETORT.
C     COR(IS,J) = Hss(I-J) = Uss(I) + Vss,J
C     COR(IP,J) = Hpp(I-J) = Upp(I) + Vpp,J
C     COR(JS,I) = Hss(J-I) = Uss(J) + Vss,I
C     COR(JP,I) = Hpp(J-I) = Upp(J) + Vpp,I
      COR(IA,J) = USS(NI)+CORE11
      COR(JA,I) = USS(NJ)+CORE12
      IF(IORBS.GE.4) THEN
         TEMP = UPP(NI)+(CORE31+TWO*CORE41)/THREE
         COR(IA+1,J) = TEMP
         COR(IA+2,J) = TEMP
         COR(IA+3,J) = TEMP
      ENDIF
      IF(JORBS.GE.4) THEN
         TEMP = UPP(NJ)+(CORE32+TWO*CORE42)/THREE
         COR(JA+1,I) = TEMP
         COR(JA+2,I) = TEMP
         COR(JA+3,I) = TEMP
      ENDIF
   30 CONTINUE
   31 CONTINUE
C *** DEBUG PRINT FOR COR MATRIX.
      IF(NPRINT.GT.5) THEN
         NB6 = NBF(6)
         NORBS  = NLAST(NUMAT)
         DO 41 J=1,NUMAT
         DO 40 I=1,NORBS
         WRITE(NB6,500) I,J,COR(I,J)
   40    CONTINUE
   41    CONTINUE
         WRITE(NB6,510) NORBS,NUMAT
      ENDIF
      RETURN
  500 FORMAT(' COROM2: I,JATOM,COR(I,JATOM)',2I5,F15.10)
  510 FORMAT(' COROM2: NORBS,NUMAT',2I8)
      END
