      SUBROUTINE GRAPH (CA,CB,DA,DB,EA,EB,FA,FB,H,PA,PB,Q,LM2,LM3,LM4)
C     *
C     SAVE SCF DATA ON DIFFERENT OUTPUT FILES FOR POSTPROCESSING.
C     *
C     NB13     DATA FOR GRAPHICAL EVALUATIONS (MOPAC CONVENTIONS).
C     NB13     DATA FOR GRAPHICAL EVALUATIONS (MOLDEN CONVENTIONS).
C     NB16     DATA FOR EVALUATIONS BY SYBYL  (MOPAC CONVENTIONS).
C     NSAV13   SELECTS BETWEEN MOPAC (=1) AND MOLDEN (=2) OUTPUT.
C     *
C     THE COMPUTATIONAL STEPS IN THIS SUBROUTINE INCLUDE
C     - CALCULATION OF BOND INDICES AND VALENCIES (MOPAC CONVENTIONS),
C     - CALCULATION OF THE INVERSE SQUARE ROOT OF THE OVERLAP MATRIX,
C     - MO TRANSFORMATION FROM AN ORTHOGONAL TO A NONORTHOGONAL BASIS,
C     - FORMATION OF THE CORRESPONDING DENSITY MATRIX,
C     - MULLIKEN POPULATION ANALYSIS.
C     *
C     USE LIMIT, ONLY: LM1, LMX, LMZ
      USE LIMIT, ONLY: LM1, LMZ
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (NB91=91)
      LOGICAL UHF
      CHARACTER*2 ELEMNT
      COMMON
     ./ATOMC / COORD(3,LM1)
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./CONSTF/ A0,AFACT,EV,EVCAL,PI,W1,W2,BIGEXP
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./DNBND / III(LMZ),IIID(LMZ)
     ./DPARM1/ UDD(LMZ),ZD(LMZ),BETAD(LMZ)
     ./ELEMTS/ ELEMNT(107)
     ./HALFE / IOD,JOD
     ./INOPT2/ IN2(300)
      COMMON
     ./NBFILE/ NBF(20)
     ./OCCFL / IMOCC,NOCCA,NOCCB,MSUB,MOSUMA,MOSUMB,MOCCA(8),MOCCB(8)
C    ./OCCNM / OCCA(LMX),OCCB(LMX)
     ./ORBITS/ NUMB,NORBS,NMOS,NALPHA,NBETA
     ./PAROPT/ USS(LMZ),UPP(LMZ),ZS(LMZ),ZP(LMZ),BETAS(LMZ),BETAP(LMZ),
     .         ALP(LMZ)
     ./UHF   / UHF
      DIMENSION CA(LM2,LM3),DA(LM4),EA(LM2),FA(LM2,LM2)
      DIMENSION CB(LM2,LM3),DB(LM4),EB(LM2),FB(LM2,LM2)
      DIMENSION H(LM4),PA(LM4),PB(LM4),Q(LM2,5)
C     STO RADIAL NORMALIZATION FACTORS: 2**(n+1/2) / (2n!)**1/2
      DIMENSION STORNF(6)
      DATA STORNF/ 2.00000000000000D0   , 1.15470053837925D0,
     1             0.421637021355784D0  , 0.112687233963802D0,
     2             0.02375655483665995D0, 0.004135485379548760D0 /
C *** FILE NUMBERS.
      NB6    = NBF(6)
C *** INPUT OPTIONS.
      IOP    = IN2(2)
      NSAV13 = IN2(17)
      NSAV16 = IN2(19)
      IUHF   = IN2(70)
      NPRINT = IN2(72)
      INOUT  = IN2(212)
C *** SAVE ORIGINAL EIGENVECTORS AND OTHER SCF DATA.
      REWIND NB91
      IF(UHF) THEN
         WRITE(NB91) CA,EA,FA,H,PA,CB,EB,FB,PB
      ELSE
         WRITE(NB91) CA,EA,FA,H,PA
      ENDIF
C *** WRITE SYBYL FILE NB16 ACCORDING TO MOPAC CONVENTIONS.
      IF(NSAV16.GT.0) THEN
         NB16   = NBF(16)
         LMC    = (LM1*(LM1+1))/2
         IF(INOUT.GT.0) THEN
            MUL = 0
         ELSE
            MUL = 1
         ENDIF
         IF(UHF) THEN
            MBO = MUL
         ELSE
            MBO = 3
         ENDIF
         IF(NSAV16.EQ.1) CALL MPCSYB (EA,LM2,NB16,MUL)
         CALL MBONDS (PA,FA,CA,LM2,LM4,LMC,NB16,NSAV16,NPRINT,MBO)
      ENDIF
C *** NUMBER OF ELECTRONS (NELECS) AND ORBITALS (N).
      NELECS = NALPHA+NBETA
      N      = NORBS
C *** COMPUTE OVERLAP MATRIX IN PA(LM4) AND
C     ITS INVERSE SQUARE ROOT IN FA(LM2,LM2).
C     THESE MATRICES ARE USUALLY DENOTED BY S AND S**(-1/2).
      CALL SMHALF (CA,EA,FA,H,Q,PA,LM2,LM3,LM4,1,NPRINT)
C *** CHECK WHETHER S**(-1/2) IS CORRECT.
C     THE PRODUCT S**(-1/2)*S*S**(-1/2) MUST BE THE UNIT MATRIX.
C     IF(NPRINT.GT.5) THEN
C        CALL SQUARE(PA,CA,N,LM2,LM4)
C        CALL DGEMM('N','N',N,LM3,N,ONE,FA,LM2,CA,LM2,ZERO,H,LM2)
C        CALL DGEMM('N','N',N,LM3,N,ONE,H,LM2,FA,LM2,ZERO,CA,LM2)
C        WRITE(NB6,510)
C        CALL MATPRT (CA,N,N,LM2,LM2)
C     ENDIF
C *** RESTORE ORIGINAL EIGENVECTORS AND EIGENVALUES.
      REWIND NB91
      READ(NB91) CA,EA
C
C *** WRITE FILE NB13 ACCORDING TO MOPAC CONVENTIONS.
      IF(NSAV13.EQ.1) THEN
         NB13   = NBF(13)
         ZP(1)  = ZERO
         IF(IOP.GT.-10) THEN
            DO 10 I=1,NUMAT
            ZD(NAT(I)) = ZERO
   10       CONTINUE
         ENDIF
         WRITE(NB13) NUMAT,N,NELECS,((COORD(I,J),J=1,NUMAT),I=1,3)
         WRITE(NB13) (NLAST(I),NFIRST(I),I=1,NUMAT)
         WRITE(NB13) (ZS(NAT(I)),I=1,NUMAT),(ZP(NAT(I)),I=1,NUMAT),
     1               (ZD(NAT(I)),I=1,NUMAT),(NAT(I),I=1,NUMAT)
         WRITE(NB13) ((CA(J,I),J=1,N),I=1,N)
         IF(UHF) WRITE(NB13) ((CB(J,I),J=1,N),I=1,N)
         WRITE(NB13) ((FA(J,I),J=1,N),I=1,N)
      ENDIF
C
C *** WRITE FILE NB13 ACCORDING TO MOLDEN CONVENTIONS.
C     BEGIN OF MOLDEN SECTION (PART I)
      IF(NSAV13.EQ.2) THEN
        NB13   = NBF(13)
        ZP(1)  = ZERO
        SQPI   = ONE / SQRT(FOUR*PI)
        SQ3    = SQRT(THREE)
        SQ15   = SQRT(15.0D0)
C       ATOMIC NUMBERS AND COORDINATES.
        WRITE(NB13,'(A)') '[Atoms] Angs'
        DO I=1,NUMAT
        WRITE(NB13,'(A5,2I5,5X,3F20.10)')
     1     ELEMNT(NAT(I)), I, NAT(I), (COORD(J,I),J=1,3)
        END DO
C       ORBITAL EXPONENTS AND RELATED INFORMATION.
        WRITE(NB13,'(A)') '[STO]'
        DO I=1,NUMAT
        NI     = NAT(I)
        IORBS  = NLAST(I)-NFIRST(I)+1
        IIS    = III(NI)
        XS     = STORNF(IIS) * SQRT(ZS(NI)**(2*IIS+1)) * SQPI
        WRITE(NB13,'(5I5,5X,2F20.10)') I,0,0,0,IIS-1,ZS(NI),XS
        IF(IORBS.GE.4) THEN
           IIP = MAX(2,IIS)
           XP  = STORNF(IIP) * SQRT(ZP(NI)**(2*IIP+1)) * SQPI * SQ3
           WRITE(NB13,'(5I5,5X,2F20.10)') I,1,0,0,IIP-2,ZP(NI),XP
           WRITE(NB13,'(5I5,5X,2F20.10)') I,0,1,0,IIP-2,ZP(NI),XP
           WRITE(NB13,'(5I5,5X,2F20.10)') I,0,0,1,IIP-2,ZP(NI),XP
        ENDIF
        IF(IORBS.GE.9) THEN
           IID = IIID(NI)
           XD  = STORNF(IID) * SQRT(ZD(NI)**(2*IID+1)) * SQPI * SQ15
           WRITE(NB13,'(5I5,5X,2F20.10)') I,2,0,0,IID-3,ZD(NI),XD
           WRITE(NB13,'(5I5,5X,2F20.10)') I,0,2,0,IID-3,ZD(NI),XD
           WRITE(NB13,'(5I5,5X,2F20.10)') I,0,0,2,IID-3,ZD(NI),XD
           WRITE(NB13,'(5I5,5X,2F20.10)') I,0,1,1,IID-3,ZD(NI),XD
           WRITE(NB13,'(5I5,5X,2F20.10)') I,1,0,1,IID-3,ZD(NI),XD
           WRITE(NB13,'(5I5,5X,2F20.10)') I,1,1,0,IID-3,ZD(NI),XD
        ENDIF
        END DO
C       MOLECULAR ORBITALS.
C       ASSIGN MO OCCUPATION NUMBERS (UNLESS ALREADY KNOWN).
        IF(ABS(IUHF).LT.2) CALL OCCSTD
C       SAVE MO EIGENVECTORS AND RELATED INFORMATION.
        WRITE(NB13,'(A)') '[MO]'
        IF(UHF) THEN
           CALL GRAPHM (CA,EA,LM2,LM3,1,NB13,-5)
           CALL GRAPHM (CB,EB,LM2,LM3,2,NB13,-5)
        ELSE
           CALL GRAPHM (CA,EA,LM2,LM3,0,NB13,-5)
        ENDIF
      ENDIF
C *** END OF PART I OF MOLDEN SECTION.
C
C *** TRANSFORM THE MOLECULAR ORBITALS USING THE S**(-1/2) MATRIX.
C     THE ORBITALS OBTAINED FROM THE DIAGONALIZATION ARE CONSIDERED
C     TO CORRESPOND TO AN ORTHOGONAL BASIS (ZDO APPROXIMATION).
C     THE TRANSFORMATION PRODUCES EIGENVECTORS WHICH MAY BE ASSOCIATED
C     WITH A NON-ORTHOGONAL BASIS (IN THE AB INITIO SENSE).
C     THE CURRENT IMPLEMENTATION WITH SIMPLE MATRIX MULTIPLICATIONS
C     REQUIRES THAT ENOUGH MEMORY IS AVAILABLE (INOUT=0).
      IF(INOUT.GT.0) THEN
         WRITE(NB6,500)
         GO TO 100
      ENDIF
      CALL DGEMM('N','N',N,LM3,N,ONE,FA,LM2,CA,LM2,ZERO,H,LM2)
      CALL CMOVE(H,CA,N,LM2,LM3,ONE)
      IF(UHF) THEN
         CALL DGEMM('N','N',N,LM3,N,ONE,FA,LM2,CB,LM2,ZERO,H,LM2)
         CALL CMOVE(H,CB,N,LM2,LM3,ONE)
      ENDIF
C *** WRITE FILE NB13 ACCORDING TO MOLDEN CONVENTIONS.
C     MOLDEN SECTION (PART II): TRANSFORMED EIGENVECTORS.
      IF(NSAV13.EQ.2) THEN
        WRITE(NB13,'(A)') '[MO] - * S**(-1/2)'
        IF(UHF) THEN
           CALL GRAPHM (CA,EA,LM2,LM3,1,NB13,-5)
           CALL GRAPHM (CB,EB,LM2,LM3,2,NB13,-5)
        ELSE
           CALL GRAPHM (CA,EA,LM2,LM3,0,NB13,-5)
        ENDIF
      ENDIF
C     END OF PART II OF MOLDEN SECTION.
C *** TRANSFER THE OVERLAP MATRIX FROM PA(LM4) TO SCRATCH ARRAY H(LM4)
C     SINCE PA(LM4) IS NEEDED FOR THE TRANSFORMED DENSITY MATRIX.
      DO 20 I=1,LM4
      H(I)   = PA(I)
   20 CONTINUE
C *** CALCULATE THE DENSITY MATRIX FOR THE TRANSFORMED ORBITALS.
C     THE USE OF THE OPTION NITER=-1 IMPLIES THAT SUBROUTINE BORDER
C     ONLY CALCULATES THE DENSITY MATRIX (NO EXTRAPOLATION ETC.).
C     THE DENSITY MATRIX IS RETURNED AS A LOWER TRIANGLE (PA,PB).
C     IN THE RHF CASE, ALL MATRIX ELEMENTS ARE TOO SMALL BY A
C     FACTOR OF 2 (USUAL CONVENTIONS IN SUBROUTINE BORDER).
      NITER  = -1
      KEXT   = 0
      NB1    = NBF(1)
      IF(IMOCC.GT.2) CALL OCCDEF (CA,CB,EA,EB,LM2,LM3)
      IF(UHF) THEN
         CALL BORDER (CA,DA,PA,FA,PL,LM2,LM3,LM4,N,NALPHA,0,0,
     1                NITER,KEXT,INOUT,NB1,1)
         CALL BORDER (CB,DB,PB,FB,PM,LM2,LM3,LM4,N,NBETA ,0,0,
     1                NITER,KEXT,INOUT,NB1,2)
         CALL SQUARE (PA,FA,N,LM2,LM4)
         CALL SQUARE (PB,FB,N,LM2,LM4)
      ELSE
         CALL BORDER (CA,DA,PA,FA,PL,LM2,LM3,LM4,N,NUMB,IOD,JOD,
     1                NITER,KEXT,INOUT,NB1,1)
         CALL SQUARE (PA,FA,N,LM2,LM4)
         CALL CMOVE  (FA,FA,N,LM2,LM3,TWO)
      ENDIF
C     DEBUG PRINT FOR TRANSFORMED DENSITY MATRIX.
C     IF(NPRINT.GT.5) THEN
C        WRITE(NB6,520)
C        CALL VECPRT (PA,LM4,NORBS)
C     ENDIF
C *** UNICHEM SECTION.
CRAY  SAVE DATA FOR GRAPHICS (ORBITALS AND ELECTRON DENSITIES).
C     IF(IMOCC.LE.1) CALL OCCSTD
C     IF(UHF) THEN
CRAY     CALL CTSPINMOS (NUMAT,LM2,NELECS,NALPHA,NBETA,
C    1                   COORD,NLAST,NFIRST,ZS,ZP,ZD,NAT,
C    2                   OCCA,OCCB,EA,EB,CA,CB,FA,FB)
C     ELSE
C        DO 30 I=1,NOCCA
C  30    OCCA(I) = OCCA(I)*TWO
CRAY     CALL CTMOS     (NUMAT,LM2,NELECS,
C    1                   COORD,NLAST,NFIRST,ZS,ZP,ZD,NAT,
C    2                   OCCA,EA,CA,FA)
C     ENDIF
C *** MULLIKEN POPULATION ANALYSIS.
C     THE DENSITY MATRIX FOR THE TRANSFORMED MOS IS AVAILABLE
C     IN RHF: AS SQUARE MATRIX FA(LM2,LM2),
C     IN UHF: AS SUM OF FA(LM2,LM2) AND FB(LM2,LM2).
      IF(UHF) THEN
         DO 50 I=1,N
         DO 40 J=1,N
         FA(J,I) = FA(J,I)+FB(J,I)
   40    CONTINUE
   50    CONTINUE
      ENDIF
C     PUT THE OVERLAP MATRIX H(LM4) IN SQUARE FORM CA(LM2,LM2).
      CALL SQUARE (H,CA,N,LM2,LM4)
C     CALCULATE MULLIKEN POPULATIONS AND CHARGES.
C     Q(I,1)    MULLIKEN ORBITAL POPULATIONS.
C     Q(I,2)    MULLIKEN ATOMIC POPULATIONS.
C     Q(I,3)    MULLIKEN ATOMIC CHARGES.
      CALL MULLIK (FA,CA,Q(1,1),Q(1,2),Q(1,3),LM2,N,NPRINT)
C *** CONTINUE TO WRITE SYBYL FILE NB16 ACCORDING TO MOPAC CONVENTIONS.
  100 CONTINUE
      IF(NSAV16.EQ.1 .AND. MBO.NE.0) THEN
         CALL MPCPOP (Q(1,2),Q(1,3),NUMAT,NB16,MUL)
      ENDIF
C *** RESTORE ORIGINAL EIGENVECTORS AND OTHER SCF DATA.
      REWIND NB91
      IF(UHF) THEN
         READ(NB91) CA,EA,FA,H,PA,CB,EB,FB,PB
      ELSE
         READ(NB91) CA,EA,FA,H,PA
      ENDIF
      ZP(1)  = ZS(1)
      RETURN
  500 FORMAT(///1X,'NOT ENOUGH MEMORY IS AVAILABLE IN SUBROUTINE GRAPH',
     1       /  1X,'FOR THE MO TRANSFORMATION AND THE FOLLOWING STEPS.',
     2       /  1X,'THESE PARTS OF THE CALCULATION ARE OMITTED.')
C 510 FORMAT(///1X,'UNIT MATRIX (DEBUG PRINT FROM GRAPH)'/)
C 520 FORMAT(///1X,'DENSITY MATRIX (DEBUG PRINT FROM GRAPH)'/)
      END
