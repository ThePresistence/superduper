      SUBROUTINE DYNCSM
C     *
C     DYNAMIC MEMORY ALLOCATION FOR SCRATCH ARRAYS IN COSMO.
C     *
C     INPUT FROM COMMON BLOCK COSMO2.
C     NCOSMO    COUNTER FOR COSMO CALCULATIONS.
C     *
C     INPUT FROM COMMON BLOCK LMCSM2.
C     LMQ       LEADING DIMENSION OF ARRAYS B,C,D.
C     NPS       LEADING DIMENSION OF ARRAY A.
C     *
C     OUTPUT VIA COMMON BLOCKS LMCSM1 AND LMCSM2.
C     LCA1      STARTING ADDRESS OF ARRAY A.
C     LCB1      STARTING ADDRESS OF ARRAY B.
C     LCC1      STARTING ADDRESS OF ARRAY C.
C     LCD1      STARTING ADDRESS OF ARRAY D.
C     LMCA1     LENGTH OF ARRAY A.
C     LMCB1     LENGTH OF ARRAY B.
C     LMCC1     LENGTH OF ARRAY C.
C     LMCD1     LENGTH OF ARRAY D.
C     LMCTOT    TOTAL LENGTH OF BUFFER.
C     *
      USE LIMIT, ONLY: LM1, LMI, LMNPS
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./COSMO2/ NCOSMO,NPSG,NPSH,NPSTOT,LMNSET
     ./COSMO7/ JPC(LMI+LM1),JPCMAX
     ./INOPT2/ IN2(300)
     ./LMCSM1/ LCA1,LCB1,LCC1,LCD1
     ./LMCSM2/ LMCA1,LMCB1,LMCC1,LMCD1,LMCTOT,LMQ,NPS
     ./NBFILE/ NBF(20)
C *** FILE NUMBERS.
      NB6    = NBF(6)
C *** CHECK FOR MEMORY LIMITATIONS.
      IF(NPS.GT.LMNPS) THEN
         WRITE(NB6,500) NPS,LMNPS
         STOP 'DYNCSM'
      ENDIF
C *** INPUT VARIABLES AND INITIALIZATION.
      JPRINT = IN2(42)
      MODCSM = IN2(235)
C *** MEMORY ALLOCATION.
C *** MODCSM = 0. MATRIX MULTIPLICATIONS WITH THE USE OF DGEMM.
C     PROD 1 : B * INVERSE(A)   = C
C     PROD 2 : C * TRANSPOSE(B) = D
C     ARRAYS : A(NPS,NPS), B(LMQ,NPS), D(LMQ,LMQ), C(LMQ,NPS).
C     MEMORY : D .... A .... B .... C
C     ADDRESS: LCD .. LCA .. LCB .. LCC
      IF(MODCSM.LE.0) THEN
         LMCA1  = NPS*NPS
         LMCB1  = LMQ*NPS
         LMCD1  = LMQ*LMQ
         LMCC1  = LMCB1
         LCD1   = 1
         LCA1   = LCD1+LMCD1
         LCB1   = LCA1+LMCA1
         LCC1   = LCB1+LMCB1
C        LCA1   = 1
C        LCB1   = LCA1+LMCA1
C        LCD1   = LCB1+LMCB1
C        LCC1   = LCD1+LMCD1
      ENDIF
C *** MODCSM=1. MATRIX MULTIPLICATIONS BY FORTRAN CODE WHICH MINIMIZES
C     MEMORY REQUIREMENTS BY USING LINEARLY PACKED ARRAYS.
C     DIRECT EVALUATION OF D = B * INVERSE(A) * TRANSPOSE(B).
C     ARRAYS : A(NPSLIN), B(LMQ,NPS), D(LMQLIN), VEC(NPS)
C     MEMORY : D ..... A .... B .... VEC
C     ADDRESS: LCD ... LCA .. LCB .. LCC
      IF(MODCSM.GT.0) THEN
         LMCA1  = (NPS*(NPS+1))/2
         LMCB1  = LMQ*NPS
         LMCD1  = (LMQ*(LMQ+1))/2
         LMCC1  = NPS
         LCD1   = 1
         LCA1   = LCD1+LMCD1
         LCB1   = LCA1+LMCA1
         LCC1   = LCB1+LMCB1
C        LCA1   = 1
C        LCB1   = LCA1+LMCA1
C        LCD1   = LCB1+LMCB1
C        LCC1   = LCD1+LMCD1
      ENDIF
C *** TOTAL BUFFER LENGTH REQUIRED.
      LMCTOT = LMCA1 + LMCB1 + LMCD1 + LMCC1
C *** DEFINE INDEX ARRAY.
      IF(MODCSM.GT.0) THEN
         JPCLST = MAX(LMQ,NPS)
         IF(NCOSMO.EQ.1) THEN
            DO 10 I=1,JPCLST
            JPC(I) = (I*(I-1))/2
   10       CONTINUE
            JPCMAX = JPCLST
         ELSE IF(JPCLST.GT.JPCMAX) THEN
            DO 20 I=JPCMAX+1,JPCLST
            JPC(I) = (I*(I-1))/2
   20       CONTINUE
            JPCMAX = JPCLST
         ENDIF
      ENDIF
C *** PRINTING SECTION.
      IF(NCOSMO.EQ.1 .AND. JPRINT.GE.2) THEN
         WRITE(NB6,510) LMCTOT,LMQ,NPSTOT,NPS
         WRITE(NB6,520) LCD1,LCD1+LMCD1-1,LMCD1,
     1                  LCA1,LCA1+LMCA1-1,LMCA1,
     2                  LCB1,LCB1+LMCB1-1,LMCB1,
     3                  LCC1,LCC1+LMCC1-1,LMCC1
         IF(MODCSM.LE.0) THEN
            WRITE(NB6,530)
         ELSE
            WRITE(NB6,540)
         ENDIF
      ENDIF
      RETURN
  500 FORMAT(// 1X,'CURRENT NUMBER OF SEGMENTS ON THE SURFACE',I10,
     1       /  1X,'MAXIMUM NUMBER OF SEGMENTS FOR BUFFER 1  ',I10,
     2       /  1X,'PROGRAM WILL STOP.'//)
  510 FORMAT(// 1X,'TOTAL BUFFER LENGTH FOR COSMO TREATMENT  ',I10,
     1       /  1X,'TOTAL NUMBER OF SOLUTE CHARGES (LMQ)     ',I10,
     2       /  1X,'INPUT NUMBER OF SEGMENTS (NONE REMOVED)  ',I10,
     3       /  1X,'TOTAL NUMBER OF SEGMENTS (AFTER REMOVAL) ',I10)
  520 FORMAT(///1X,'MEMORY ALLOCATION FOR THE COSMO TREATMENT',
     1       // 1X,'    START    FINAL   LENGTH    CONTENTS',
     2       // 1X,3I9,4X,'DIELECTRIC OPERATOR MATRIX D',
     3       /  1X,3I9,4X,'INVERSE OF THE SQUARE MATRIX A',
     4       /  1X,3I9,4X,'RECTANGULAR INTERACTION MATRIX B',
     5       /  1X,3I9,4X,'SCRATCH SPACE')
  530 FORMAT(/  1X,'SQUARE ARRAYS ARE USED FOR MATRICES A AND D')
  540 FORMAT(/  1X,'PACKED ARRAYS ARE USED FOR MATRICES A AND D')
      END
