      SUBROUTINE PRTDFP (IJUMP)
C     *
C     PRINT RESULTS FROM GEOMETRY OPTIMIZATION.
C     *
      USE LIMIT, ONLY: LM1, LMV, LMGRD, LMYL
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (NITEM=10)
      CHARACTER*80 KTITLE,KOMENT
      COMMON
     ./ATOMC / COORD(3,LM1)
     ./CONINF/ ESTAT0,ESTAT1,GF2NRM
     ./CONSTF/ A0,AFACT,EV,EVCAL,PI,W1,W2,BIGEXP
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./CYCLES/ ICYC,NCOUNT
     ./DFP   / X(LMV),N
     ./ERG   / ENERGY,GRAD(LMV),GNORM,CNORM
     ./ERG1  / CNORM1
     ./FLAG1 / KTITLE,KOMENT
     ./FLPOCM/ G(LMV),P(LMV),ALPHA,FUNCT
     ./GRDORG/ IGRST(LMGRD),ISTATE,JSTATE
     ./INOPT2/ IN2(300)
     ./NBFILE/ NBF(20)
     ./PARM1 / A(3,LM1),NA(LM1),NB(LM1),NC(LM1),NN(LM1),NATOMS
     ./PARM3 / LOC(LMV),NVAR3
     ./YARCON/ YLGCV(LMYL),YLGCT(LMYL),IYLGC(5,LMYL)
     ./YARLAG/ YLVAL(LMYL),YLGRD(LMYL),YLD(LMYL),NYL
C *** FILE NUMBERS.
      NB6    = NBF(6)
C *** INPUT OPTIONS.
      JOP    = IN2(3)
      IGEOM  = IN2(4)
      IPRINT = IN2(38)
      IATERG = IN2(119)
      ICROSS = IN2(160)
      IF(IPRINT.LE.-9) RETURN
C *** PRINT HEADLINE AND MAIN RESULTS.
      WRITE(NB6,500) KOMENT,KTITLE
      IF(IJUMP.EQ.0) THEN
         WRITE(NB6,610) ICYC,NCOUNT
         IF(ICROSS.GE.3 .AND. ICROSS.LE.5) THEN
            WRITE(NB6,*)
            WRITE(NB6,625) IGRST(1), ESTAT0
            WRITE(NB6,625) IGRST(2), ESTAT1
            IF(IATERG.EQ.1) THEN
               WRITE(NB6,626) (ESTAT1-ESTAT0)
            ELSEIF(IATERG.EQ.-1) THEN
               WRITE(NB6,628) (ESTAT1-ESTAT0)
            ENDIF
            IF(ICROSS.EQ.3) WRITE(NB6,627) ENERGY
         ELSE
            IF(IATERG.EQ.1) THEN
               WRITE(NB6,620) ENERGY
            ELSEIF(IATERG.EQ.-1) THEN
               WRITE(NB6,621) ENERGY
            ENDIF
         ENDIF
         IF(JOP.EQ.1 .OR. JOP.EQ.4 .OR. JOP.EQ.6) WRITE(NB6,630) FUNCT
         WRITE(NB6,640)
      ELSE
         WRITE(NB6,710) ICYC
         IF(ICROSS.GE.3 .AND. ICROSS.LE.5) THEN
            WRITE(NB6,*)
            WRITE(NB6,725) IGRST(1), ESTAT0
            WRITE(NB6,725) IGRST(2), ESTAT1
            WRITE(NB6,726) (ESTAT1-ESTAT0)
            IF(ICROSS.EQ.3) WRITE(NB6,727) ENERGY
         ELSE
            WRITE(NB6,720) ENERGY
         ENDIF
         IF(JOP.EQ.1 .OR. JOP.EQ.4 .OR. JOP.EQ.6) WRITE(NB6,730) FUNCT
         WRITE(NB6,740)
      ENDIF
C *** PRINT GRADIENTS.
C     THE SINGLE-POINT CALCULATION AFTER A GEOMETRY OPTIMIZATION
C     PROVIDES THE HEAT OF FORMATION (ENERGY IN /ERG/) FOR THE FINAL
C     OPTIMIZED GEOMETRY, BUT NOT THE GRADIENT (SEE FLEPO, TSOPT).
C     THE GRADIENT FOR THE FINAL GEOMETRY IS AVAILABLE AS G(I)
C     IN /FLPOCM/ AND IS COPIED BELOW TO GRAD(I) IN /ERG/
C     (AFTER USING GRAD(I) FOR PRINTING PURPOSES FIRST).
C     THE OPTIMIZED GRADIENT NORM IS COMPUTED BELOW FROM G(I)
C     AND IS SAVED AS GNORM IN /ERG/.
C     THE CARTESIAN GRADIENT NORM (IF COMPUTED) IS STORED AS CNORM1
C     IN /ERG1/ AND IS COPIED BELOW TO CNORM IN /ERG/.
C     THEREFORE, ON EXIT FROM PRTDFP, ALL DATA IN /ERG/ CORRESPOND
C     TO THE OPTIMIZED GEOMETRY.
      GNORM  = ZERO
      DO 10 I=1,N
      GNORM  = GNORM+G(I)**2
      GRAD(I)= X(I)
      LOC2   = LOC(I)-3*((LOC(I)-1)/3)
      IF(IGEOM.GT.0 .OR. LOC2.EQ.1) GO TO 10
      GRAD(I)= GRAD(I)*AFACT
   10 CONTINUE
      IF(ICROSS.EQ.5) THEN
         DO 15 I=1,NYL
            GNORM = GNORM+YLGRD(I)**2
   15    CONTINUE
      ENDIF
      GNORM  = SQRT(GNORM)
      CNORM  = CNORM1
      NTO    = 1+(N-1)/NITEM
      NREM   = N-(NTO-1)*NITEM
      JMIN   = 1-NITEM
      DO 20 I=1,NTO
      JMIN   = JMIN+NITEM
      JMAX   = JMIN+NITEM-1
      IF(I.EQ.NTO) JMAX = JMIN+NREM-1
      WRITE(NB6,510) (J,J=JMIN,JMAX)
      WRITE(NB6,520) (GRAD(J),J=JMIN,JMAX)
      WRITE(NB6,530) (G(J),J=JMIN,JMAX)
   20 CONTINUE
      IF(ICROSS.EQ.5) THEN
         WRITE(NB6,650)
         NTOYL  = 1+(NYL-1)/NITEM
         NREMYL = NYL-(NTOYL-1)*NITEM
         JMIN   = 1-NITEM
         DO 25 I=1,NTOYL
            JMIN = JMIN+NITEM
            JMAX = JMIN+NITEM-1
            IF(I.EQ.NTOYL) JMAX = JMIN+NREMYL-1
            WRITE(NB6,510) (J,J=JMIN,JMAX)
            WRITE(NB6,520) (YLVAL(J),J=JMIN,JMAX)
            WRITE(NB6,530) (YLGRD(J),J=JMIN,JMAX)
   25    CONTINUE
         IF(NYL.GT.2) THEN
            WRITE(NB6,655)
            DO 26 I=1,(NYL-2)
               WRITE(NB6,535) IYLGC(1,I),YLGCV(I),YLGCT(I),
     1                       (YLGCV(I)-YLGCT(I)),
     2                       (IYLGC(J,I),J=2,(IYLGC(1,I)+2))
   26       CONTINUE
         ENDIF
      ENDIF
      IF(IJUMP.EQ.0) THEN
         WRITE(NB6,660) GNORM
         IF(CNORM1.GT.ZERO) WRITE(NB6,670) CNORM1
      ELSE
         WRITE(NB6,760) GNORM
         IF(CNORM1.GT.ZERO) WRITE(NB6,770) CNORM1
      ENDIF
      DO 30 I=1,N
      GRAD(I)= G(I)
   30 CONTINUE
C *** PRINT MOLECULAR GEOMETRY AND INTERATOMIC DISTANCES.
      WRITE(NB6,540)
      CALL SYMTRY(+1)
      CALL GMETRY(+1)
      IF(IGEOM.EQ.0) THEN
         WRITE(NB6,550)
         DO 40 I=1,NATOMS
         WRITE(NB6,560) I,NN(I),(COORD(J,I),J=1,3)
   40    CONTINUE
      ENDIF
      IF(IPRINT.GT.0 .OR. (IPRINT.GE.-1 .AND. NATOMS.LE.100)) THEN
         WRITE(NB6,570)
         CALL RIJPRT (COORD,NN,NATOMS,KSTOP)
      ENDIF
      CALL GMETRY(-2)
C *** PRINT MESSAGE IN CASE OF TIME LIMIT.
      IF(IJUMP.EQ.1) WRITE(NB6,900) ICYC
      RETURN
  500 FORMAT(///1X,A,/1X,A,/)
  510 FORMAT(/  3X,'I',6X,I4,9(8X,I4))
  520 FORMAT(   1X,'X(I)',10(1X,F11.5))
  530 FORMAT(   1X,'G(I)',10(1X,F11.5))
  535 FORMAT(2X,I2,3X,F10.5,3X,F10.5,3X,F10.5,3X,4I3)
  540 FORMAT(//)
  550 FORMAT(///1X,'CARTESIAN COORDINATES (ANGSTROMS)',
     1       // 8X,'I',9X,'NI',16X,'X',11X,'Y',11X,'Z'/)
  560 FORMAT(   4X,I5,I11,9X,3F12.5)
  570 FORMAT(///1X,'INTERATOMIC DISTANCES (ANGSTROMS)'/)
  610 FORMAT(// 1X,'OPTIMIZATION FINISHED AFTER',I4,' CYCLES AND',I4,
     1             ' FUNCTION EVALUATIONS')
  620 FORMAT(/  1X,'FINAL HEAT OF FORMATION',F15.5,' KCAL/MOL')
  621 FORMAT(/  1X,'FINAL TOTAL ENERGY',F15.5,' KCAL/MOL')
  625 FORMAT(   1X,'FINAL STATE ',I3,' HEAT OF FORMATION ',F15.5,
     1             ' KCAL/MOL')
  626 FORMAT(/  1X,'FINAL HEAT OF FORMATION DIFFERENCE',F15.5,
     1             ' KCAL/MOL')
  627 FORMAT(   1X,'FINAL OBJECTIVE FUNCTION          ',F15.5,
     1             ' KCAL/MOL')
  628 FORMAT(/  1X,'FINAL TOTAL ENERGY DIFFERENCE',F15.5,
     1             ' KCAL/MOL')
  630 FORMAT(/  1X,'FINAL SUM OF SQUARES   ',F15.5)
  640 FORMAT(///1X,'FINAL VARIABLES AND GRADIENTS'/)
  650 FORMAT(// 1X,'WITH LAGRANGE MULTIPLIERS'/)
  655 FORMAT(/  1X,'GEOMETRY CONSTRAINTS',
     1     // 1X,'TYPE       FINAL       TARGET         DIFF     ATOMS')
  660 FORMAT(///1X,'FINAL OPTIMIZED GRADIENT NORM   ',F20.5)
  670 FORMAT(/  1X,'FINAL CARTESIAN GRADIENT NORM   ',F20.5)
  710 FORMAT(///1X,'CURRENT CYCLE IN OPTIMIZATION',I11)
  720 FORMAT(/  1X,'CURRENT HEAT OF FORMATION',F15.5,' KCAL/MOL')
  725 FORMAT(   1X,'CURRENT STATE ',I3,' HEAT OF FORMATION ',F15.5,
     1             ' KCAL/MOL')
  726 FORMAT(/  1X,'CURRENT HEAT OF FORMATION DIFFERENCE',F15.5,
     1             ' KCAL/MOL')
  727 FORMAT(   1X,'CURRENT OBJECTIVE FUNCTION          ',F15.5,
     1             ' KCAL/MOL')
  730 FORMAT(/  1X,'CURRENT SUM OF SQUARES   ',F15.5)
  740 FORMAT(///1X,'CURRENT VARIABLES AND GRADIENTS'/)
  760 FORMAT(///1X,'CURRENT OPTIMIZED GRADIENT NORM',2X,F20.5)
  770 FORMAT(/  1X,'CURRENT CARTESIAN GRADIENT NORM',2X,F20.5)
  900 FORMAT(///1X,'THE JOB APPROACHES ITS TIME LIMIT IN CYCLE',I4,'.',
     1       /  1X,'ALL RELEVANT INFORMATION HAS BEEN SAVED ON FILE.',
     2       /  1X,'CONTINUE THE OPTIMIZATION IN A NEW JOB.'//)
      END
