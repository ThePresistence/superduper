C     ******************************************************************
      SUBROUTINE HFOCKP (H,F,PA,PB,PPA,PPB,LM2,LM6,MY1,MY2,
     1                   HEVAL,WEVAL,EF,EH,ENUCLR,NPRINT)
C     *
C     DIRECT CALCULATION OF PARTIAL CORE HAMILTONIAN AND FOCK MATRIX.
C     DIRECT EVALUATION OF THE CORRESPONDING ENERGY CONTRIBUTIONS.
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     H(LM2,*)  PARTIAL CORE HAMILTONIAN MATRIX (O).
C     F(LM2,*)  PARTIAL FOCK MATRIX (O).
C     PA(LM2,*) PARTIAL RHF OR UHF-ALPHA DENSITY MATRIX (I).
C     PB(LM2,*) PARTIAL UHF-BETA DENSITY MATRIX (I).
C     PPA(LM6)  ONE-CENTER PART OF RHF OR UHF-ALPHA DENSITY MATRIX (I).
C     PPB(LM6)  ONE-CENTER PART OF UHF-BETA DENSITY MATRIX (I).
C     LM2       LEADING DIMENSION OF PARTIAL MATRICES (I).
C     LM6       NUMBER OF ONE-CENTER ORBITAL PAIRS (I).
C     MY1       FIRST ATOM DEFINING FIRST COLUMN OF PARTIAL MATRIX (I).
C     MY2       SECOND ATOM DEFINING LAST COLUMN OF PARTIAL MATRIX (I).
C     NITER     NUMBER OF CURRENT SCF ITERATION (I).
C     HEVAL     FLAG WHETHER ONE-ELECTRON INTEGRALS ARE RECOMPUTED (I).
C     WEVAL     FLAG WHETHER TWO-ELECTRON INTEGRALS ARE RECOMPUTED (I).
C     EF        CONTRIBUTION TO ELECTRONIC ENERGY FROM F MATRIX (O).
C     EH        CONTRIBUTION TO ELECTRONIC ENERGY FROM H MATRIX (O).
C     ENUCLR    CORE-CORE REPULSION ENERGY (O).
C     *
C     EACH PARTIAL MATRIX (H,F,PA,PB) REFERS TO THE COLUMNS ASSOCIATED
C     WITH ATOMS IN THE RANGE FROM MY1 TO MY2, I.E. TO COLUMNS WITH
C     INDICES FROM NFIRST(MY1) TO NLAST(MY2) IN THE CORRESPONDING FULL
C     MATRIX. MY1=MY2 IS ALLOWED.
C     *
C     THIS ROUTINE IS CALLED IN THE DIRECT AND PARALLEL VERSION OF THE
C     PROGRAM. IT IS USED IN THE FOLLOWING CONTEXT.
C     - DIRECT SCF: BUILD FULL FOCK MATRIX IN SHARED MEMORY BY CALLING
C       HFOCKP IN A LOOP OVER ATOMS (MY1=MY2) WHILE USING APPROPRIATE
C       ADDRESSES THAT REFER TO THE FULL MATRIX (H,F,PA,PB).
C     - LINEAR SCALING SCF: KEEP ONLY NON-ZERO ELEMENTS OF THE FOCK
C       MATRIX IN MEMORY. CALL HFOCKP IN A LOOP OVER ATOMS (MY1=MY2)
C       USING SMALL LOCAL ARRAYS (H,F,PA,PB) AND SCREEN THE RESULTS
C       TO RETAIN ONLY NON-VANISHING ENTRIES IN APPROPRIATE SPARSE
C       DATA STRUCTURES.
C     - PARALLEL SCF: BUILD FULL FOCK MATRIX IN DISTRIBUTED MEMORY BY
C       CALLING HFOCKP IN A LOOP OVER PRE-DEFINED ATOM RANGES (MY1-MY2)
C       FOR LOAD BALANCING AND REDUCING COMMUNICATION OVERHEAD.
C     *
      USE LIMIT, ONLY: LM1, LMX, LMZ
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL HEVAL,WEVAL
      LOGICAL IEQJ,KEQL
      COMMON
     ./ATOMC / COORD(3,LM1)
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./CONSTF/ A0,AFACT,EV,EVCAL,PI,W1,W2,BIGEXP
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./DPARM1/ UDD(LMZ),ZD(LMZ),BETAD(LMZ)
      COMMON
     ./INDEX / INDX(LMX)
     ./INDEXW/ NW(LM1)
     ./INOPT2/ IN2(300)
     ./PARDER/ TORE(LMZ),EHEAT(LMZ),EISOL(LMZ)
     ./PARMIN/ F0(18),VS(18),VP(18),BETA(55),ALPHA(55)
     ./PAROPT/ USS(LMZ),UPP(LMZ),ZS(LMZ),ZP(LMZ),BETAS(LMZ),BETAP(LMZ),
     .         ALP(LMZ)
      DIMENSION H(LM2,*),F(LM2,*),PA(LM2,*),PB(LM2,*)
      DIMENSION PPA(LM6),PPB(LM6)
      DIMENSION RI(22),CORE(10,2),SIJ(14),T(14)
      DIMENSION W(2025),YY(675)
C     *
C *** INPUT OPTIONS.
      IOP    = IN2(2)
      MCUTR  = IN2(186)
      CUTR2  = (DBLE(MCUTR))**2
C *** INITIALIZATION.
      ENUCLR = ZERO
      MYORB1 = NFIRST(MY1)
      MYORB2 = NLAST(MY2)
      NORBS  = NLAST(NUMAT)
      J0     = MYORB1-1
      JRANGE = MYORB2-J0
      LMF    = JRANGE
      DO 20 J=1,JRANGE
      DO 10 I=1,NORBS
      F(I,J) = ZERO
   10 CONTINUE
   20 CONTINUE
      IF(HEVAL) THEN
         DO 40 J=1,JRANGE
         DO 30 I=1,NORBS
         H(I,J) = ZERO
   30    CONTINUE
   40    CONTINUE
      ENDIF
C     *
C *** INCLUDE ONE-CENTER ONE-ELECTRON INTEGRALS.
      IF(HEVAL) THEN
         DO 70 II=MY1,MY2
         NI     = NAT(II)
         IA     = NFIRST(II)
         H(IA,IA-J0) = USS(NI)
         IORBS  = NLAST(II)-IA+1
         IF(IORBS.GE.4) THEN
            DO 50 J=IA+1,IA+3
            H(J,J-J0) = UPP(NI)
   50       CONTINUE
            IF(IORBS.GE.9) THEN
               DO 60 J=IA+4,IA+8
               H(J,J-J0) = UDD(NI)
   60       CONTINUE
            ENDIF
         ENDIF
   70    CONTINUE
      ENDIF
C *** INCLUDE ONE-CENTER TWO-ELECTRON INTEGRALS IN THE FOCK MATRIX.
      CALL FOCK1P (MY1,MY2,J0,F,PPA,PPB,LM2,LM6)
C     *
C *** LOOP OVER ATOM PAIRS FOR OFFDIAGONAL TWO-CENTER TERMS.
      DO 170 II=1,NUMAT
      DO 160 JJ=MY1,MY2
      IF(II.EQ.JJ) GO TO 160
C *** CHECK FOR HARD DISTANCE CUTOFF.
      IF(MCUTR.GT.0) THEN
         R2  = (COORD(1,II)-COORD(1,JJ))**2 +
     1         (COORD(2,II)-COORD(2,JJ))**2 +
     2         (COORD(3,II)-COORD(3,JJ))**2
         IF(R2.GT.CUTR2) GO TO 160
      ENDIF
C *** INITIALIZATION FOR PAIR II-JJ.
      NI     = NAT(II)
      NJ     = NAT(JJ)
      IA     = NFIRST(II)
      JA     = NFIRST(JJ)
      IB     = NLAST(II)
      JB     = NLAST(JJ)
      IORBS  = IB-IA+1
      JORBS  = JB-JA+1
C *** SPECIAL SECTION FOR H-H PAIR.
      IF(NI.EQ.1 .AND. NJ.EQ.1 .AND. IORBS.EQ.1 .AND. JORBS.EQ.1) THEN
         CALL HHPAIR (JJ,II,COORD,SIJSS,HIJ,WIJ,EN)
         IJ  = NW(II)
         JA0 = JA-J0
         IF(HEVAL) THEN
            H(IA,JA0) = HIJ
            H(JA,JA0) = H(JA,JA0)-WIJ
            ENUCLR = ENUCLR+EN
         ENDIF
         F(IA,JA0) = F(IA,JA0)-WIJ*PA(IA,JA0)
         F(JA,JA0) = F(JA,JA0)+WIJ*(PPA(IJ)+PPB(IJ))
         GO TO 160
      ENDIF
C *** GENERAL SECTION.
C *** DISTANCE R (AU), ROTATION MATRIX, AND RESONANCE INTEGRALS.
      IF(IOP.EQ.1) CALL BONTYP (NI,NJ,NBOND)
      CALL ROTMAT (JJ,II,JORBS,IORBS,NUMAT,COORD,R,YY)
      IF(HEVAL) THEN
         CALL BETAIJ (NI,NJ,R,SIJ,T)
         CALL ROTBP  (IA,JA-J0,IORBS,JORBS,T,YY,H,LM2,LMF)
      ENDIF
C *** COULOMB INTERACTIONS FOR MNDO.
C *** TWO-CENTER TWO-ELECTRON REPULSIONS.
      IF(IOP.GT.0) GO TO 120
      IW     = INDX(IORBS)+IORBS
      JW     = INDX(JORBS)+JORBS
      CALL REPP (NI,NJ,R,RI,CORE)
      IF(IORBS.GE.9 .OR. JORBS.GE.9) THEN
         CALL REPPD (NI,NJ,R,RI,CORE,W,IW,JW,1)
      ENDIF
      IF(IORBS.LE.4 .AND. JORBS.LE.4) THEN
         IP  = 1
         JP  = 1
         KR  = 0
         LW6 = 45
         LW9 = 2025
         CALL ROTATE (IW,JW,IP,JP,KR,RI,YY,W,W,LW6,LW9,1)
      ELSE
         CALL ROTD  (W,YY,IW,JW)
      ENDIF
C *** CORE-ELECTRON ATTRACTIONS.
      IF(HEVAL) THEN
         CALL ROTCP (JA,JA-J0,JORBS,CORE,2,YY,H,LM2,LMF)
      ENDIF
C *** CORE-CORE REPULSIONS.
      IF(HEVAL) THEN
         WIJ    = RI(1)
         CALL CORREP (II,JJ,NI,NJ,R,WIJ,EN)
         ENUCLR = ENUCLR+EN
      ENDIF
C *** INCLUDE TWO-CENTER TWO-ELECTRON INTEGRALS IN THE FOCK MATRIX.
C     GENERAL CODE FOR MNDO-TYPE WAVEFUNCTIONS.
      IJ     = NW(II)-1
      KKW    = 0
      DO 110 I=IA,IB
      DO 100 J=IA,I
      IEQJ   = I.EQ.J
      IJ     = IJ+1
      PIJ    = PPA(IJ)+PPB(IJ)
      DO 90 K=JA,JB
      DO 80 L=JA,K
      KEQL   = K.EQ.L
      KKW    = KKW+1
      A      = W(KKW)
      IF(IEQJ.AND.KEQL) THEN
         F(K,L-J0) =  F(K,L-J0) + A*PIJ
         F(I,K-J0) =  F(I,K-J0) - A*PA(J,L-J0)
      ELSE IF(IEQJ) THEN
         F(K,L-J0) =  F(K,L-J0) + A*PIJ
         F(I,K-J0) =  F(I,K-J0) - A*PA(J,L-J0)
         F(I,L-J0) =  F(I,L-J0) - A*PA(J,K-J0)
      ELSE IF(KEQL) THEN
         F(K,L-J0) =  F(K,L-J0) + A*PIJ*TWO
         F(I,K-J0) =  F(I,K-J0) - A*PA(J,L-J0)
         F(J,K-J0) =  F(J,K-J0) - A*PA(I,L-J0)
      ELSE
         F(K,L-J0) =  F(K,L-J0) + A*PIJ*TWO
         F(I,K-J0) =  F(I,K-J0) - A*PA(J,L-J0)
         F(J,K-J0) =  F(J,K-J0) - A*PA(I,L-J0)
         F(I,L-J0) =  F(I,L-J0) - A*PA(J,K-J0)
         F(J,L-J0) =  F(J,L-J0) - A*PA(I,K-J0)
      ENDIF
   80 CONTINUE
   90 CONTINUE
  100 CONTINUE
  110 CONTINUE
      GO TO 160
C *** COULOMB INTERACTIONS FOR MINDO/3 AND CNDO/2.
  120 CONTINUE
      IF(IOP.EQ.1) THEN
         RIJ = R*A0
         WIJ = W1/SQRT(RIJ**2+(W2/F0(NI)+W2/F0(NJ))**2)
         SCALE = EXP(-ALPHA(NBOND)*RIJ)
         IF(NBOND.EQ.7 .OR. NBOND.EQ.11) SCALE=ALPHA(NBOND)*EXP(-RIJ)
         EN  = TORE(NI)*TORE(NJ)*(WIJ+(W1/RIJ-WIJ)*SCALE)
      ELSE
         ZI  = ZS(NI)
         ZJ  = ZS(NJ)
         CALL CREP (NI,NJ,ZI,ZJ,R,WIJ)
         EN  = TORE(NI)*TORE(NJ)*EV/R
      ENDIF
      IF(HEVAL) THEN
         DO 130 K=JA,JB
         H(K,K-J0) = H(K,K-J0)-TORE(NI)*WIJ
  130    CONTINUE
         ENUCLR = ENUCLR+EN
      ENDIF
C *** INCLUDE TWO-CENTER TWO-ELECTRON INTEGRALS IN THE FOCK MATRIX.
      IJ     = NW(II)-1
      DO 150 I=IA,IB
      IJ     = IJ+(I-IA+1)
      PIJ    = PPA(IJ)+PPB(IJ)
      DO 140 K=JA,JB
      F(K,K-J0) = F(K,K-J0)+WIJ*PIJ
      F(I,K-J0) = F(I,K-J0)-WIJ*PA(I,K-J0)
  140 CONTINUE
  150 CONTINUE
  160 CONTINUE
  170 CONTINUE
C     *
C *** DEFINE MISSING ELEMENTS IN THE ONE-CENTER PART OF H AND F.
      DO 200 II=MY1,MY2
      IA     = NFIRST(II)
      IB     = NLAST(II)
      IF(IB.GT.IA) THEN
         DO 190 I=IA+1,IB
         DO 180 J=IA,I-1
         F(J,I-J0) = F(I,J-J0)
         H(J,I-J0) = H(I,J-J0)
  180    CONTINUE
  190    CONTINUE
      ENDIF
  200 CONTINUE
C     *
C *** INCLUDE THE ONE-ELECTRON TERMS IN THE FOCK MATRIX.
      DO 220 J=1,JRANGE
      DO 210 I=1,NORBS
      F(I,J) = F(I,J)+H(I,J)
  210 CONTINUE
  220 CONTINUE
C     *
C *** COMPUTE CONTRIBUTIONS TO ELECTRONIC ENERGY.
      CALL ESCFP (EH,NORBS,PA,H,LM2,LMF)
      CALL ESCFP (EF,NORBS,PA,F,LM2,LMF)
C     *
C *** DEBUG PRINT.
      IF(NPRINT.GE.9) THEN
         WRITE(6,500) MY1,MY2,MYORB1,MYORB2,NORBS,JRANGE,J0
         WRITE(6,510)
         CALL MATPRT (H,NORBS,JRANGE,LM2,LMF)
         WRITE(6,520)
         CALL MATPRT (F,NORBS,JRANGE,LM2,LMF)
         WRITE(6,530) EH,EF
         IF(HEVAL) WRITE(6,540) ENUCLR
         IF(NPRINT.GT.9) THEN
            WRITE(6,510)
            CALL MATDEB (H,LM2,NORBS,JRANGE)
            WRITE(6,520)
            CALL MATDEB (F,LM2,NORBS,JRANGE)
         ENDIF
      ENDIF
      RETURN
  500 FORMAT(/  1X,'HFOCKP: MY1 MY2 MYORB1 MYORB2  NORBS JRANGE     J0',
     1       /  1X,'HFOCKP:',2I4,5I7)
  510 FORMAT(///1X,'HFOCKP: PARTIAL CORE HAMILTONIAN MATRIX')
  520 FORMAT(///1X,'HFOCKP: PARTIAL FOCK MATRIX')
  530 FORMAT(///1X,'HFOCKP: CONTRIBUTION EH =',G20.10,
     1       /  1X,'HFOCKP: CONTRIBUTION EF =',G20.10)
  540 FORMAT(   1X,'HFOCKP: CONTRIBUTION EN =',G20.10)
      END
