      SUBROUTINE DCART2 (S,B,COR,H,SG,BG,CORG,HR,PA,PB,LM2,LM4,
     1                   MSYM,IEL,ISYM)
C     *
C     FAST GRADIENTS IN CARTESIAN COORDINATES BY FINITE DIFFERENCE.
C     SPECIAL ROUTINE TO INCLUDE THE CONTRIBUTIONS FROM RESONANCE
C     INTEGRALS WITH ORTHOGONALIZATION CORRECTIONS IN OM-METHODS.
C     *
C     NOTATION: I=INPUT, O=OUTPUT, S=SCRATCH.
C     S(LM4)    OVERLAP MATRIX AT REFERENCE GEOMETRY (I).
C     B(LM4)    MATRIX OF RESONANCE INTEGRALS AT REFERENCE GEOMETRY (I).
C     COR()     LOCAL CORE MATRIX AT REFERENCE GEOMETRY (I).
C     H(LM4)    ORTHOGONALIZATION CORRECTIONS AT REFERENCE GEOMETRY (I).
C     H(LM4)    TWO-CENTER CORE HAMILTONIAN AT DISTORTED GEOMETRY (S).
C     SG(LM4)   OVERLAP MATRIX AT DISTORTED GEOMETRY (S).
C     BG(LM4)   MATRIX OF RESONANCE INTEGRALS AT DISTORTED GEOMETRY (S).
C     CORG()    LOCAL CORE MATRIX AT DISTORTED GEOMETRY (S).
C     HR()      RELATIVE MAGNITUDE OF ORTHOGONALIZATION CORRECTIONS
C               PER ATOM PAIR AT REFERENCE GEOMETRY (S).
C     PA(LM4)   ALPHA DENSITY MATRIX (I).
C     PB(LM4)   BETA  DENSITY MATRIX (I).
C     MSYM      NUMBER OF SYMMETRY ELEMENTS (I).
C     IEL(3)    DEFINITION OF RELEVANT SYMMETRY ELEMENTS (I).
C     ISYM()    SYMMETRY TABLES FOR PERMUTATION OF ATOMS (I).
C     *
C     DCART2 MUST BE CALLED DIRECTLY AFTER DCART TO ENSURE THAT
C     -  THE SAME DENSITY MATRICES ARE AVAILABLE,
C     -  THE SAME SYMMETRY DATA ARE EMPLOYED,
C     -  THE CORRECT CARTESIAN GRADIENT CG(3,LM1) CAN BE UPDATED.
C     DCART2 ALSO REQUIRES CORRECT INPUT FOR THE ARRAYS (S,B,COR,H)
C     WHICH HAVE BEEN COMPUTED DURING THE ENERGY EVALUATION AT THE
C     REFERENCE GEOMETRY. IF THERE IS NOT ENOUGH MEMORY AVAILABLE
C     TO STORE THESE ARRAYS, THEY ARE RECOMPUTED.
C     *
      USE LIMIT, ONLY: LM1, LMX, LM1M
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL UHF
      COMMON
     ./ATOMC / COORD(3,LM1)
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./ATSYM / IELSYM(3,7)
     ./CGRAD / CG(3,LM1+LM1M)
     ./CONSTF/ A0,AFACT,EV,EVCAL,PI,W1,W2,BIGEXP
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./INDEX / INDX(LMX)
     ./INOPT2/ IN2(300)
     ./NBFILE/ NBF(20)
     ./UHF   / UHF
      DIMENSION H(LM4),S(LM4),B(LM4),SG(LM4),BG(LM4),HR(LM4)
      DIMENSION COR(LM2,LM2),CORG(LM2,LM2)
      DIMENSION PA(LM4),PB(LM4)
      DIMENSION IEL(3),ISYM(3,LM1)
      DIMENSION DELTA(2),EE(2)
      DIMENSION COORDG(3,LM1)
      DIMENSION IKSYMM(3,LM1)
      DIMENSION ICOUNT(10),MIH(7)
C *** FILE NUMBERS.
      NB6    = NBF(6)
C *** INPUT VARIABLES.
      IOP    = IN2(2)
      ICUTG  = IN2(26)
      NPRINT = IN2(72)
      INOUT  = IN2(212)
C *** GENERAL INITIALIZATION.
      NORBS  = NLAST(NUMAT)
      DEL    = 1.0D-06
      RDEL   = 5.0D+05
      DELTA(1) = DEL
      DELTA(2) =-DEL
C *** RECOMPUTE INTEGRALS AT REFERENCE GEOMETRY.
C     THIS OPTION IS NEEDED ONLY IF THERE IS NOT ENOUGH MEMORY AND
C     IF THE INTEGRALS HAVE NOT BEEN READ FROM FILE (INOUT.GT.0).
C     SEE COMMENTS IN SUBROUTINE DYNSCR FOR MORE DETAILS.
      IF(INOUT.LT.0) THEN
C        OVERLAP INTEGRALS (S) AND RESONANCE INTEGRALS (B).
         CALL OVRLP2 (COORD,S,B,LM4,0)
C        ORTHOGONALIZATION CORRECTIONS (H) TO RESONANCE INTEGRALS.
         IF(IOP.EQ.-6 .OR. IOP.EQ.-22) THEN
           CALL COROM2 (COORD,S,COR,LM2,LM4,0)
           CALL BETORT (H,S,B,COR,B,LM2,LM4,0)
         ELSE IF(IOP.EQ.-8 .OR. IOP.EQ.-23) THEN
           CALL BETOR3 (H,S,B,B,LM2,LM4,0)
         ELSE IF(IOP.EQ.-9) THEN
           CALL BETLOW (H,S,B,LM2,LM4)
         ENDIF
      ENDIF
C *** CHECK ORTHOGONALIZATION CORRECTIONS AT REFERENCE GEOMETRY.
      IF((IOP.EQ.-6 .OR. IOP.EQ.-8 .OR. IOP.EQ.-22
     1    .OR. IOP.EQ.-23) .AND. ICUTG.GE.0) THEN
         IJPAIR = INDX(NUMAT)+NUMAT
         DO 10 IJ=1,IJPAIR
         HR(IJ) = ZERO
   10    CONTINUE
         EH     = ZERO
         DO 31 I=2,NUMAT
         IA     = NFIRST(I)
         IB     = NLAST(I)
         DO 30 J=1,I-1
         JA     = NFIRST(J)
         JB     = NLAST(J)
         IJ     = INDX(I)+J
         IF(UHF) THEN
            DO 21 K=IA,IB
            DO 20 L=JA,JB
            M      = INDX(K)+L
            HR(IJ) = HR(IJ)+H(M)*(PA(M)+PB(M))
   20       CONTINUE
   21       CONTINUE
            HR(IJ) = HR(IJ)*TWO
         ELSE
            DO 26 K=IA,IB
            DO 25 L=JA,JB
            M      = INDX(K)+L
            HR(IJ) = HR(IJ)+H(M)*PA(M)
   25       CONTINUE
   26       CONTINUE
            HR(IJ) = HR(IJ)*FOUR
         ENDIF
         EH     = EH+HR(IJ)
   30    CONTINUE
   31    CONTINUE
         IF(EH.NE.ZERO) THEN
            DO 40 IJ=1,IJPAIR
            HR(IJ) = ABS(HR(IJ)/EH)
   40       CONTINUE
         ENDIF
C        PRINT STATISTICS AND DEBUG INFORMATION.
         IF(NPRINT.GT.2) THEN
            DO 50 I=1,10
            ICOUNT(I) = 0
   50       CONTINUE
            DO 60 IJ=1,IJPAIR
            IF(HR(IJ).GT.ZERO) THEN
               IJLOG  = -INT(LOG10(HR(IJ)))+1
               IF(IJLOG.GT.0 .AND. IJLOG.LE.9) THEN
                  ICOUNT(IJLOG) = ICOUNT(IJLOG)+1
               ELSE
                  ICOUNT(10) = ICOUNT(10)+1
               ENDIF
            ENDIF
   60       CONTINUE
            WRITE(NB6,500) EH
            WRITE(NB6,510) ICOUNT
C           IF(NPRINT.GT.6) THEN
C              WRITE(NB6,520) (HR(IJ),IJ=1,IJPAIR)
C              WRITE(NB6,530)
C              CALL VECPRT (H,LM4,NORBS)
C           ENDIF
         ENDIF
      ENDIF
C *** DEBUG PRINT.
C     IF(NPRINT.GT.5) THEN
C        WRITE(NB6,540) COORDG(1,1),COORDG(2,1),COORDG(3,1)
C        WRITE(NB6,540) COORDG(1,2),COORDG(2,2),COORDG(3,2)
C        WRITE(NB6,540) COORDG(1,3),COORDG(2,3),COORDG(3,3)
C     ENDIF
C *** INITIALIZE ARRAYS USING DATA FROM THE REFERENCE GEOMETRY.
C$OMP PARALLEL DEFAULT(NONE)
C$OMP. PRIVATE(I,K,M,N,COORDG,H,SG,BG,CORG,MEL,MI,MIH)
C$OMP. SHARED(UHF,NUMAT,COORD,LM4,S,B,IOP,NORBS,COR,HR,IKSYMM)
C$OMP. SHARED(DELTA,LM2,PA,PB,EVCAL,RDEL,ISYM,MSYM,ZERO,TWO,IEL,IELSYM)
C$OMP. REDUCTION(+:CG)
      DO 71 I=1,NUMAT
      DO 70 K=1,3
      COORDG(K,I) = COORD(K,I)
      IKSYMM(K,I) = 0
   70 CONTINUE
   71 CONTINUE
      DO 80 M=1,LM4
      H(M)   = ZERO
      SG(M)  = S(M)
      BG(M)  = B(M)
   80 CONTINUE
      IF(IOP.EQ.-6 .OR. IOP.EQ.-22) THEN
         DO 91 N=1,NUMAT
         DO 90 M=1,NORBS
         CORG(M,N) = COR(M,N)
   90    CONTINUE
   91    CONTINUE
      ENDIF
C
C *** ORTHOGONALIZATION CORRECTIONS FOR RESONANCE INTEGRALS.
C *** LOOP OVER ATOMS I.
C$OMP DO SCHEDULE(DYNAMIC,8)
C$OMP. PRIVATE(L,EHA,EHB,EE,DER)
      DO 200 I=1,NUMAT
C *** LOOP OVER THREE CARTESIAN COORDINATES.
      DO 180 K=1,3
C     CHECK FOR GRADIENT COMPONENTS PREVIOUSLY DEFINED BY SYMMETRY.
      IF(IKSYMM(K,I).EQ.1) GO TO 180
C     CHECK FOR GRADIENT COMPONENTS WHICH ARE ZERO BY SYMMETRY.
      IF(MSYM.GT.0) THEN
         DO 110 M=1,MSYM
         IF(ISYM(M,I).EQ.I) THEN
            MEL = IEL(M)
            IF(IELSYM(K,MEL).EQ.-1) GO TO 180
         ENDIF
  110    CONTINUE
      ENDIF
C *** FINITE DIFFERENCE CALCULATION.
      DO 140 L=1,2
      COORDG(K,I) = COORD(K,I)+DELTA(L)
C     IF(NPRINT.GT.5) THEN
C        WRITE(NB6,550) I,K,L,COORDG(1,1),COORDG(2,1),COORDG(3,1)
C        WRITE(NB6,550) I,K,L,COORDG(1,2),COORDG(2,2),COORDG(3,2)
C        WRITE(NB6,550) I,K,L,COORDG(1,3),COORDG(2,3),COORDG(3,3)
C     ENDIF
C     COMPUTE OVERLAP INTEGRALS (SG) AND RESONANCE INTEGRALS (BG).
      CALL OVRLP2 (COORDG,SG,BG,LM4,I)
C     ORTHOGONALIZATION CORRECTIONS (H) TO RESONANCE INTEGRALS.
      IF(IOP.EQ.-6 .OR. IOP.EQ.-22) THEN
         CALL COROM2 (COORDG,S,CORG,LM2,LM4,I)
         CALL BETORT (H,SG,BG,CORG,HR,LM2,LM4,I)
      ELSE IF(IOP.EQ.-8 .OR. IOP.EQ.-23) THEN
         CALL BETOR3 (H,SG,BG,HR,LM2,LM4,I)
      ELSE IF(IOP.EQ.-9) THEN
         CALL BETLOW (H,SG,BG,LM2,LM4)
      ENDIF
C     TWO-CENTER ONE-ELECTRON ENERGY.
      EHA    = ZERO
      EHB    = ZERO
      CALL ESCF (EHA,NORBS,PA,H,LM4)
      IF(UHF) THEN
         CALL ESCF (EHB,NORBS,PB,H,LM4)
      ELSE
         EHB = EHA
      ENDIF
      EE(L)  = TWO*(EHA+EHB)
  140 CONTINUE
C     RESET MATRIX ELEMENTS TO REFERENCE VALUES.
      COORDG(K,I) = COORD(K,I)
      CALL RESET2 (S,B,COR,SG,BG,CORG,LM2,LM4,I)
C     CONTRIBUTION TO THE NUMERICAL DERIVATIVE.
      DER    = (EE(1)-EE(2))*EVCAL*RDEL
C     IF(NPRINT.GT.5) THEN
C        WRITE(NB6,560) I,K,EE(1),EE(2),DER
C     ENDIF
CMIC$ GUARD
      CG(K,I) = CG(K,I)+DER
C *** IMPOSE SYMMETRY EQUIVALENCIES.
      IF(MSYM.GT.0) THEN
C        ABELIAN POINT GROUPS EXCEPT D2H.
         IF(MSYM.LT.3 .OR. IEL(MSYM).GT.3) THEN
            DO 150 MM=1,MSYM
            MI     = ISYM(MM,I)
            IF(MI.EQ.I .OR. IKSYMM(K,MI).EQ.1) GO TO 150
            MEL    = IEL(MM)
            CG(K,MI) = CG(K,MI)+DER*IELSYM(K,MEL)
            IKSYMM(K,MI) = 1
C           IF(NPRINT.GT.5) THEN
C              WRITE(NB6,570) I,K,MSYM,MM,MI,MEL,CG(K,MI)
C           ENDIF
  150       CONTINUE
         ELSE
C        SPECIAL SECTION FOR D2H.
            MIH(1) = ISYM(1,I)
            MIH(2) = ISYM(2,I)
            MIH(3) = ISYM(3,I)
            MIH(4) = ISYM(3,MIH(2))
            MIH(5) = ISYM(3,MIH(1))
            MIH(6) = ISYM(2,MIH(1))
            MIH(7) = ISYM(3,MIH(6))
            DO 160 MM=1,7
            MI     = MIH(MM)
            IF(MI.EQ.I .OR. IKSYMM(K,MI).EQ.1) GO TO 160
            CG(K,MI) = CG(K,MI)+DER*IELSYM(K,MM)
            IKSYMM(K,MI) = 1
C           IF(NPRINT.GT.5) THEN
C              WRITE(NB6,570) I,K,MSYM,MM,MI,MM,CG(K,MI)
C           ENDIF
  160       CONTINUE
         ENDIF
      ENDIF
CMIC$ END GUARD
  180 CONTINUE
  200 CONTINUE
C$OMP END DO
C$OMP END PARALLEL
      RETURN
  500 FORMAT(' DCART2: EH',F20.10)
  510 FORMAT(' DCART2: ICOUNT',10I6)
C 520 FORMAT(' DCART2: HR',/(1X,10F10.5))
C 530 FORMAT(' DCART2: ORTHOGONALIZATION CORRECTIONS'/)
C 540 FORMAT(' DCART2: COORD',3F20.10)
C 550 FORMAT(' DCART2: I,K,L,COORD',3I5,3F20.10)
C 560 FORMAT(' DCART2: I,K,EE(1/2),DER',2I5,3F20.10)
C 570 FORMAT(' DCART2: I,K,MSYM,MM,MI,MEL,CG()',6I5,F20.10)
      END
