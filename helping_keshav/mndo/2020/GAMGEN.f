      SUBROUTINE GAMGEN
C     *
C     TABULATION OF ERROR FUNCTIONS F(M,T).
C     INDEX M RANGES BETWEEN 0 AND MMAX-1.
C     ARGUMENT T RANGES BETWEEN 0.00 AND AN UPPER LIMIT (MAXFMT-1)*0.05.
C     ARGUMENT T ASSUMES MAXFMT EQUIDISTANT VALUES IN STEPS OF 0.05.
C     *
C     THE TABLES ARE USED FOR INTERPOLATION DURING INTEGRAL EVALUATION.
C     TABULATION AND INTERPOLATION ARE TURNED OFF IF MAXFMT IS NEGATIVE.
C     IN THIS CASE, F(M,T) IS COMPUTED AS NEEDED BY CALLING FMTGEN.
C     *
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (PT05=0.05D0)
      PARAMETER (PT15=0.15D0)
      PARAMETER (PT184=0.184D0)
      PARAMETER (FOUR=4.00D0)
      PARAMETER (SIX=6.00D0)
      COMMON
     ./FMGTO1/ XLIM,XMAX
     ./INOPT2/ IN2(300)
     ./MATRIX/ C(1200,5)
     ./NBFILE/ NBF(20)
      DIMENSION F(5)
      DIMENSION Y(404)
C *** INITIALIZATION.
      CALL FMTSET
C *** DEFINE THE LIMITS MAXFMT AND MMAX (SEE ABOVE).
C     THE ARRAY C(3*MAXFMT,MMAX) MUST BE DIMENSIONED CORRESPONDINGLY.
C     MMAX=5 IS SUFFICIENT FOR THIS CODE. MMAX=7 IS POSSIBLE.
C     INTERPOLATION WILL BE FEASIBLE UP TO THE ARGUMENT XMAX.
      MAXFMT = IN2(224)
      IF(MAXFMT.EQ.0) MAXFMT=400
      IF(MAXFMT.GT.400) MAXFMT=400
      XMAX   = DBLE(MAXFMT-2)*PT05
      MAXFM2 = MAXFMT+MAXFMT
      MMAX   = 5
C *** ASYMPTOTIC LIMIT FOR ARGUMENT X=T DURING INTEGRAL EVALUATION.
C     A SIMPLE ASYMPTOTIC FORMULA IS APPLIED ABOVE X=XLIM.
C     AN INTERPOLATION APPROACH IS ADOPTED BELOW X=XMAX.
C     THE ERROR FUNCTION IS COMPUTED VIA FMTGEN FOR XMAX < X < XLIM.
      LIMFMT = IN2(225)
      IF(LIMFMT.EQ.0) LIMFMT=20
      XLIM   = DBLE(LIMFMT)
C *** DEBUG PRINT.
      JPRINT = IN2(42)
      IF(JPRINT.GT.5) THEN
         NB6 = NBF(6)
         WRITE(NB6,500) MAXFMT,XMAX,XLIM
      ENDIF
C *** GENERATE THE DESIRED F(M,T) FOR THE COMPLETE RANGE.
C     COMPUTE F(0,T) THROUGH F(MMAX-1,T) BY CALLS TO FMTGEN.
C     THE RETURNED FUNCTION VALUES ARE SAVED IN AUXILIARY ARRAYS.
      IF(MAXFMT.LT.0) RETURN
      T      = -PT15
      DO 10 I=1,MAXFMT+4
      T      = T+PT05
      CALL FMTGEN(F,T,MMAX,ICK)
      C(I,2:MMAX) = F(1:MMAX-1)
      Y(I)        = F(MMAX)
   10 CONTINUE
C *** COMPUTE THE INTERPOLATION TABLE WITH THE VALUES AVAILABLE.
C     K INDEXES THE VALUE OF M IN F(M,T).
C     I INDEXES THE INTERPOLATION TABLE (C).
C     J INDEXES THE STORED VALUES OF F(M,T).
      DO 30 K=1,MMAX
      K1     = K+1
      DO 20 I=1,MAXFMT
      J      = I+2
C     INTEGRALS FOR K=1...MMAX-1 IN C, PROCEED AS NORMAL.
      IF(K.LT.MMAX) THEN
         T1 = C(J+1,K1)+C(J-1,K1)-(C(J,K1)+C(J,K1))
         T2 = SIX*C(J,K1)-FOUR*(C(J+1,K1)+C(J-1,K1))+C(J-2,K1)+C(J+2,K1)
         C(I,K)        = C(J,K1)
         C(I+MAXFMT,K) = C(J+1,K1)-C(J,K1)
         C(I+MAXFM2,K) = (T1-PT184*T2)/SIX
      ELSE
C     INTEGRALS FOR K=MMAX IN Y, USE ALTERNATE CODE.
         T1 = Y(J+1)+Y(J-1)-(Y(J)+Y(J))
         T2 = SIX*Y(J)-FOUR*(Y(J+1)+Y(J-1))+Y(J-2)+Y(J+2)
         C(I,K)        = Y(J)
         C(I+MAXFMT,K) = Y(J+1)-Y(J)
         C(I+MAXFM2,K) = (T1-PT184*T2)/SIX
      ENDIF
   20 CONTINUE
   30 CONTINUE
      RETURN
  500 FORMAT(//1X,'DEBUG PRINT FROM SUBROUTINE GAMGEN.',
     1       / 1X,'NUMBER OF INTERPOLATION POINTS (MAXFMT)   :',I6,
     2       / 1X,'MAXIMUM ARGUMENT IN INTERPOLATION (XMAX)  :',F10.3,
     3       / 1X,'STARTING POINT OF ASYMPTOTIC REGION (XLIM):',F10.3)
      END
C     ******************************************************************
      SUBROUTINE FMTSET
C     *
C     INITIALIZATION FOR COMPUTATION OF AUXILIARY FUNCTION Fm(t).
C     *
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (TEN=10.0D0)
      PARAMETER (TENM9=10.0D-09)
      PARAMETER (F20=20.0D0)
      PARAMETER (F42=42.0D0)
      COMMON
     ./CONSTF/ A0,AFACT,EV,EVCAL,PI,W1,W2,BIGEXP
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./FMGTO / GA(17),FMZ(17),TOL,CUTZS,CUTSM,CUTML
     ./INOPT2/ IN2(300)
      DIMENSION F(2)
C *** INPUT OPTIONS.
      ICUTZS = IN2(221)
      ITOLFM = IN2(222)
      ICUTML = IN2(223)
C *** FILL GAMMA FUNCTION ARRAY.
      GA(1)  = SQRT(PI)
      DO 10 I=2,17
      GA(I)  = GA(I-1)*PT5*DBLE(2*I-3)
   10 CONTINUE
C *** FILL FMZ (FOR ZERO ARGUMENT).
      FMZ(1) = ONE
      DO 20 I=2,17
      FMZ(I) = ONE/DBLE(2*I-1)
   20 CONTINUE
C
C *** DEFINE CUTOFFS.
C     CUTZS = CUTOFF, ZERO TO SMALL.
C     CUTSM = CUTOFF, SMALL TO MEDIUM.
C     CUTML = CUTOFF, MEDIUM TO LARGE.
C *** CUTZS IS OBTAINED FROM ICUTZS.
      CUTZS = ZERO
      IF(ICUTZS.GT.0) CUTZS = TEN**(-ICUTZS)
C *** CUTSM IS DETERMINED FROM ITOLFM.
C     ITOLFM SPECIFIES THE DESIRED ACCURACY OF THE ASYMPTOTIC
C     EXPANSION. ROUTINE FMTGEN IS CALLED TO CHECK THE VIABILITY
C     OF THE ASYMPTOTIC EXPANSION FOR VARIOUS VALUES OF CUTSM.
      TOL    = TENM9
      CUTSM  = TEN
      CUTML  = F42
      IF(ITOLFM.GT.0) THEN
         TOL = TEN**(-ITOLFM)
         T   = F20
   30    CALL FMTGEN (F,T,1,ICK)
         IF(ICK.NE.0) THEN
            CUTSM = T+ONE
         ELSE
            T = T-ONE
            IF(NINT(T).GE.NINT(TEN)) GO TO 30
         ENDIF
      ENDIF
C *** CUTML IS TAKEN FROM ICUTML.
      CUTML  = F42
      IF(ICUTML.GT.0) CUTML = DBLE(ICUTML)
      RETURN
      END
C     ******************************************************************
      SUBROUTINE FMTGEN (F,T,M,ICK)
C     *
C     COMPUTE AUXILIARY FUNCTION Fm(t) FOR GAUSSIAN INTEGRALS.
C     *
C     NOTATION. I=INPUT, O=OUTPUT, S=SCRATCH.
C     F(M)      ARRAY OF AUXILIARY FUNCTION VALUES (O).
C     T         ARGUMENT (I).
C     M         NUMBER OF FUNCTION VALUES COMPUTED (I).
C     ICK       ERROR FLAG (O). NO ERROR FOR ICK=0.
C     *
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON
     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
     ./FMGTO / GA(17),FMZ(17),TOL,CUTZS,CUTSM,CUTML
     ./NBFILE/ NBF(20)
      DIMENSION F(M)
C *** INITIALIZATION.
      ICK = 0
      NB6 = NBF(6)
C *** VANISHING ARGUMENT T (LESS OR EQUAL TO CUTZS, DEFAULT 0).
      IF(ABS(T).LE.CUTZS) THEN
         F(1:M) = FMZ(1:M)
         RETURN
      ENDIF
C *** EVALUATION OF THE EXPONENTIAL FUNCTION.
      TEXP   = ZERO
      IF(ABS(T).GE.CUTML) GO TO 70
      TEXP   = EXP(-T)
      IF(ABS(T).GE.CUTSM) GO TO 30
C *** SMALL ARGUMENT T (BETWEEN CUTZS AND CUTSM, DEFAULT 10).
      A      = DBLE(M-1)+PT5
      TERM   = ONE/A
      SUM    = TERM
      DO 10 I=2,400
      A      = A+ONE
      TERM   = TERM*T/A
      SUM    = SUM+TERM
      IF(ABS(TERM/SUM).LT.TOL) GO TO 20
   10 CONTINUE
      WRITE(NB6,500) T
      STOP 'FMTGEN'
   20 F(M)   = PT5*SUM*TEXP
      GO TO 80
C *** MEDIUM ARGUMENT T (BETWEEN CUTSM AND CUTML).
   30 TX     = ONE/T
      APPROX = PT5*GA(1)*SQRT(TX)*TX**(M-1)
      IF(M.GT.1) THEN
         DO 40 I=2,M
         APPROX = APPROX*(DBLE(M-I)+PT5)
   40    CONTINUE
      ENDIF
      FIMULT = PT5*TEXP*TX
      SUM    = ZERO
      IF(FIMULT.EQ.ZERO) GO TO 60
      FIPROP = FIMULT/APPROX
      TERM   = ONE
      SUM    = ONE
      NOTRMS = INT(T)+M-1
      DO 50 I=2,NOTRMS
      TERM   = TERM*TX*(DBLE(M-I)+PT5)
      SUM    = SUM+TERM
      IF(ABS(TERM*FIPROP/SUM).LE.TOL) GO TO 60
   50 CONTINUE
      ICK    = 1
      RETURN
   60 F(M)   = APPROX-FIMULT*SUM
      GO TO 80
C *** LARGE ARGUMENT T (ABOVE CUTML, DEFAULT 42).
   70 TX     = DBLE(M)-PT5
      F(M)   = PT5*GA(M)/(T**TX)
C *** RECUR DOWNWARDS TO F(1)
   80 TX     = T+T
      IF(M.GT.1) THEN
         DO 90 I=1,M-1
         F(M-I) = (TX*F(M-I+1)+TEXP)/DBLE(2*(M-I)-1)
   90    CONTINUE
      ENDIF
      RETURN
  500 FORMAT(1X,'FAILURE IN FMTGEN FOR ARGUMENT T =',D20.14)
      END
