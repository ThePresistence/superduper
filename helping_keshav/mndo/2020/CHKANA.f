      SUBROUTINE CHKANA (LEN)
C     *
C     CHECKS FOR ANALYTICAL DERIVATIVE CALCULATION.
C     *
C     THIS ROUTINE CAN ONLY BE CALLED AFTER SUBROUTINE INPUT
C     SINCE THE CHECKS PARTLY REFER TO MOLECULE-SPECIFIC DATA.
C     THE INPUT VARIABLE LEN GIVES THE AVAILABLE BUFFER LENGTH.
C     *
      USE LIMIT, ONLY: LM1
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL AVAIL0,AVAIL1,AVAIL2,AVAIL3,AVAIL4,AVAIL5,AVAIL6
      LOGICAL UHF,LHAVPS
      COMMON
     ./ATOMS / NUMAT,NAT(LM1),NFIRST(LM1),NLAST(LM1)
     ./INOPT1/ IN1(300)
     ./INOPT2/ IN2(300)
     ./NBFILE/ NBF(20)
     ./ORBITS/ NUMB,NORBS,NMOS,NALPHA,NBETA
     ./SKIPA / ISKPA
     ./SKIPAF/ ISKPAF
     ./UHF   / UHF
C *** FILE NUMBERS.
      NB6    = NBF(6)
C *** DEFINE LOCAL VARIABLES FOR THIS ROUTINE.
      IOP    = IN2(2)
      JOP    = IN2(3)
      IPSANA = IN1(29)
      LINDMS = IN2(56)
C     LINDIA = IN2(57)
      ICOSMO = IN2(28)
      JPRINT = IN2(42)
      IMULT  = IN2(66)
      KCI    = IN2(77)
      IGRAD  = IN2(199)
C *** INITIALIZE CONTROL VARIABLES.
      ISKPA  = 0
      ISKPAF = 0
      IF(IMULT.GT.0 .AND. .NOT.UHF) ISKPA=1
      IF(IGRAD.EQ.1 .OR. KCI.GT.0)  ISKPA=1
C *** RETURN IF ANALYTICAL DERIVATIVES ARE NOT REQUESTED.
      IF(IPSANA.LT.0) RETURN
C *** DEFINE LOGICAL FLAGS FOR AVAILABILITY OF DERIVATIVES.
      AVAIL0 = IOP.LE.  0
      AVAIL1 = IOP.EQ.  0  .OR. IOP.EQ.-1 .OR. IOP.EQ.- 2 .OR.
     1         IOP.EQ.- 4  .OR. IOP.EQ.-7 .OR. IOP.EQ.-10 .OR.
     2         IOP.EQ.-12
      AVAIL2 = KCI.LE.1 .OR. KCI.GE.5
      AVAIL3 = IGRAD.NE.1
      AVAIL4 = LINDMS.LE.0
C     AVAIL4 = LINDMS.LE.0 .OR. (LINDMS.LE.3 .AND. LINDIA.EQ.1)
      AVAIL5 = LHAVPS()
      AVAIL6 = AVAIL0 .AND. AVAIL2 .AND. AVAIL3 .AND. AVAIL5
C
C *** DETERMINE MAXIMUM ATOMIC NUMBER.
      NATMAX = 0
      IF(JOP.GE.2) THEN
         DO 10 I=1,NUMAT
         IF(NAT(I).NE.86) NATMAX = MAX(NAT(I),NATMAX)
   10    CONTINUE
      ENDIF
C *** DEFINE DEFAULT SELECTIONS FOR ANALYTICAL DERIVATIVES.
C *** CHOSEN BY DEFAULT ONLY IF AN APPROXIMATE ESTIMATE INDICATES
C     THAT THERE IS ENOUGH MEMORY AVAILABLE FOR AN EFFICIENT
C     ANALYTICAL COMPUTATION. ASSUMPTIONS ON UPPER LIMITS:
C      2*NORBS**2 WORDS FOR GEOMETRY OPTIMIZATION (ETC).
C      5*NORBS**2 WORDS FOR IN-CORE RHF-SCF TREATMENT.
C      8*NORBS**2 WORDS FOR IN-CORE UHF-SCF TREATMENT.
C     20*NORBS**2 WORDS FOR EFFICIENT FIRST  DERIVATIVES.
C     30*NORBS**2 WORDS FOR EFFICIENT SECOND DERIVATIVES.
C *** NOTE THAT THE ACTUAL MEMORY REQUIREMENTS ARE CHECKED MORE
C     PRECISELY IN SUBROUTINE DYNSCR AND IN THE ANALYTICAL
C     DERIVATIVE CODE.
C *** ANALYTICAL GRADIENT FOR HALF-ELECTRON ROHF AND CI CALCULATIONS.
      IF(IPSANA.EQ.0 .AND. AVAIL6) THEN
         IF((IMULT.GT.0 .AND. .NOT.UHF) .OR. KCI.GE.1) THEN
            LM5EST = 27*NORBS**2
            IF(LM5EST.LT.LEN) THEN
               IPSANA = 1
               IF(JPRINT.GE.0) WRITE(NB6,400)
            ENDIF
         ENDIF
      ENDIF
C *** ANALYTICAL SECOND DERIVATIVES FOR VARIATIONAL MNDO-TYPE METHODS.
      IF(IPSANA.EQ.0 .AND. AVAIL6) THEN
         IF(JOP.GE.2 .AND. AVAIL1) THEN
            LM5EST = 37*NORBS**2
            IF(UHF) LM5EST = 40*NORBS**2
            IF(LM5EST.LT.LEN .AND. ICOSMO.LE.0 .AND. NATMAX.LE.54) THEN
               IPSANA = 1
               IF(JPRINT.GE.0) WRITE(NB6,410)
            ENDIF
         ENDIF
      ENDIF
C *** CHECK WHETHER NMR CODE IS EXCLUDED FROM THE DISTRIBUTION.
      IF(NMR.NE.0 .AND. .NOT.AVAIL5) THEN
         NMR = 0
         IF(JPRINT.GE.0) WRITE(NB6,500)
      ENDIF
C *** CHECK WHETHER ANALYTICAL DERIVATIVE CODE IS EXCLUDED FROM THE
C     DISTRIBUTION.
      IF(IPSANA.GT.0 .AND. .NOT.AVAIL5) THEN
         IPSANA = 0
         IF(JPRINT.GE.0) WRITE(NB6,501)
      ENDIF
C *** CHECK WHETHER ANALYTICAL CALCULATION IS EXCLUDED VIA INPUT.
      IF(IPSANA.GT.0 .AND. .NOT.AVAIL3) THEN
         IPSANA = 0
         IF(JPRINT.GE.0) WRITE(NB6,505)
      ENDIF
C *** ANALYTICAL GRADIENT IS NOT YET AVAILABLE FOR PERT CALCULATIONS.
      IF(IPSANA.GT.0 .AND. .NOT.AVAIL2) THEN
         IPSANA = 0
         IF(JPRINT.GE.0) WRITE(NB6,510) KCI
      ENDIF
C *** ANALYTICAL GRADIENT IS NOT YET AVAILABLE FOR NON-NDDO METHODS.
      IF(IPSANA.GT.0 .AND. IOP.GT.0) THEN
         IPSANA = 0
         IF(JPRINT.GE.0) WRITE(NB6,520) IOP
      ENDIF
C *** ANALYTICAL GRADIENT IS NOT YET AVAILABLE FOR CGDMS SEARCH.
      IF(IPSANA.GT.0 .AND. .NOT.AVAIL4) THEN
         IPSANA = 0
         IF(JPRINT.GE.0) WRITE(NB6,525)
      ENDIF
C *** ANALYTICAL SECOND DERIVATIVES ARE NOT YET AVAILABLE FOR COSMO.
      IF(IPSANA.GT.0 .AND. ICOSMO.GT.0 .AND. ISKPA.EQ.0 .AND.
     1   JOP.GE.2) THEN
         IPSANA = 0
         IF(JPRINT.GE.0) WRITE(NB6,530)
      ENDIF
C *** ANALYTICAL SECOND DERIVATIVES ARE NOT AVAILABLE FOR MOLECULES
C     CONTAINING HEAVY ATOMS BEYOND XENON.
      IF(IPSANA.GT.0 .AND. JOP.GE.2 .AND. NATMAX.GT.54) THEN
         IPSANA = 0
         IF(JPRINT.GE.0) WRITE(NB6,540)
      ENDIF
      IF(JPRINT.GT.-5 .AND. IPSANA.LT.IN1(29)) WRITE(NB6,550) ISKPA
C
C *** SELECT TYPE OF DERIVATIVE CALCULATION.
C     ISKPA  DEFINES THE MODE OF GRADIENT CALCULATION.
C       0    FAST FINITE DIFFERENCES VIA INTEGRAL RECALCULATION
C       1    SLOW FINITE DIFFERENCES VIA FULL CALCULATIONS
C      -1    FULL ANALYTIC EVALUATION FOR NON-VARIATIONAL METHODS (CPHF)
C      -2    FULL ANALYTIC EVALUATION FOR VARIATIONAL METHODS (NO CPHF)
C      -3    HYBRID ANALYTIC EVALUATION FOR ALL METHODS (CPHF AS NEEDED)
C      -3    WITH NUMERICAL INTEGRAL AND FOCK MATRIX DERIVATIVES
C     ISKPAF DEFINES THE MODE OF SECOND DERIVATIVE CALCULATION.
C       0    FINITE DIFFERENCES OF GRADIENTS
C      -2    FULL ANALYTIC EVALUATION FOR VARIATIONAL METHODS
      IF(IPSANA.GT.0) THEN
         IF(JOP.GE.2 .AND. AVAIL1) THEN
            ISKPAF = ISKPA-2
         ENDIF
         IF(AVAIL1 .AND. IGRAD.NE.-3 .AND. KCI.LE.5) THEN
            ISKPA  = ISKPA-2
         ELSE IF(KCI.GE.6) THEN
            ISKPA  = -4
         ELSE
            ISKPA  = -3
         ENDIF
         NMOS = NORBS
      ENDIF
C *** REDEFINE INPUT OPTION IN2(29)=IPSANA.
C     IN2(29) = IN1(29) UNLESS IPSANA HAS BEEN RESET ABOVE.
      IN2(29) = IPSANA
C *** DEBUG PRINT.
      IF(JPRINT.GE.0) WRITE(NB6,560) IPSANA,ISKPA,ISKPAF
      RETURN
  400 FORMAT(/  1X,'ANALYTICAL GRADIENT SELECTED BY DEFAULT.')
  410 FORMAT(/  1X,'ANALYTICAL SECOND DERIVATIVES SELECTED BY ',
     1             'DEFAULT.')
  500 FORMAT(/  1X,'NMR CODE NOT INCLUDED IN THIS DISTRIBUTION.')
  501 FORMAT(/  1X,'ANALYTICAL DERIVATIVE CODE NOT INCLUDED IN THIS',
     1             'DISTRIBUTION.')
  505 FORMAT(/  1X,'USE OF ANALYTICAL DERIVATIVES EXCLUDED BY INPUT.')
  510 FORMAT(/  1X,'ANALYTICAL DERIVATIVES NOT YET AVAILABLE FOR ',
     1             'CORRELATION TREATMENT SELECTED BY KCI =',I3)
  520 FORMAT(/  1X,'ANALYTICAL DERIVATIVES NOT YET AVAILABLE FOR ',
     1             'METHOD SELECTED BY IOP =',I3)
  525 FORMAT(/  1X,'ANALYTICAL DERIVATIVES NOT YET AVAILABLE FOR ',
     1             'CONJUGATE GRADIENT DENSITY MATRIX SEARCH.')
  530 FORMAT(/  1X,'ANALYTICAL SECOND DERIVATIVES NOT YET AVAILABLE ',
     1             'FOR COSMO.')
  540 FORMAT(/  1X,'ANALYTICAL SECOND DERIVATIVES NOT AVAILABLE FOR',
     1          1X,'MOLECULES CONTAINING HEAVY ATOMS BEYOND XENON.',
     2       /  1X,'THEY REQUIRE OVERLAP INTEGRALS FOR SLATER ORBITALS',
     3          1X,'WITH MAIN QUANTUM NUMBER N=8 (NOT IMPLEMENTED).')
  550 FORMAT(/  1X,'OPTIONS ARE REDEFINED TO DO A NON-ANALYTICAL ',
     1             'CALCULATION. IPSANA = 0, ISKPA =',I2)
  560 FORMAT(/  1X,'CHKANA: IPSANA =',I3,', ISKPA =',I3,', ISKPAF =',I3)
      END
