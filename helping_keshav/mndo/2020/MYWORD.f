      LOGICAL FUNCTION MYWORD (KEYWRD,TESTWD)
C     *
C     KEYWORD HANDLING ACCORDING TO MOPAC AND MNDO97 CONVENTIONS.
C     ADAPTED FROM MOPAC(6.0) WRITTEN BY J.J.P.STEWART.
C     GENERALIZED TO THE CONVENTIONS USED IN MNDO97.
C     *
C     MYWORD = .TRUE.  IF THE STRING TESTWD APPEARS IN KEYWRD.
C     MYWORD = .FALSE. OTHERWISE.
C     *
C     MYWORD IS CALLED ONLY FROM KEYPRT (MOPAC-TYPE AND KEYWORD INPUT).
C     *
C     MYWORD REPLACES THE STRING TESTWD IN KEYWRD BY BLANKS.
C     MYWORD ALSO REPLACES ANY VALUES APPENDED VIA '=' BY BLANKS.
C     ASSIGNMENTS VIA '=' MAY CONTAIN EMBEDDING BLANKS (E.G. ' = ').
C     REPLACEMENTS ARE DONE RECURSIVELY TO REPLACE ALL STRINGS TESTWD.
C     *
      CHARACTER*(*) KEYWRD,TESTWD
      CHARACTER*800 COPY
C *** INITIALIZATION.
      MYWORD = .FALSE.
      ICOUNT = 0
      LKEY   = LEN(KEYWRD)
C *** CHECK WHETHER STRING TESTWD APPEARS (STARTING AT POSITION J).
C     RETURN IF THIS IS NOT THE CASE.
   10 J      = INDEX(KEYWRD,TESTWD)
      IF(J.EQ.0) RETURN
      ICOUNT = ICOUNT+1
C     STRING TESTWD MUST BE PRECEDED BY A BLANK OR START WITH A BLANK.
C     IF NOT, STRING TESTWD IS EMBEDDED AND THUS NOT ACCEPTABLE.
C     IN THIS CASE, CONTINUE THE SEARCH FOR AN UNEMBEDDED STRING TESTWD
C     UNTIL FOUND (STARTING AT POSITION J). RETURN IF NOT FOUND.
      IF(J.GT.1 .AND. TESTWD(1:1).NE.' ') THEN
         LKEY = LEN(KEYWRD)
         LWD  = LEN(TESTWD)
         COPY = KEYWRD
   20    JM1  = J-1
         IF(KEYWRD(JM1:JM1).NE.' ') THEN
            DO 30 K=J,J+LWD-1
            COPY(K:K) = ' '
   30       CONTINUE
            J = INDEX(COPY(:LKEY),TESTWD)
            IF(J.EQ.0) RETURN
            GO TO 20
         ENDIF
      ENDIF
C     UNEMBEDDED STRING TESTWD FOUND (STARTING AT POSITION J).
      MYWORD = .TRUE.
C *** REPLACE STRING TESTWD AND ANY ASSOCIATE VALUES ( = ..) BY BLANKS.
C     POSITIONS J...N IN KEYWRD ARE REPLACED. FIND N.
C     ACCOUNT FOR LEADING BLANKS.
      N = J
      DO 40 K=N,LKEY
      IF(KEYWRD(K:K).NE.' ') GO TO 50
   40 CONTINUE
   50 N = K
C     ACCOUNT FOR CHARACTERS WHICH ARE NEITHER ' ' NOR '='.
C     DETERMINE THE NUMBER OF SUCH CHARACTERS (LENGTH).
      DO 60 K=N,LKEY
      LENGTH = K-N
      IF(KEYWRD(K:K).EQ.'=') GO TO 90
      IF(KEYWRD(K:K).EQ.' ') GO TO 70
   60 CONTINUE
   70 N = K
C     ACCOUNT FOR BLANKS THEREAFTER.
      DO 80 K=N,LKEY
      IF(KEYWRD(K:K).EQ.'=') GO TO 90
      IF(KEYWRD(K:K).NE.' ') GO TO 130
   80 CONTINUE
C     ACCOUNT FOR BLANKS AFTER '=' AT POSITION N.
   90 N = K
      DO 100 K=N+1,LKEY
      IF(KEYWRD(K:K).NE.' ') GO TO 110
  100 CONTINUE
  110 N = K
C     ACCOUNT FOR NON-BLANK CHARACTERS AFTER '='.
      DO 120 K=N,LKEY
      IF(KEYWRD(K:K).EQ.' ') GO TO 130
  120 CONTINUE
  130 N = K-1
C *** REPLACE POSITIONS J...N IN KEYWRD BY BLANKS.
C     ATTEMPT RECURSIVE REMOVAL OF ALL STRINGS TESTWD (GO TO 10).
C     CHECK ON LENGTH/LENREF TO BE CONSISTENT IN THIS ATTEMPT.
      IF(ICOUNT.EQ.1) LENREF=LENGTH
      IF(LENREF.EQ.LENGTH) THEN
         DO 140 K=J,MIN(N,LKEY)
         KEYWRD(K:K) = ' '
  140    CONTINUE
         GO TO 10
      ENDIF
      RETURN
      END
