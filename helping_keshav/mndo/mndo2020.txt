      Input Description for Program MNDO.
      Version 8.0 of 15 August 2019.

      By Walter Thiel, Max-Planck-Institut fuer Kohlenforschung,
      Kaiser-Wilhelm-Platz 1, D-45470 Muelheim, Germany.

      Contents:

      A.  Selected references
      B.  General overview
      C.  Outline of standard input
      D.  Description of standard input
      E.  Outline of keyword-oriented input
      F.  MNDO keywords
      G.  MOPAC keywords
      H.  File dictionary
      I.  Input of external parameters
      J.  Input of external data for HDLC optimizer
      K.  Input for molecular dynamics and surface hopping driver
      L.  Input for Born-Oppenheimer ground-state molecular dynamics

      ******************************************************************

 A.   Selected references.

      MNDO      M.J.S.Dewar and W.Thiel, J.Am.Chem.Soc. 99, 4899 (1977).
      MNDOC     W.Thiel, J.Am.Chem.Soc. 103, 1413, 1420 (1981).
      MNDO/d    W.Thiel and A.A.Voityuk, Theor.Chim.Acta 81, 391 (1992).
                W.Thiel and A.A.Voityuk, J.Phys.Chem. 100, 616 (1996).
      AM1       M.J.S.Dewar, E.G.Zoebisch, E.F.Healy and J.J.P.Stewart,
                J.Am.Chem.Soc. 107, 3902 (1985).
      PM3       J.J.P.Stewart, J.Comput.Chem. 10, 209 (1989).
      OM1       M.Kolb and W.Thiel, J.Comput.Chem. 14, 775 (1993).
      OM2       W.Weber, Ph.D. Thesis, University of Zurich, 1996.
                W.Thiel and W.Weber, Theor.Chem.Acc. 103, 495 (2000).
      OM3       M.Scholten, Ph.D. Thesis, University of Dusseldorf, 2003.
      OMx       P.O.Dral, X.Wu, L.Spoerkel, A.Koslowski, W.Weber, R.Steiger,
                M.Scholten and W.Thiel, J.Chem.Theory Comput. 12, 1082 (2016).
      OMx       P.O.Dral, X.Wu, L.Spoerkel, A.Koslowski and W.Thiel,
                J.Chem.Theory Comput. 12, 1097 (2016).
      ODMx      P.O.Dral, X.Wu and W.Thiel, J.Chem.Theory Comput.
                15, 1743 (2019).
      MINDO/3   R.C.Bingham, M.J.S.Dewar and D.H.Lo, J.Am.Chem.Soc.
                97, 1285 (1975).
      CNDO/2    J.A.Pople and G.A.Segal, J.Chem.Phys. 44, 3289 (1966).

      ******************************************************************

 B.   General overview.

      There are three modes of input for this program.

      - Standard input based on standard MNDO-style numerical data.
      - Keyword  input based on keywords and MNDO-style numerical data.
      - MOPAC    input based on keywords and MOPAC-style numerical data.

      The standard input allows the user to access all options of the
      program. It is fully specified in sections C-D (see below).

      The keyword input is equivalent to the standard input. It consists
      of a keyword section (up to ten lines of MNDO keywords and two
      lines of text) and standard MNDO-style numerical data for the
      remainder. MNDO keywords have the format <keyword>=<value>
      where <keyword> denotes the name of any input variable in the
      standard input (as described below), and <value> is the actual
      input value (see section F).

      The MOPAC input is provided to allow the use of MOPAC input files.
      It consists of a keyword section (up to three lines of keywords
      and two lines of text) and MOPAC-style data for the remainder.
      Most common keywords are recognized by this program and converted
      to options of the standard input. Some keywords are not available.
      In this case the program will print an appropriate message and
      then either stop or ignore the keyword. The treatment of MOPAC
      keywords is specified in section G of this input description.
      The MOPAC input for geometry and symmetry (etc) is not described
      here since it is the same as in MOPAC(6.0), see MOPAC manual for
      details. MNDO keywords can be combined with MOPAC keywords.

      The program automatically determines the mode of input from the
      contents of the input file. It checks the first three lines for
      characters A-Z or a-z (columns 1-80 of lines 1-2 and columns 1-30
      of line 3) and assigns the mode of input as follows:
      - Standard input: No characters A-Z or a-z are found.
      - Keyword  input: Characters A-Z or a-z appear, and there are
                        only MNDO keywords.
      - MOPAC    input: Characters A-Z or a-z appear, and there is
                        at least one genuine MOPAC keyword.

      It is recommended to use keyword-oriented input for the options.
      The more complicated formatted input is described first in the
      following sections C-D, and the trivial relation to keywords is
      addressed thereafter in sections E-G.

      ******************************************************************

 C.   Outline of standard input.

      In this section, the standard input is summarized briefly.
      A more detailed description will be given in the next section.

      The standard input consists of the following parts.

      1.    First line with general options.
      2.    Second line with general options.
      2.1   Special options for optimization etc           (inp21=1).
      2.2   Special options for eigenvector following      (inp22=1).
      2.3   Special options for analytic derivatives       (inp23=1).
      2.4   Special options for linear scaling SCF         (inp24=1).
      2.5   Special options for conventional SCF           (inp25=1).
      3.    Data for the first molecule.
      3.1   Title line, including special options for the molecule.
      3.2   Atomic numbers and coordinates, one line per atom.
      3.3   Symmetry conditions                             (ksym=1).
      3.4   Definition of a reaction path or grid        (kgeom=1-4).
      3.5   Definition of fragments for SCF           (ktrial=30-39).
      3.6   Definition of orbital occupations          (abs(iuhf)=3).
      3.7   Data for configuration interaction          (abs(kci)=1).
      3.8   Data for perturbation treatment           (abs(kci)=2-4).
      3.9   Data for GUGA configuration interaction     (abs(kci)=5).
      3.10  Data for CIS and RPA excited-state module (abs(kci)=6-8).
      3.11  Data for reference properties              (inrefd.ne.0).
      3.12  Data for COSMO solvation treatment       (abs(icosmo)>2).
      3.13  Data for external points                     (mminp=1,2).
      3.14  Data for NMR chemical shifts                  (nmrnuc=6).
      3.15  Definition of atomic masses        (jop=2-6 and kmass>0).
      3.16  Data for HDLC optimizer                          (ief<0).
      4.    Data for the following molecules (optional).

      Computations for an arbitrary number of molecules can be carried
      out in a single job. The input (4) for each new molecule normally
      consists of a new set of data (3) (see also option nexmol). The
      job is terminated if the title line (3.1) for the next molecule
      has 99 in columns 1-2 or if an end-of-file is encountered when
      reading the title line.

      As indicated above, input for 2.1-2.5 and 3.3-3.16 is only needed
      when requested by the corresponding input option (see section D).

      Input for continuation jobs (options jop=0-2).
      In order to continue an uncompleted calculation, the input file
      for the corresponding molecule is resubmitted after setting
      option middle on line 2. The continuation job makes use of the
      information saved on file nb4 by the preceding job.

      ******************************************************************

 D.   Description of standard input.

      The standard input is generally formatted (Fortran conventions).
      Free format (Fortran) is available in several parts of the input.
      The relevant chapters (see 3.2-3.4, 3.6-3.13, and 3.15 below)
      start with a corresponding reminder.

      Input for options is normally described in section D as follows:
      First, a brief overview table of a given input line containing
      - Option: Name of the MNDO keyword for which input is provided.
      - No.: Internal number of keyword (in IN1/IN2 or XN1/XN2).
      - Columns: Location of input data on input line.
      - Format: Fortran input format.
      - Short description.
      Thereafter, a complete description of each option containing
      - Option: Name of the MNDO keyword for which input is provided.
      - Full description specifying all possible input values.

      Frequently used input options are often starred in the overview
      table. It is generally recommended to use the default values for
      options that are not starred. Default values are defined for all
      input options.

      The description of other input data normally contains:
      - Variable: Internal name under which the data are stored.
      - Columns: Location of input data on input line.
      - Format: Fortran input format.
      - Full description specifying all possible input values.


      1. ***** First line with general options *************************

      Option  No. Columns Format  Short description

      limit    1    1-5     i5    Time limit in seconds.
    * iop      2    6-10    i5    Choice of semiempirical SCF method.
    * jop      3   11-15    i5    Type of calculation.
    * igeom    4   16-20    i5    Type of geometrical coordinates.
    * iform    5   21-25    i5    Input format for molecular data.
      nexmol   6   26-30    i5    Choice of input for next molecule.
      mplib    7   31-32    i2    Option for using parallel code.
    * ief      8   33-34    i2    Choice of special geometry optimizers.
    * idiis    9   35-36    i2    DIIS extrapolation procedure for SCF.
    * inrefd  10   37-38    i2    Input and evaluation of reference data.
      iparok  11   39-40    i2    Definition of non-standard parameters.
      mminp   12   41-42    i2    Definition of external points.
    * nmr     13   43-44    i2    Computation of NMR chemical shifts.
    * nsav7   14   45-45    i1    Generation of a new input file nb7.
      nsav8   15   46-46    i1    Generation of an output file nb8.
      nsav9   16   47-47    i1    Generation of an output file nb9.
      nsav13  17   48-48    i1    Generation of an output file nb13.
      nsav15  18   49-49    i1    Generation of an output file nb15.
      nsav16  19   50-50    i1    Generation of an output file nb16.
      immok   20   51-52    i2    Molecular mechanics correction for peptides.
      ihbond  21   53-54    i2    Automatic recognition of hydrogen bonds.
      ifld1   22   55-56    i2    Calculation of electric properties.
      ifld2   23   57-58    i2    Definition of the applied electric field.
      ifld3   24   59-60    i2    Finite-field SCF convergence criterion.
      icuts   25   61-62    i2    OM2 cutoff for three-center terms (all).
      icutg   26   63-64    i2    OM2 cutoff for three-center terms (gradient).
      iexbas  27   65-66    i2    Choice of polarized basis set.
    * icosmo  28   67-68    i2    COSMO solvation model.
    * ipsana  29   69-70    i2    Global option for analytic derivatives.
      immdp   30   71-75    i5    Option for dispersion corrections.
      inac    31   76-80    i5    Enforce special modes of NACME calculation.


      Option  Full description

      limit   Time limit in seconds.
              =  0 Effectively no time limit imposed.
                   Default 10,000,000,000 seconds which is more than 300 years.
              = -1 Useful for testing restarts.
      iop     Choice of semiempirical SCF method.
              =-23 ODM3.
              =-22 ODM2.
              =-10 MNDO/d.
              =- 8 OM3.
              =- 7 PM3.
              =- 6 OM2.
              =- 5 OM1.
              =- 2 AM1.
              =- 1 MNDOC.
              =  0 MNDO.
              =  1 MINDO/3.
              =  2 CNDO/2.
              =  5 SCC-DFTB.
              =  6 SCC-DFTB with Jorgensens parameters for reproduction of
                   heats of formation.
              Special options for MNDO and MNDO/d.
              =- 3 MNDO/H with special treatment of hydrogen bonds.
              =- 4 MNDO with non-standard parameters which may be selected by
                   option iparok (see description of iparok for details).
                   Equivalent to iop=0 for iparok=0.
              =-13 MNDO/dH with special treatment of hydrogen bonds.
      jop     Type of calculation.
              =-3 Born-Oppenheimer ground state dynamics, starting geometry.
                  Further input required in the form of a namelist "dynvar.in".
                  See section L for a detailed description.
              =-2 Gradient calculation, input geometry.
              =-1 Standard calculation, input geometry.
              = 0 Optimization for energy minimum.
              = 1 Optimization for transition state.
              = 2 Force constant analysis for input geometry.
              = 3 Optimization for energy minimum and force constant analysis
                  for optimized geometry.
              = 4 Optimization for transition state and force constant analysis
                  for optimized geometry.
              = 5 Same as jop=2 initially. However, use jop=3 if the cartesian
                  gradient norm turns out to be too large (see option minitg).
              = 6 Same as jop=2 initially. However, use jop=4 if the cartesian
                  gradient norm turns out to be too large (see option minitg).
              *** Special convention for inrefd.ne.0:
              *** Input for jop may be overwritten when vibrational frequencies
              *** are used as reference data (id1=16,26,27).
              *** See chapter 3.11 for details.
      igeom   Type of geometrical coordinates used in the input file.
              = 0 Internal coordinates.
              = 1 Cartesian coordinates.
              *** igeom=1 is imposed by default for PDB input (ingeom=1).
      iform   Input format for molecular data (see sections 3.2-3.16).
              = 0 Formatted input as described below (Fortran).
              = 1 Input in free format (Fortran).
      nexmol  Choice of input for next molecule.
              =-1 Skip input of general options (before section 3) and
                  read only the new molecular data (section 3).
              = 1 Read complete set of data (sections 1-3).
              = 0 Use the default conventions of the program:
                  nexmol=-1 for standard input,
                  nexmol= 1 for keyword input and MOPAC input.
              *** When using standard input, nexmol=1 must always be included
                  in order to read complete data sets for each molecule.
      mplib   Option for using parallel code.
              Choice of message passing library and granularity.
              = 0 Sequential code is used.
              = 1 Use fine-grained parallel code with MPI library.
              = 2 Use fine-grained parallel code with PVM library.
              =-1 Use coarse-grained parallel code with MPI library.
              =-2 Use coarse-grained parallel code with PVM library.
              Fine-grained parallelization for:
              -   Direct SCF treatment.
              Coarse-grained parallelization for:
              -   Reaction paths and grids,
              -   finite-difference gradient,
              -   finite-difference force constants.
              *** Option valid only for parallel code.
              *** Input ignored for sequential code except for using
              *** simplified control routines in coarse-grained runs.
      ief     Choice of special geometry optimizers.
              = 0 Default procedures for optimizations,
                  do not use eigenvector following (ief > 0) or HDLC (ief < 0).
              = 1 Use eigenvector following in geometry optimizations for
                  energy minima and transition states.
                  Default values for all options.
                  No additional input required.
              = 2 Use eigenvector following in geometry optimizations for
                  energy minima and transition states, Newton-Raphson search.
                  Default options chosen for Newton-Raphson search.
                  No additional input required.
              = 3 Use eigenvector following in geometry optimizations for
                  energy minima and transition states.
                  Read input for all options on one separate line of input.
                  Detailed control of optimization strategy for expert users.
                  Input description see chapter 2.2.
              =-1 Use HDLC optimizer for energy minima and transition states.
                  Default values for all options.
                  No additional input required from section 2.2.
              =-3 Use HDLC optimizer for energy minima and transition states.
                  Read input for all options on one separate line of input.
                  Detailed control of optimization strategy for expert users.
                  Input description see chapter 2.2.
      idiis   DIIS extrapolation procedure for SCF.
              =-1 Do not use DIIS.
              = 0 Do not use DIIS by default, but apply DIIS if the
                  SCF procedure does not converge without using DIIS.
                  In this case, idiis=1 is set automatically.
              = 1 Use standard DIIS procedure.
              *** Positive input values of idiis define two control variables:
              n = mod(idiis,10): DIIS starts at SCF cycle n and is applied
                  in each SCF cycle thereafter (n=1...9).
              m = idiis/10 determines whether the diagonal elements of the
                  error matrix are scaled by 1.02 (for numerical stability)
                  and whether the error matrix must be computed with minimum
                  memory (DSPMM, not DGEMM, see code).
                  0  Scaling, enough memory (DGEMM).
                  1  Scaling, minimum memory (DSPMM).
                  2  No scaling, enough memory (DGEMM).
                  3  No scaling, minimum memory(DSPMM).
              The recommended option idiis=1 implies n=1 and m=0.
              DIIS restarts for every 12 iterations (determined by experience).
      inrefd  Input and evaluation of reference data.
              = 0 None.
              = N Input and evaluation for nonzero N.
              =-1 Output of results only on file nb19.
              = 1 Standard output.
              = 2 Detailed output.
              *** See chapter 3.11 for more information.
      iparok  Definition of non-standard parameters.
              = 0 No such definition.
              =-1 Use MNDO parameters, if available, for elements which do not
                  have their final parameters listed in the blockdata section.
                  Only for AM1 and PM3.
              = 1 Read parameters from file nb14 using conventions analogous
                  to MOPAC(6.0). The contents of file nb14 and their formats
                  are described in section I. The new parameters overwrite
                  the standard parameters in working common blocks.
              = 2 Read parameters from file nb14 using numerical input and
                  numbering scheme 1. For additional remarks see iparok=1.
              = 3 Read parameters from file nb14 using numerical input and
                  numbering scheme 2. For additional remarks see iparok=1.
              = 4 Use original MNDO parameters for Si and S, see J.Am.Chem.Soc.
                  100, 3607 (1978). Available with iop=0 and iop=-4.
              = 5 Use MNDO parameters copied from MNDO87-MNDO89, very small
                  numerical deviations from option iop=0 with parameters
                  copied from MOPAC(6.0). Only available with iop=-4.
              = 6 Use special fullerene MNDO parameters from Theor.Chim.Acta
                  92, 269 (1995). Parameter set B for carbon atoms.
                  Only available with iop=-4.
              = 7 Do not use the predefined values of MNDO-type dependent
                  parameters from the BLOCKDATA section, compute these
                  parameters internally from scratch.
                  Option to check numerical precision.
                  Available with iop=0,-1,-2,-3,-4,-7 and iop.le.-10.
              = 8 Use parameters from PDDG approach (Jorgensen, JCC 2002).
                  Available with MNDO (iop=0,-4) and PM3 (iop=-7).
      mminp   Definition of external points.
              = 0 No such definition.
              = 1 Properties such as the electrostatic potential or the
                  electric field are computed at the points defined.
              = 2 Quantum-chemical (QM) calculation in the field of external
                  point charges. Used in QM/MM hybrid treatments where the
                  molecular-mechanics (MM) atoms are located at the external
                  points.
              *** Additional input is required for options mminp=1-2.
              *** See section 3.13 for details.
      nmr     Computation of NMR chemical shifts.
              = 0 No such computation.
              =-1 Compute NMR shifts using standard parameters (see iop).
                  Default options, no extra input.
              = 1 Compute NMR shifts using a special MNDO parametrization (A).
                  Default options, no extra input.
              = 2 Compute NMR shifts using a special MNDO parametrization (B).
                  Default options, no extra input.
              When using keyword input, special options can be defined by
              appropriate keywords.
              When using standard input, this can be accomplished as follows.
              =-2 Compute NMR shifts using standard parameters (see iop).
                  Define options by additional input.
                  See chapter 2.2 for more information.
              =11 Compute NMR shifts using a special MNDO parametrization (A).
                  Define options by additional input.
                  See chapter 2.2 for more information.
              =12 Compute NMR shifts using a special MNDO parametrization (B).
                  Define options by additional input.
                  See chapter 2.2 for more information.
      nsav7   Generation of a new input file nb7.
              Data from the following input sections are included:
              section 1, 2, 2.1-2.4, 3.1-3.3, 3.5, 3.9, 3.11.
              Useful for converting input data to a different format and for
              saving an optimized geometry for subsequent jobs.
              = 0 Do not write such a file.
              = 1 Write a file with standard input in standard format.
              = 2 Write a file with standard input in free format.
              = 3 Write a file with keyword  input in standard format.
              = 4 Write a file with keyword  input in free format.
              = 5 Write a file with MOPAC input.
              = 6 Analogous to nsav7=2, file contains cartesian coordinates.
              = 7 Analogous to nsav7=4, file contains cartesian coordinates.
              = 8 Analogous to nsav7=5, file contains cartesian coordinates.
              *** For nsav7=1-5 the geometry is generated in the same type of
              *** coordinates (internal or cartesian) as in the current job.
      nsav8   Generation of an output file nb8.
              = 0 Do not write such an output file.
              = 1 Write a geometry-charge file (nb8) corresponding to a MOPAC
                  input file, with the atomic charge given at the end of the
                  input for each atom. The geometry is saved in internal
                  coordinates without symmetry.
      nsav9   Generation of an output file nb9.
              = 0 Do not write such an output file.
              = 1 Write a pdb-compatible file (nb9) which can be used as input
                  file for evaluation programs that accept the pdb format.
                  Only a small subset of the pdb format is implemented.
                  pdb = protein data base.
      nsav13  Generation of an output file nb13 for postprocessing.
              = 0 Do not write such an output file.
              = 1 Write a graphics file (nb13) according to MOPAC conventions.
              = 2 Write an auxiliary file (nb13) and convert it to an input
                  file for the MOLDEN program (nb93=molden.dat).
      nsav15  Generation of an output file nb15 collecting the current
              results after each energy and gradient calculation.
              Useful as an interface to other separate programs and for
              debugging purposes.
              = 0 Do not write such an output file.
              = 1 Save current Cartesian coordinates.
              = 2 Also save energy and gradient norms.
              = 3 Also save Cartesian and internal gradient (if available).
              = 4 Also save electrostatic potential and electric field
                  (if available).
              = 9 Save everything.
              < 9 Always rewind file nb15 to save only the current results.
              = 9 Never rewind file nb15 to save all results consecutively.
              *** The data saved include any results available for external
              *** points (MM), for use in QM/MM treatments.
	      *** For single-point multi-state calculations (icross=1,2,7)
	      *** multiple energies and gradients will be saved.
      nsav16  Generation of an output file nb16 for evaluations using SYBYL.
              = 0 Do not write such an output file.
              = 1 Write a SYBYL input file (nb16) after generating all data
                  required, including MOPAC-style bond orders and valencies
                  as well as Mulliken populations and charges.
              = 2 Generate all data as for nsav16=1, without writing an output
                  file nb13. This option makes sense only when these data are
                  printed which requires the option nprint.ge.2 (see below).
      immok   Molecular mechanics correction for peptides (MOPAC conventions).
              = 0 No such correction.
              = 1 Apply same correction as in MOPAC.
      ihbond  Criteria for an automatic recognition of hydrogen bonds X...H-Y.
              Useful in MNDO/H calculations, iop=-3.
              = 0 Default criteria.
                  Minimum distance rhxmin=1.1 Angstrom.
                  Maximum distance rhxmax=5.0 Angstrom.
                  Minimum angle    angmin= 90 degree.
              = 1 Alternative criteria.
                  Minimum distance rhxmin=1.1 Angstrom.
                  Maximum distance rhxmax=2.5 Angstrom.
                  Minimum angle    angmin=100 degree.
              = n Input of distance criteria (n.gt.1).
                  Minimum distance rhxmin=1.1 Angstrom.
                  Maximum distance rhxmax=  n Angstrom.
                  Minimum angle    angmin= 90 degree.
      ifld1   Calculation of electric properties.
              = 0 No such calculation.
              = n Finite-field calculation (n.gt.0).
              Note that the finite-field calculation is possible for all
              values of jop, except for jop=-2 which is treated as jop=-1.
      ifld2   Definition of the applied electric field.
              Relevant only for ifld1.gt.0.
              = 0 Default field of 0.001 au.
              = n Field of ifld1*10**(-n) au.
      ifld3   Finite-field SCF convergence criterion for density matrix.
              Relevant only for ifld1.gt.0.
              = 0 Default criterion of 10**(-10).
              = n Specific criterion of 10**(-n).
      icuts   Cutoff for three-center orthogonalization corrections in OMx
              and ODMx (energy and gradient). Only relevant in combination
              with iop=-6,-8,-22,-23 (OM2, OM3, ODM2, ODM3).
              =-1 No cutoffs used.
              = 0 Default, equivalent to icuts=12.
              = n Three-center corrections neglected for resonance integrals
                  between atoms I-J, if the product of the ss overlap integrals
                  for the pairs I-K and J-K is below 10**(-n).
      icutg   Cutoff for three-center orthogonalization corrections in OMx
              and ODMx (only for gradient). Only relevant in combination
              with iop=-6,-8,-22,-23 (OM2, OM3, ODM2, ODM3).
              =-1 No cutoffs used.
              = 0 Default, equivalent to icutg=6.
              = n Three-center corrections neglected for a given atom pair I-J
                  during gradient evaluation, if the relative magnitude of the
                  contribution from this pair to the total correction at the
                  reference geometry is below 10**(-n).
      iexbas  Choice of polarized basis set
              for the calculation of electric properties.
              = 0 Standard minimal basis.
              = 1 Add 2p polarization functions at H
                  and 3d polarization functions at the first-row atoms.
              *** Experimental option ***
              Parameters for polarization functions must be provided via
              blockdata or input. Current default: Parameters for 2p (H)
              from blockdata, all others from input.
              Polarization functions are not included for elements which
              do not have the required parameters defined.
              *** Option is presently only implemented for MNDO and MNDO/d.
      icosmo  COSMO solvation model.
              = 0 No treatment of solvation applied.
              = 1 Electrostatic COSMO treatment in its standard version.
                  Water as solvent, default options, no further input.
              = 2 Electrostatic COSMO treatment with additional cavitation and
                  dispersion interactions, currently available only for AM1.
                  Water as solvent, default options, no further input.
              = 3 Nonstandard electrostatic COSMO treatment.
                  Explicit input required, see chapter 3.12 for details.
              = 4 Nonstandard electrostatic COSMO treatment with additional
                  cavitation and dispersion interactions.
                  Explicit input required, see chapter 3.12 for details.
              =-n Single-point COSMO calculation (using icosmo=n, with n=1-4)
                  after a standard gas phase calculation (with or without
                  geometry optimization, see jop; unavailable in reaction
                  paths or grids).
              *** Special convention for geometry optimizations (icosmo=1-4):
              Optimizations always use an electrostatic COSMO treatment only.
              For icosmo=2,4 single-point solvation energies at the optimized
              geometry are evaluated that include cavitation and dispersion.
              *** Special convention for inrefd.ne.0:
              *** Input for icosmo may be overwritten when solvation energies
              *** are used as reference data (id1=28 or id1=29).
              *** See chapter 3.11 for details.
      ipsana  Global option for analytic derivatives.
              = 0 Do not use analytic derivatives unless selected by default.
                  In the current version, this is done for the half-electron
                  ROHF gradient, for the minimal CI gradient, for the GUGACI
                  gradient, and for available second derivatives.
                  Default options, no extra input.
              = 1 Use analytic derivatives whenever available.
                  Default options, no extra input.
              = 2 Use analytic derivatives whenever available.
                  Define options by additional input.
                  See chapter 2.2 for more information.
              =-1 Do not use analytic derivatives.
              =-2 Do not use analytic derivatives, but use an input file with
                  explicit input (i.e. like ipsana=+2).
                  This option is included merely for convenience.
              Note: Fully analytic gradients with analytic integral and Fock
              matrix derivatives are implemented for all MNDO-type methods.
              Generic analytic gradients with numerical integral and Fock
              matrix derivatives are available for all NDDO-based methods.
              The fully analytic mode is faster and selected by default for
              MNDO-type methods, but use of the generic analytic mode can be
              enforced via option igrad=-3. The generic analytic mode is the
              default for other NDDO-based methods such as OM2, OM3, ODM2,
              and ODM3.
              Note: ipsana may be reset within the program when selecting the
              computation of analytic derivatives by default or when avoiding
              their computation in cases where they are not available.
      immdp   Option for dispersion corrections.
              This option is only for AM1, PM3, OM2, OM3, ODM2, and ODM3.
              =-1  Do not include dispersion function corrections.
              = 0  Equivalent to immdp=-1 for all methods except for ODMx.
                   Equivalent to immdp=-3 for ODM2 and ODM3.
              For AM1 and PM3:
              = 1  include dispersion corrections (PCCP 9, 2362 (2007)).
                   No dispersion corrections included for other values.
              For OM2 and OM3:
              = 1  Include the D2 dispersion correction from Grimme
                   with Elstner's damping function, see JCP 114, 5149 (2001);
                   called D1 in Xin Wu, Ph.D. thesis (2013).
              = 2  Include the D2 dispersion correction from Grimme
                   with Yang's damping function (II), see JCP 116, 515 (2002);
                   D2 references: JCC 25, 1463 (2004); JCC 27, 1787 (2006);
                   JCTC 12, 1082 (2016).
              For OM2, OM3, ODM2, and ODM3:
              = 3  Include the D3 dispersion correction from Grimme
                   with Becke-Johnson damping and without three-body terms.
                   Analytical gradients available for OM2, OM3, ODM2, and ODM3.
                   D3 references: JCP 132, 154104 (2010); JCC 32, 1456 (2011);
                   JCTC 9, 1580 (2013); JCTC 12, 1082 (2016).
              =-3  Include the D3 dispersion correction from Grimme
                   with Becke-Johnson damping and with three-body terms.
                   Analytical gradients available for OM2, OM3, ODM2, and ODM3.
                   D3 references see above.
                   *** Note: This is the default value for ODM2 and ODM3.
      inac    Special modes of computing non-adiabatic coupling matrix element.
              = 0 Use best available method. Currently this involves the
                  solution of the Z vector equations using the LAPACK DGESV
                  routine which may require a significant amount of memory
                  for systems with 50 or more non-hydrogen atoms.
              = n Use fully numerical method involving one SCF calculation
                  per point of the two-sided differences.


      2. ***** Second line with general options ************************


      Option  No. Columns Format  Short description

      maxend  32    1-2     i2    Maximum number of SCF calcs per optimization.
      maxlin  33    3-4     i2    Maximum number of SCF calcs per line search.
      maxrtl  34    5-6     i2    Maximum number of optimization cycles per job.
    * iscf    35    7-7     i1    SCF convergence criterion for the energy.
    * iplscf  36    8-8     i1    SCF convergence criterion for the density.
    * middle  37    9-10    i2    Option for job continuation.
    * iprint  38   11-12    i2    Printing flag for optimization.
      kprint  39   13-14    i2    Printing flag for force constants.
      lprint  40   15-16    i2    Printing flag for vibratrional analysis.
      mprint  41   17-18    i2    Printing flag for gradients.
    * jprint  42   19-20    i2    Flag for printing of input data.
    * iprec   43   21-24    i4    Convergence criteria for optimization: values.
    * iconv   44   25-26    i2    Convergence criteria for optimization: type.
      ihess   45   27-28    i2    Definition of initial hessian.
      idfp    46   29-30    i2    Update of inverse hessian matrix.
      nrepet  47   31-32    i2    Special convergence criterion for f and x.
      linitg  48   33-34    i2    Check for vanishing initial gradient.
      lconvg  49   35-38    i4    Check for acceptable gradient norm (force).
      lgdum   50   39-40    i2    Check for gradient: Not used.
      ihdlc1  51   41-42    i2    Coordinates for HDLC optimizer: general.
      ihdlc2  52   43-44    i2    Coordinates for HDLC optimizer: core.
      ihdlc3  53   45-46    i2    Extra input for HDLC optimizer.
      ingeom  54   47-50    i4    Flag for special geometry input.
      intdir  55   51-52    i2    Integral direct SCF procedure.
      lindms  56   53-54    i2    Linear scaling CG-DMS approach.
      lindia  57   55-56    i2    Choice of full diagonalization after CG-DMS.
      linfrg  58   57-58    i2    Initial density from fragment calculations.
      inpfrg  59   59-60    i2    Read extra input for fragments.
      inp21   60   61-62    i2    Read extra input from section 2.1.
      inp22   61   63-64    i2    Read extra input from section 2.2.
      inp23   62   65-66    i2    Read extra input from section 2.3.
      inp24   63   67-68    i2    Read extra input from section 2.4.
      inp25   64   69-70    i2    Read extra input from section 2.5.
      iaterg 119   71-72    i2    Convention for atomization energy.


      Option  Full description

      maxend  Maximum number of SCF calculations for each optimization.
              Default 9999.
              = 1 Special option for jop=0,1,3,4: No geometry optimization,
                  only one SCF calculation is carried out at the input
                  geometry (as with jop=-1).
      maxlin  Maximum number of SCF calculations for each line search.
              Default  4 for lsub=0   (see below).
              Default 10 for lsub=1,2 (see below).
              *** Not counting any extra SCF calculations
              *** required after an MO mapping failure (see maxmap)
      maxrtl  Maximum number of optimization cycles per job.
              Default 9999.
      iscf    SCF convergence criterion for the energy = 10**(-iscf) eV.
              Default 6 normally.
              Default 9 for GUGA-CI (abs(kci)=5) with keyword input.
              Recommended minimum 5.
      iplscf  SCF convergence criterion for the diagonal elements of the
              density matrix, test on 10**(-iplscf).
              Default 6 normally.
              Default 9 for GUGA-CI (abs(kci)=5) with keyword input.
      middle  Option for job continuation option.
              Conventions for jop=0-2.
              =-1 No job continuation since no restart information is saved.
                  This may be useful for minimizing disk I/O operations.
              = 0 Normal job.
              = 1 Continuation of a previous job starting with a new cycle
                  and using information saved on file 4 via middle=0.
              Additional possibility for jop=0,1.
              = 2 Continuation of a previous job using more stringent
                  convergence criteria. This option allows the continuation
                  of jobs which have converged using less stringent criteria.
              *** middle=-1 is enforced with the following combination of
                  options: impar=1, kgeom=1-3, jop=0-1.
      iprint  Printing flag for the optimization.
              =-5 No output.
              =-1 Small output.
              = 0 Standard output.
              = 1 Detailed output.
                  Required to print the final interatomic distances for
                  molecules with 100 or more atoms.
              = 5 Debug print.
      kprint  Printing flag for the force constants.
              =-5 No output.
              =-1 Small output.
              = 0 Standard output.
              = 1 Detailed output.
              = 5 Debug print.
      lprint  Printing flag for the vibrational analysis.
              =-5 No output.
              =-2 Minimum output.
              =-1 Small output.
              = 0 Standard output.
              = 1 Detailed output.
              = 5 Debug print.
      mprint  Printing flag for the gradients.
              =-1 No output.
              = 0 Standard output.
              = 1 Detailed output including gradient norms during optimization.
                  iprint=1 sets mprint=1 if the input value is mprint.le.0.
              = 2 More detailed output including dispersion contributions.
              = 5 Debug print.
      jprint  Flag for printing of input data.
              =-1 No output.
              = 0 Standard output.
              = 1 Detailed output.
              = 2 Detailed output including memory allocation and rotational
                  constants.
              = 5 Debug print.
                  Required to print the initial interatomic distances for
                  molecules with 100 or more atoms.
              = 6 Extended debug print including a printout of the standard
                  input file.
              = 7 More output including documentation of the available options.
      iprec   Convergence criteria for geometry optimization.
              Option to increase the precision of the convergence criteria.
              Default 1. Suggested maximum 100.
              Convergence tests refer to tolend(i).
              The default values for tolend(i) are divided by iprec to define
              the actual tolerances used.
              ***  Conventions for jop=0,3,5.
              i=1  Test on norm of variables x.
              i=2  Test on function value f.
              i=3  Test on gradient components g or on gradient norm (iconv=3).
              i=4  Test on predicted decrease in f.
              Default values for tolerances.
              tolend(1)=1.D-04
              tolend(2)=2.D-03 kcal/mol
              tolend(3)=1.D+00 kcal/(mol*Angstrom)
              tolend(4)=1.D-03 kcal/mol
              ***  Conventions for jop=1,4,6.
              i=1  Test on absolute change of x.
              i=2  Test on relative change of x.
              i=3  Test on gradient components g.
              Default values for the tolerances.
              tolend(1)=1.D-08
              tolend(2)=1.D-08
              tolend(3)=1.D+00 kcal/(mol*Angstrom)
      iconv   Type of convergence criteria for optimizations (jop=0,3,5).
              = 0 Successful termination if either
                  - test on g and x satisfied
                  - test on g and f satisfied
                  - test on f or  x satisfied for nrepet consecutive cycles
                  - test on alpha.p.g (predicted decrease in f) satisfied
              = 1 Successful termination if either
                  - test on g and x satisfied
                  - test on g and f satisfied
                  - test on f or x satisfied for nrepet consecutive cycles
              = 2 Successful termination if either
                  - test on g satisfied
                  - test on f or x satisfied for nrepet consecutive cycles
              = 3 Successful termination if
                  - test on gnorm satisfied
              = 4 Successful termination if
                  - standard Gaussian98 convergence criteria are satisfied
                  * currently only available with HDLC optimizer
              For backward compatibility:
              =-1 Equivalent to iconv=2.
              =-2 Equivalent to iconv=3.
              =-3 Equivalent to iconv=4.
      ihess   Definition of initial hessian.
              = 0 Same as ihess=1 except for the second and following points
                  on a reaction path where ihess=2 is assumed.
              = 1 Initial hessian is estimated from a finite-difference
                  approximation using gradient calculations at the initial
                  point and a neighboring one.
              = 2 Initial hessian read from file 4.
              = 3 Initial hessian taken as unit matrix.
                  Useful for testing purposes only.
      idfp    Update of inverse hessian matrix.
              = 0 BFGS update.
              = 1 DFP update.
      nrepet  Special convergence criterion for f and x, see above (iconv).
              Default 3.
      linitg  Check for a vanishing initial gradient in an optimization.
              =-1 No such check.
              = 0 Set linitg=n=10 and check.
              = n Apply a criterion of tolend(3)/n.
                  An optimization is considered to be unnecessary if the
                  gradient is below this criterion (see description for
                  iprec and iconv above).
      lconvg  Check for an acceptable gradient norm to ensure that force
              constants can be computed in a meaningful manner, either
              at the final geometry after geometry optimization (jop=3,4)
              or at the initial input geometry (jop=5,6).
              =-1 No such check, any gradient norm is accepted.
              = 0 Set lconvg=n=10 and check.
              = n Check whether the final optimized gradient norm is below
                  tolend(3)*n for jop=3,4 or whether the Cartesian gradient
                  norm is less than n kcal/(mol*Angstrom) for jop=5,6.
                  Force constants are computed in these cases, otherwise
                  their calcalution is skipped (jop=3,4) or the geometry
                  is optimized (jop=5,6).
      lgdum   Check for gradient norm.
              Not used presently.
      ihdlc1  Coordinates used by the HDLC optimizer (ief < 0) in general.
              = 0 HDLC internal coordinates.
              = 1 Cartesian coordinates.
      ihdlc2  Coordinates used by the HDLC optimizer (ief < 0) for the
              reaction core (microiterative transition state search)
              or for the first and only fragment defined.
              = 0 HDLC primitive internal coordinates (reaction core).
              = 1 HDLC total connection scheme (reaction core).
              = 2 Cartesian coordinates (reaction core).
              = 3 DLC primitive internal coordinates (only one fragment).
              = 4 DLC total connection scheme (only one fragment).
      ihdlc3  Additional input for the HDLC optimizer (ief < 0).
              = 0 Read additional input from separate input file nb42.
                  See section J for details.
                  Treat as ihdlc3=2 if this file does not exist.
              = 1 Read additional input from standard input file nb5.
                  See section 3.16 for details.
              = 2 Use default HDLC options, no input.
                  Try to define constraints based on the standard coordinate
                  input, provided that there are no dummy atoms and no
                  symmetry relations: experimental option (may be unsafe).
      ingeom  Flag for special geometry input.
              = 0 Nothing special.
              = 1 Read geometry and associated data from PDB-type input
                  which replaces sections 3.2-3.5 of the standard input.
                  See last part of section 3.2 for more information.
              =-1 Skip input for geometry and associated data.
                  Sections 3.2-3.5 of the standard input are omitted.
                  This may be useful when this code is combined with
                  another code that provides these input data.
      intdir  Choice of integral-direct SCF procedure.
              = 0 Conventional integral handling.
              = 1 Direct approach, without thresholds.
              = 2 Direct approach, default thresholds.
              = 3 Direct approach, special thresholds, inp24=1.
              *** Main limitations of the current implementation:
              a)  No methods with orthogonalization corrections (OM1, OM2).
              b)  No electron correlation.
              c)  No COSMO solvation treatment.
              d)  No SCF with external point charges.
      lindms  Choice of linear scaling CG-DMS approach:
              conjugate gradient density matrix search.
              = 0 Conventional SCF treatment.
              = 1 CG-DMS, square matrix, without thresholds.
              = 2 CG-DMS, square matrix, default thresholds.
              = 3 CG-DMS, square matrix, special thresholds, inp24=1.
              = 4 CG-DMS, sparse matrix, default thresholds.
              = 5 CG-DMS, sparse matrix, special thresholds, inp24=1.
              *** Main limitations of the current implementation:
              a)  No open-shell systems.
              b)  lindia=1 required for some applications (e.g. NMR).
              c)  linfrg=1 often required.
      lindia  One conventional diagonalization after CG-DMS convergence
              to obtain MO eigenvalues and eigenvectors.
              = 0 No such diagonalization.
              = 1 Allow such diagonalization.
      linfrg  Block-diagonal initial density matrix from separate RHF-SCF
              calculations on user-defined fragments using the same
              convergence criteria as in the molecular case.
              = 0 Do not build such an initial density matrix.
              = n Number of SCF iterations allowed for each fragment.
                  Recommended values are n=1 and n=2 to obtain a
                  sufficiently accurate initial guess for CG-DMS.
                  Normally (unless inpfrg=-1) the definition of the
                  fragments requires some extra input (section 3.5).
              *** Some variables are fixed internally during a fragment
                  SCF calculation: inout=0, iuhf=-1, ifast=2, nstart=-1.
      inpfrg  Input to define the fragments for CG-DMS in section 3.5.
              =-1 Do not read such input, treat the whole molecule as
                  a single fragment (only useful for testing purposes).
              = 0 Read such extra input using the default format.
              = n Read such extra input using other formats.
                  Not yet implemented.
      lindum  Reserved for linear scaling integral-direct methods.
              Not used presently.
      inp21   One line of extra input as described in section 2.1.
              Special options for optimizations and force constants.
              = 0 Do not read such extra input, use default options.
              = 1 Read such extra input.
      inp22   One line of extra input as described in section 2.2.
              Special options for eigenvector following.
              = 0 Do not read such extra input, use default options.
              = 1 Read such extra input.
                  Set internally for ief=3 or ief=-3 (see above).
      inp23   Two lines of extra input as described in section 2.3.
              Special options for analytic derivatives.
              = 0 Do not read such extra input, use default options.
              = 1 Read such extra input.
                  Set internally for ipsana>1, nmr>10, or nmr<-2 (see above).
      inp24   One or two lines of extra input as described in section 2.4.
              Special options for linear scaling and direct SCF methods.
              = 0 Do not read such extra input, use default options.
              = 1 Read one line of extra input.
                  Set internally for intdir=3 or lindms=3,5 (see above).
              = 2 Read two lines of extra input.
                  Not set internally, explicit input required.
      inp25   One line of extra input as described in section 2.5.
              Special options for conventional SCF methods.
              = 0 Do not read such extra input, use default options.
              = 1 Read such extra input.
      iaterg  Convention for atomization energy.
              =-1 Treat SCF atomization energy with post-SCF corrections
                  as ZPVE-exlusive atomization energies at 0 K.
                  Default in ODM2 and ODM3.
              = 0 Equivalent to iaterg=-1 for ODM2 and ODM3
                  and to iaterg=1 for all other methods.
              = 1 Treat SCF atomization energy with post-SCF corrections
                  as if they were enthalpies of atomization at 298 K.
                  Default in MNDO, MNDO/d, MNDO/H, MNDO/dH, MNDOC,
                  AM1, PM3, OM1, OM2, and OM3 as well as in MINDO/3,
                  CNDO/2, and SCC-DFTB (special conventions for iop=6).


      2.1 ***** Special options for optimization etc ***** inp21=1 *****

      The input in this section is needed only if special options are
      chosen for optimizations or force constant calculations. In most
      applications, the default options are sufficient, and there is no
      such extra input.

      Option  No. Columns Format  Short description

      nrst    191   1-4     i4    Reset of hessian matrix to initial values.
      ldrop   192   5-8     i4    Criterion for restarting an optimization.
      ldell   193   9-10    i2    Change of variables in such a restart.
      lsub    194  11-12    i2    Choice of line search routine.
      lalpha  195  13-14    i2    Initial step size for line search.
      lconv   196  15-16    i2    Convergence criterion for line search: step.
      ltolf   197  17-18    i2    Convergence criterion for line search: energy.
      lmaxst  198  19-20    i2    Step size limit for line search.
      igrad   199  21-22    i2    Enforce special modes of gradient calculation.
      lpoint  200  23-24    i2    Points for numerical gradient calculation.
      lfac    201  25-28    i4    Step size for numerical gradient calculation.
      lldum   202  29-30    i2    Option presently not used.
      kpoint  203  31-32    i2    Points for numerical force constants.
      kfac    204  33-36    i4    Step size for numerical force constants.
      kmass   205  37-38    i2    Atomic masses for the vibrational analysis.
      kkdum   206  39-40    i2    Option presently not used.
      ntemp   207  41-42    i2    Number of temperatures for properties.
      ntemp1  208  43-46    i4    Lowest temperature (in Kelvin).
      ntemp2  209  47-50    i4    Temperature increment (in Kelvin).


      Option  Full description

      nrst    Number of cycles between resetting the hessian matrix
              to its initial values. Default 999.
              =-1 Do not reset the hessian matrix even if the gradient
                  and the search direction are almost orthogonal.
                  Define nrst=99999 for internal use.
      ldrop   A restart in the geometry optimization is carried out if
              the heat of formation drops by more than ldrop kcal/mole
              in two consecutive cycles (jop=0,3,5).
              Default 10.
      ldell   The geometrical variables in such a restart are changed
              by 0.001*ldell units (Angstrom or radian). Default 10.
      lsub    Choice of line search routine.
              = 0 Quadratic search via fstmin.
              = 1 Quadratic search via locmin.
              = 2 Cubic search via linmin if gradients are always available,
                  otherwise quadratic search via locmin.
      lalpha  Initial step size for line search.
              = 0 Taken from preceding cycle (times pnormlast/pnorm for lsub=1
                  or 2). For variational wavefunctions and lconv.gt.25 (see
                  below), the program uses lalpha=1 by default.
              = 1 Use step size alpha=1 initially.
              = 2 Taken from preceding cycle without any change.
      lconv   Convergence criterion for line search: step size.
              = 0 Convergence if the predicted step size differs from the
                  previous step size told by less than tcrit=0.01*told+0.01
              = n Multiply default value by n.
                  For variational wavefunctions and lsub=0, the program uses
                  lconv=50 by default.
                  For nonvariational wavefunctions, the program always uses
                  lconv=1 regardless of the actual input.
      ltolf   Convergence criterion for line search: energy.
              = 0 Convergence if the energy drops by less than 0.5*tolend(2)
                  for two consecutive points.
              = n Multiply default value by n.
                  Negative ltolf values turn off this convergence criterion.
      lmaxst  Step size limit for line search.
              Maximum allowed change of the variables for two consecutive
              points in the line search.
              = 0 Use default values of 0.1 Angstrom and 0.1 radian.
              = n Multiply default values by n.
      igrad   Special modes of gradient calculation.
              = 0 Internal choice of best method for gradient calculation
                  depending on the type of wavefunction.
              = 1 Enforce numerical finite-difference calculation via full
                  energy evaluations for all types of wavefunctions.
                  This implies quadratic line searches.
              =-3 Enforce numerical finite-difference evaluation of integral
                  and Fock matrix derivatives even when the corresponding
                  analytic derivatives are available (for testing purposes).
                  This implies use of the PSOMX driver (rather than PSDRV).
      lpoint  Number of points for numerical gradient calculation.
              = 0 Central difference approach: compute gradient from two
                  energy evaluations at both sides of the reference point.
              = 1 One-sided differentiation: compute gradient from the
                  energies at the reference point and one distorted point.
              *** lpoint=1 is significantly less accurate than lpoint=0.
              *** lpoint=1 is not available in this version of the code.
              *** lpoint=0 is used regardless of the actual input.
      lfac    Step size for numerical gradient calculation:
              lfac multiplies the predefined minimum step size of 0.00001
              Angstrom for distances, 0.002 degree for bond angles, 0.005
              degree for dihedral angles, and 0.00001 Angstrom for x,y,z
              Cartesian coordinates.
              Default 100.
      kpoint  Number of points for numerical force constants during the
              calculation of the offdiagonal force constants by numerical
              differentiation of the gradient.
              = 0 Average from two calculations for f(i,j) and f(j,i).
              = 1 One single calculation for f(i,j).
              *** kpoint=1 is significantly less accurate than kpoint=0.
              *** kpoint=1 not available with impar=1.
              *** kpoint=1 is ignored for variational wavefunctions with
                  fast gradients or for analytic gradients, in these cases
                  kpoint=0 is always used regardless of the actual input.
              *** kpoint=1 is allowed in all other cases to speed up slow
                  numerical force constant calculations when accuracy is
                  not of major concern to the user.
      kfac    Step size for numerical force constants.
              Displacement of cartesian coordinates in units of 0.00001 au
              to generate distorted geometries for computing the gradient.
              The numerical force constants are obtained from such gradients
              by finite difference.
              Default 1000.
      kmass   Atomic masses used for the vibrational analysis.
              =-1 Average atomic weight.
              = 0 Mass of the most abundant isotope.
              = n In addition to the default case, n isotopomers are treated
                  which are defined by input (see section 3.15). A vibrational
                  analysis for isotopic substitution (defined via kmass=n)
                  can be done by using a previously computed force constant
                  matrix from the restart file (option middle=1).
      ntemp   Number of temperatures for calculation of thermodynamic
              properties after force constant analysis.
              Default 10. Maximum 25.
              Default temperatures for ntemp=0 are
              273.15, 298.15, 300, 400, ... 1000 K
              regardless of input for ntemp1 and ntemp2.
      ntemp1  Lowest temperature (in Kelvin).
              Default 100. Minimum 100.
      ntemp2  Temperature increment (in Kelvin).
              Default 100.

      The default values defined above are generally used if there is no
      input from this section (inp21=0). These default values are also
      used in the case of explicit input (inp21=1) unless a specific
      nonzero input value is provided for a given option.


      2.2 ***** Eigenvector following ***** inp22=1 ********************

      The input in this section is needed only if special options for
      eigenvector following are required. In most applications, the
      default options are sufficient, and there is no extra input for
      eigenvector following (standard cases ief=-1, ief=1, or ief=2).

      Many general options for optimizations apply also to eigenvector
      following (see preceding chapter 2). This includes: maxrtl, iscf,
      ipl, middle, iprint, jprint, and iprec.

      Option  No. Columns Format  Short description

      mode    80    1-2     i2    Hessian eigenvector that is followed.
      ireclc  81    3-4     i2    Recalculation of Hessian matrix.
      iupd    82    5-6     i2    Update of Hessian matrix.
      igthes  83    7-8     i2    Determination of Hessian matrix.
      llamda  84    9-10    i2    Determination of current lambda: general.
      lnonr   85   11-12    i2    Determination of current lambda: details.
      lrscal  86   13-14    i2    Check on predicted step size.
      lgnmin  87   15-16    i2    Check on applied step size.
      lnoupd  88   17-18    i2    Check on current trust radius.
      lefdum  89   19-20    i2    Less tight convergence criterion.
      dmax     1   21-30  f10.5   Initial trust radius (Angstrom or rad).
      ddmin    2   31-40  f10.5   Minimum trust radius (Angstrom or rad).
      ddmax    3   41-50  f10.5   Maximum trust radius (Angstrom or rad).
      rmin     4   51-60  f10.5   Minimum acceptable ratio for energy change.
      rmax     5   61-70  f10.5   Maximum acceptable ratio for energy change.
      omin     6   71-80  f10.5   Minimum acceptable overlap for TS mode.


      Option  Full description

      mode    Hessian eigenvector that is followed.
              Not used in search for energy minimum.
              Default 1 in search for transition state.
      ireclc  Number of cycles between explicit calculation of the Hessian
              matrix. Default 9999.
      iupd    Update of Hessian matrix.
              =-1 No such update.
              = 0 Default behaviour (Powell or BFGS).
              = 1 Powell update (default for TS).
              = 2 BFGS   update (default for minimum).
              = 3 Murtagh & Sargent update.
      igthes  Determination of Hessian matrix.
              = 0 Diagonal matrix, empirical estimate.
                  Default in Yarkony CI search, overriden in all other cases.
              = 1 Calculated numerically by one-sided finite difference.
                  Default in all other cases.
              = 2 Read from file nb4.
              = 3 Calculated numerically by two-sided central differences.
              = 4 Diagonal matrix calculated numerically.
              = 5 Unit matrix.
      llamda  Determination of current lambda value: general approach.
              = 0 Follow MOPAC-type default procedures:
                  Try Newton-Raphson, P-RFO, and QA algorithms in this order.
              = 1 Follow procedures from J.Nichols et al, JCP 92, 340 (1990).
              = 2 Insist on lambda=0 (Newton-Raphson).
      lnonr   Determination of current lambda value: details for llamda=0.
              = 0 Use default procedures and allow for pure Newton-Raphson
                  step with lambda=0, if appropriate.
              = 1 Use default procedures, but do not allow for pure
                  Newton-Raphson step.
      lrscal  Check on predicted step size.
              = 0 No request for scaling.
              = 1 Scale the predicted step down if it is larger than the
                  trust radius.
      lgnmin  Check on applied step size.
              = 0 No check on gradient norm.
              = 1 Do not allow the gradient norm to increase during TS search.
                  Reject previous step and try smaller step.
      lnoupd  Check on current trust radius.
              = 0 Allow changes in the trust radius based mainly on the ratio
                  between found and expected energy changes.
              = 1 Do not allow such changes.
      lefdum  Less tight convergence criterion.
              = 0 Use default criterion for gradient norm: tol2 = 1.0
              = n Use less tight criterion for gnorm: tol2 = n
              Note that more stringent criteria can be chosen using iprec.
              However, input for lefdum overrides input for iprec.
      dmax    Initial trust radius (Angstrom or rad).
              Default 0.2.
      ddmin   Minimum trust radius (Angstrom or rad)
              that is acceptable in the update.
              Default 0.001  (ief>0).
              Default 0.0002 (ief<0).
      ddmax   Maximum trust radius (Angstrom or rad)
              that is acceptable in the update.
              Default 0.5 for minimum (ief>0).
              Default 0.3 for TS (ief>0).
              Default 1.0 for minimum and TS (ief<0).
      rmin    Minimum ratio between found and expected
              energy changes that is acceptable.
              Default 0.0 (ief<0, not used for ief>0).
      rmax    Maximum ratio between found and expected
              energy changes that is acceptable.
              Default 4.0  (ief>0, not used).
              Default 10.0 (ief<0).
      omin    Minimum overlap between current and
              previous TS mode that is acceptable.
              Default 0.8 (ief>0).
              Default 0.6 (ief<0).

      The default values defined above are generally used if there is
      no input from this section (inp22=0; ief=-1 or ief=1 or ief=2).
      These default values are also used in the case of explicit input
      (inp22=1; ief=-3 or ief=3) unless a specific nonzero input value
      is provided for a given option.

      In the case of a Newton-Raphson search (ief=2, no extra input),
      the program internally employs the following definitions:
      ireclc=1, igthes=1, llamda=2, lnoupd=1 (other defaults unchanged).
      Some options are irrelevant with ief=2 (mode,iupd,lnonr,omin).


      2.3 ***** Analytic derivatives ***** inp23=1 *********************

      In standard applications with analytic derivatives, this input
      section is skipped because the program automatically assigns
      reasonable values to all input variables using internal
      optimization procedures.

      Specific input can be requested by the user (inp23=1; ipsana>2
      or nmr>10 or nmr<-2, see earlier description of ipsana and nmr).
      In this case, two lines of input are expected as described below:
      29 INTEGER options (first line), and 8 REAL options (second line).

      ***** First line *****

      Option  No. Columns Format  Short description

      ipsprt   90   1-5     i5    Printing option for analytic derivatives.
      ienrg    91   6-10    i5    Debug option (see code). Do not use.
      icore    92  11-15    i5    Amount of memory available as a buffer.
      idisk    93  16-20    i5    Amount of disk space available.
      imix     94  21-22    i2    Computation of Fock matrix derivatives.
      idens    95  23-24    i2    Computation of density matrix derivatives.
      indsym   96  25-26    i2    Computation of various intermediate terms.
      iqswap   97  27-28    i2    Control of rhs swapping for CPHF equations.
      iaveit   98  29-30    i2    Estimated average number of CPHF iterations.
      imaxit   99  31-34    i4    Estimated maximum number of CPHF iterations.
      inrhs   100  35-36    i2    Number of CPHF equations solved together.
      ikrvec  101  37-38    i2    Debug option (see code). Do not use.
      irows   102  39-42    i4    Number of rows of CPHF K matrix held in core.
      iprcon  103  43-44    i2    Preconditioner in iterative CPHF solution.
      incpus  104  45-48    i4    Not yet implemented. Do not use.
      idstrp  105  49-50    i2    Fine tuning (see code). Do not use.
      ihlst   106  51-52    i2    Treatment of intermediate HE gradient terms.
      ihlwrp  107  53-54    i2    Treatment of redundant CPHF variables (HE).
      ikmode  108  55-56    i2    Method for computing CPHF K matrix.
      isolve  109  57-58    i2    Selection of iterative linear CPHF solver.
      ikrsav  110  59-62    i4    Number of shared basis vectors for solver.
      iumix   111  63-64    i2    Sequential file to store Fock matrix derivs.
      iurhs   112  65-66    i2    Direct access file to store rhs (CPHF).
      iuk     113  67-68    i2    Sequential file to store the CPHF K matrix.
      iures   114  69-70    i2    Sequential file to store the results.
    * nmrlev  127  71-72    i2    NMR: Choice of integral approximation.
    * intctl  128  73-76    i4    NMR: Calculation of three-center terms.
      incoff  129  77-78    i2    NMR: Cutoff for three-center integrals.
    * nmrnuc  130  79-80    i2    NMR: Centers where shieldings are computed.


      Option  Full description

      ipsprt  Printing option for analytic derivatives.
              = -5 No output, except for fatal errors.
              = -1 No output, except for fatal errors and warnings
                   concerning the choice of unreasonable input options.
              =  0 Standard output.
              =  1 Detailed output.
              =  2 Collect and report more cpu times.
              =  5 Debug print.
              Additional debug print can be generated by adding increments:
              DELTA  Print extra information on:
                 16  half-electron derivatives
                 32  solution of CPHF equations
                 64  data passed between stages
                128  dynamic memory allocation
                256  initial integral calculations
                512  explicit CPHF K matrix formation
               1024  summation of response quantities
               2048  computation of density matrix
                     derivatives by finite difference
               4096  integral transformation
               8192  hi-tech solvers (isolve=2,3,4,5,6)
              16384  NMR-related code
              32768  CI-related code
              Note: Setting ipsprt=65535 will produce the largest possible
              debug output (which will be HUGE). See code for further details.
              For ipsprt=0 (default) ipsprt may be redefined internally.
              For first derivatives, ipsprt=-1 is usually set internally,
              with ipsprt=1 for mprint=5.
              For second derivatives, ipsprt=kprint.
      ienrg   Debug option (see code). Do not use.
              =  0 Normal calculation.
      icore   Amount of memory available as a buffer.
              =  0 Use as much memory as possible.
                   See PARAMETER statement for LEN in the main program
                   for the predefined upper limit.
              =  n Memory in Mbyte.
                   Internally converted to number of 8-byte words (n*131072)
                   and automatically reduced to LEN when exceeding the allowed
                   upper limit.
      idisk   Amount of disk space available.
              =  0 Unlimited disk space assumed.
              =  n Disk space in Mbyte.
                   Internally converted to number of 8-byte words (n*131072).
              Note: Slightly more disk space might be needed than expected
              due to headers from the Fortran run-time library.
      imix    Computation of Fock matrix derivatives, or equivalently, of
              second derivatives of the energy wrt coordinates and density.
              =  0 Automatic optimum choice.
              =  1 Compute once, keep in core.
              =  2 Compute once, swap out during CPHF.
              =  3 Store atom-pair contributions and recompute derivatives
                   as needed.
              =  4 Use numerical differentiation of the Fock matrix.
                   Only supported in the PSOMX driver.
      idens   Computation of first derivatives of the density matrix wrt
              coordinates.
              =  0 Automatic optimum choice.
                   This will never be numerical.
              =  1 Numerical differentiation using extrapolated integrals
                   (only for testing purposes).
              =  2 Select best analytic method.
              =  3 CPHF in MO basis, direct solution of linear system
                   using LAPACK (DSPSV).
              =  4 CPHF in MO basis, iterative solution in-core.
              =  5 CPHF in MO basis, iterative solution out-of-core.
              =  6 CPHF in MO basis, iterative solution with on-the-fly
                   recomputation of the K matrix (integral-direct approach).
              =  7 CPHF in AO basis with a separate solution phase.
                   This may be slightly faster than idens=8,
                   but requires quartic memory or disk storage.
                   This option allows parallelization.
              =  8 CPHF in AO basis with no separate solution phase.
                   This may run in N**2 memory without too much redundant
                   work, if imix=3 and iqswap=3.
      indsym  Calculation of force constants:
              Numerical evaluation of first derivatives of the density matrix
              wrt coordinates.
              =  0 Automatic optimum choice.
              =  1 Central finite differences using symmetric steps
                   in both directions.
              =  2 One-sided finite differences.
                   Never selected by default. Should be used with caution
                   since numerical instabilities may occur.
              NMR: Calculation of one-electron terms.
              =  0 Automatic optimum choice.
              =  1 Explicitly evaluate all one-electron quantities (not using
                   hermiticity). This is two times slower than option indsym=2,
                   but may be used to find failures in integral routines since
                   equivalent integrals are computed twice independently.
              =  2 Use hermiticity of the one-electron quantities (HAB, H0B)
                   to reduce the number of integrals needed.
              **** Input option mainly for debugging.
              **** Should be avoided in production runs.
      iqswap  Control of swapping for right-hand sides (rhs) of CPHF equations.
              =  0 Automatic optimum choice.
              = -1 Never swap.
              =  1 Build out-of-core, bring in for CPHF.
                   Only useful with direct solver from LAPACK, see idens=3.
              =  2 Build out-of-core.
              =  3 Recompute rhs as needed and consume solution vectors
                   on the fly. Only valid with idens=8.
      iaveit  Estimated average number of CPHF iterations.
              =  0 Use reasonable heuristic estimate. Check code for details.
              = -n Use heuristic estimate*ABS(n).
              =  n Input value.
              Note: iaveit will be reset to the average number observed
              during the actual run. The change is only visible to routines
              called from PSDRV, see code.
      imaxit  Estimated maximum number of CPHF iterations.
              =  0 Use default: 10 + 1.5*iaevit.
              = -1 Use default, same as imaxit=0.
              =  n Input value.
              Note: imaxit will be reset to the largest number observed
              during the actual run. The change is only visible to routines
              called from PSDRV, see code.
      inrhs   Number of CPHF equations that are solved simultaneously.
              =  0 Automatic optimum choice.
              = -1 Solve for all variables at once.
              = -n ncpvrs/2**(n-1) variables at once.
                   ncpvrs = number of perturbations.
              =  n Input value: preferably 3, 6, or 12.
      ikrvec  Debug option (see code). Do not use.
              =  0 Normal calculation.
      irows   Number of rows of CPHF K matrix that are
              held in core during out-of-core solution.
              =  0 Automatic optimum choice.
              = -n maxrows/2**n.
              =  n Input value.
      iprcon  Preconditioner in iterative CPHF solution
              =  0 Automatic optimum choice.
                   For idens=6,7,8: iprcon=3.
                   For idens=4,5  : iprcon=4.
              =  1 J.A.Pople, R.Krishnan, H.B.Schlegel, J.S.Binkley,
                   Int.J.Quant.Chem.Symp.  13, 225 (1979).
              =  2 M.J.S.Dewar, D.A.Liotard, Theochem 206, 123 (1990).
                   Use dshift as the shift value, with a default shift
                   of 0.15 au. In most cases iprcon=3 fares better.
              =  3 Estimate shift value for each active coupling block
                   as an average of K(Last1,First2,Last1,First2) and
                   K(First1,First2,First1,First2).
              =  4 Use exact diagonal value as a shift
                   (available only for idens=4,5).
              =  5 Estimate shift value for each coupling block by
                   interpolation on K(First1,First2,First1,First2),
                   K(Last1,First2,Last1,First2) and
                   K(Last1,Last2,Last1,Last2). Usually much worse
                   than iprcon=3, but sometimes slightly better.
              =  6 Assume shift value to be equal to the corresponding
                   Coulomb integral. Almost as efficient as iprcon=4.
                   Should be used only if iprcon=3 is not satisfactory,
                   because it needs an N**3 step while gaining marginal
                   improvement over iprcon=3.
              **** Additional conventions:
              For iprcon=3-6, the estimate is scaled by dshift
              (default 1.0 for iprcon=3,5,6 and default 0.9 for iprcon=4).
              For iprcon=2,3,5,6, the scaled estimate is replaced by 0.7*DELTA
              (difference in corresponding orbital energies) if it exceeds
              that value. For iprcon=4, there is no such check.
      incpus  Not yet implemented. Do not use.
              =  0 Normal calculation.
      idstrp  Fine tuning (see code). Do not use.
              =  0 Automatic optimum choice.
      ihlst   Treatment of intermediate terms in the static part of the
              half-electron gradient.
              =  0 Automatic optimum choice.
              =  1 Compute whenever needed.
              =  2 Compute once and keep in core.
      ihlwrp  Wrapping redundant into nonredundant CPHF variables for the
              half-electron gradient.
              =  0 Automatic optimum choice.
              =  1 Explicit formation of rhs (CPHF) for
                   the Z vector in MO basis.
              =  2 Transformation into AO basis.
      ikmode  Method for computing CPHF K matrix.
              =  0 Automatic optimum choice.
              =  1 Use explicit transformation of integrals into MO basis.
              =  2 Use AO->Fock->MO procedure.
      isolve  Selection of iterative linear solver,
              usually with basis vector sharing (bvs).
              =  0 Automatic optimum choice.
              =  1 Pople's solver
              =  2 Solver with bvs, minimize norm of the residual.
              =  3 Solver with bvs, make residual orthogonal to the
                   basis vectors.
              =  4 CG-like solver with bvs, minimize 2-norm of the residual.
              =  5 CG-like solver with bvs, make residual orthogonal to the
                   search directions.
              =  6 Quasi-CG solver with bvs.
                   Reduces to exact CG when dbascr is less than zero or when
                   solution for a single variable is attempted with ikrsav=0.
              Note: Options isolve=4-6 will use amount of memory independent
              of the number of iterations, but they may require more
              iterations than isolve=1-3 (especially when using iprcon=1).
      ikrsav  Defines the number of basis vectors
              shared during iterative linear solution (N).
              ikrsav is actually required to be N+1.
              =  0 Automatic optimum choice.
              =  1 Do not share basis vectors.
              =  n Input value.
              Note: For isolve=4-6, N corresponds to
              the size of the stabilization trail.
      iumix   Number of sequential file to store the Fock matrix derivatives
              during CPHF.
              =  0 Use default (95)
              =  n Input value, n.gt.20 required.
      iurhs   Number of direct access file to store the right-hand sides and
              density matrix derivatives during CPHF.
              =  0 Use default (96)
              =  n Input value, n.gt.20 required.
      iuk     Number of sequential file to store the CPHF K matrix.
              =  0 Use default (97)
              =  n Input value, n.gt.20 required.
      iures   Number of sequential file to store the computed gradients and
              force constants.
              =  0 No such file.
              =  n Input value, n.gt.20 required.
              Note: For positive iures, an additional sequential file is
              generated (with number iures+1) which holds dump information
              from various common blocks and certain cpu times
              (useful for code development).
              Note: iures=98 is recommended if these two files are needed
              (iures,iures+1). This choice assigns files 95-99 to hold
              the internal data from the analytical derivative code
              (assuming the default file numbers for iumix,iurhs,iuk).
      nmrlev  NMR: Choice of integral approximation.
              =  0 Use default value (nmrlev=3).
              =  1 Include only one-center terms.
              =  2 Include also two-center terms.
              =  3 Include also three-center terms.
      intctl  NMR: Calculation of three-center terms.
              =  0 Use default value (intctl=14).
              =  1 Use STOs with an expansion in incomplete gamma functions.
                   This is faster than intctl=2, but numerically less stable.
              =  2 Use STOs with an expansion in derivatives of modified
                   Bessel functions (slow and accurate).
              = 10 Use GTOs with an STO-4G expansion.
                   This is much faster than intctl=1.
              = 11 Use GTOs with an STO-1G expansion.
              = 12 Use GTOs with an STO-2G expansion.
              = 13 Use GTOs with an STO-3G expansion.
              = 14 Use GTOs with an STO-4G expansion.
              = 15 Use GTOs with an STO-5G expansion.
              = 16 Use GTOs with an STO-6G expansion.
      incoff  NMR: Cutoff for three-center integrals.
              = -1 Do not apply any cutoff, compute all three-center
                   integrals explicitly.
              =  0 Use default value (incoff=6).
              =  n Use cutoff of 10**(-n) atomic units.
                   n=6 translates into an accuracy of typically better
                   than 0.01 ppm for NMR chemical shifts.
      nmrnuc  NMR: Centers where the shielding tensors are computed.
              =  0 Use default value (nmrnuc=4).
              =  1 Compute shieldings for all nuclei and
                   all dummy atoms (NICS values).
              =  2 Compute shieldings for all nuclei that have been
                   parametrized and for all dummy atoms (NICS values).
              =  3 Compute shieldings for all nuclei that have been
                   parametrized, but not for dummy atoms.
              =  4 Compute shieldings for all carbon, nitrogen, and
                   oxygen atoms.
              =  5 Compute shieldings only for all carbon atoms.
              =  6 Compute shieldings for all centers
                   defined in input section 3.14.

      ***** Second line *****

      Option  No. Columns Format  Short description

      dstep    8    1-10  g10.5   Step size for numerical density derivatives
      deconv   9   11-20  g10.5   SCF convergence (E) for density derivatives
      dpconv  10   21-30  g10.5   SCF convergence (P) for density derivatives
      dcphf   11   31-40  g10.5   Residual error norm for CPHF solution.
      dprec   12   41-50  g10.5   Desired precision of the derivatives.
      dcdiff  13   51-60  g10.5   Warning if MO coefficients are imprecise.
      dshift  14   61-70  g10.5   Shift parameter for CPHF preconditioners.
      dbascr  15   71-80  g10.5   Rejection criteria for orthogonalization.


      Option  Full description

      dstep   Step size (Angstrom) for the numerical evaluation of density
              matrix derivatives.
              Option for debugging and testing.
              = 0.0 Use default value (0.0002 Angstrom)
      deconv  SCF convergence criterion for the energy during the numerical
              evaluation of density matrix derivatives (in eV).
              Option for debugging and testing.
              = 0.0 Automatic optimum choice.
      dpconv  SCF convergence criterion for the density matrix during the
              numerical evaluation of density matrix derivatives.
              Option for debugging and testing.
              = 0.0 Automatic optimum choice.
      dcphf   Residual error norm for iterative CPHF solution.
              = 0.0 Automatic optimum choice.
              Note: The default values for deconv and dpconv are defined
              to be consistent with the actual value of dcphf.
      dprec   Desired precision of the derivatives.
              = 0.0 Use default values of
                    0.00001 au for gradient and
                    0.00001 au for force constants.
              Note: The default value for dcphf is defined to be consistent
              with the actual value of dprec.
      dcdiff  Issue a warning if the maximum change in the MO coefficients
              exceeds this value during the numerical evaluation of
              density matrix derivatives.
              = 0.0 Use default (dcdiff=0.1).
              = 2.0 Disable the warning.
      dshift  Shift parameter for CPHF preconditioners.
              See comments for iprcon.
              = 0.0 Automatic optimum choice.
      dbascr  Rejection criteria for singular values of
              orthogonalized basis sets (see code).
              = 0.0 Use default values of
                    0.2     for isolve=1-3 and
                    1.0D-10 for isolve=4-6.


      2.4 ***** Linear scaling and direct methods ***** inp24>0 ********

      In standard applications, this input section may be skipped.
      The program will then use reasonable default values for all options.

      Specific input can be requested by the user (inp24>0; intdir>1
      or lindms>1, see earlier description of intdir and lindms).
      One line  of input is  expected for inp24=1 or intdir=3 or lindms=3;
      two lines of input are expected for inp24=2 or intdir=4 or lindms=4:
      16 INTEGER options (first line), and 8 REAL options (second line).

      ***** First line *****

      Option  No. Columns Format  Short description

      maxcg   171   1-5     i5    Maximum number of CG cycles during DMS.
      maxpur  172   6-10    i5    Maximum number of McWeeny purifications.
      mcmax   173  11-15    i5    Convergence criterion for purification (P).
      midemp  174  16-20    i5    Convergence criterion for purification (PP).
      mpurif  175  21-25    i5    CG cycle where purification starts.
      mlroot  176  26-30    i5    Choice of root for the CG density update.
      mcgpre  177  31-35    i5    Preconditioning of CG gradient matrix.
      mcgupd  178  36-40    i5    Choice of update for search direction.
      mpscal  179  41-45    i5    Scaling of intermediate density matrices.
      mcutau  180  46-50    i5    Choice of units for cutoffs.
      mcutm   181  51-55    i5    Cutoff for intermediate products.
      mcutf   182  56-60    i5    Cutoff for Fock matrix.
      mcutp   183  61-65    i5    Cutoff for density matrix.
      mcut1   184  71-72    i5    Cutoff for one-electron integrals (eV).
      mcut2   185  73-74    i5    Cutoff for two-electron integrals (eV).
      mcutr   186  75-80    i5    Cutoff for interatomic distances (A).


      Option  Full description

      maxcg   Maximum number of conjugate gradient (CG) cycles during
              density matrix search.
              Default 2.
      maxpur  Maximum number of McWeeny purifications during one CG cycle.
              Default 2.
      mcmax   Convergence criterion for purification.
              Maximum allowed change of diagonal density matrix elements:
              pmcmax=10**(-mcmax).
              Default for mcmax.le.0: Ignore criterion, use pmcmax=pcgmax/2
              where pcgmax is the corresponding global criterion.
      midemp  Convergence criterion for purification.
              Maximum allowed violation of idempotency for diagonal density
              matrix elements: pidemp=10**(-midemp).
              Default for midemp.le.0: pidemp=1,
              i.e. the criterion is effectively ignored.
      mpurif  CG cycle where purification starts.
              = n Purification starting at CG cycle n.
              = 0 Use default value of mpurif=99.
              =-1 Purification turned off, activated automatically only
                  when the CG search approaches convergence (as measured
                  by the magnitude of the CG update).
              *** For mpurif.ge.0, a purified density matrix is always used,
              available either from a single transformation (before CG
              cycle n) or from repeated transformations (thereafter).
              *** For mpurif.gt.maxcg, purification will be turned on in the
              last CG cycle (maxcg) even if CG convergence is not reached.
              *** For mpurif=-1, the linear CG update for the density matrix
              is used as long as the purification has not been activated.
              Option mpurif=-1 is NOT recommended.
      mlroot  Choice of root for the CG density update.
              The step size for the CG density update is given by the root of
              a quadratic equation.  The root-finding algorithm is as follows:
              (a) Check whether linear term dominates such that the solution
                  of the linear equation can be adopted.
              (b) Reject any physically unacceptable root of the quadratic
                  equation with any diagonal density matrix element below 0
                  or above 2.  (c) Compute the functional value for both roots
                  of the quadratic equation and adopt the lower root.
              Option mlroot controls the first step.
              = n Check (a) is done, and the solution of the linear equation
                  is adopted if the absolute value of x in the term sqrt(1+x)
                  of the quadratic equation is smaller than the threshold:
                  xsqmax = 10**(-mlroot).
                  Errors will then be of the order x**2.
              = 0 Use default value of mlroot=5.
              =-1 Check (a) is not done. Step size determined from (b)-(c).
      mcgpre  Preconditioning of CG gradient matrix.
              = 0 Not used.
              = 1 Diagonal preconditioning applied.
      mcgupd  Choice of update for search direction.
              = 0 Polak-Ribiere formula for CG.
              = 1 Fletcher-Reeves formula for CG.
              = 2 Hestenes-Stiefel formula for CG.
              = 3 Davidon-Fletcher-Powell update.
      mpscal  Scaling of intermediate density matrices to enforce
              normalization which may be lost due to purification.
              = 0 No such scaling.
              = 1 Restore correct trace of the density matrix after each
                  CG cycle by adding a constant to each diagonal element.
              = 2 Restore correct trace of the density matrix after each
                  CG cycle by scaling each diagonal element.
              = 3 Analogous to mpscale=2, but apply the scaling to the
                  complete matrix.
              *** Implemented only for lin4=1,2,3.
      mcutau  Choice of units for cutoffs.
              = 0 Use eV for energies (default).
              = 1 Use atomic units for energies (rather than eV).
              *** Not yet implemented.
      mcutm   Cutoff for intermediate matrices in sparse matrix code.
              =-1 No such cutoff.
              = 0 Use default value of mcutm=100.
              = n Use cutoff for Fock matrix divided by n.
      mcutf   Cutoff for Fock matrix (eV).
              =-1 No such cutoff.
              = 0 Use default value of mcutf=20.
              = n Cutoff 10**(-n).
              *** May be superseded by input for fcutf on second line.
      mcutp   Cutoff for density matrix.
              =-1 No such cutoff.
              = 0 Use default value of mcutp=20.
              = n Cutoff 10**(-n).
              *** May be superseded by input for fcutp on second line.
      mcut1   Cutoff for one-electron integrals (eV).
              =-1 No such cutoff.
              = 0 Use default value of mcut1=20.
              = n Cutoff 10**(-n) eV.
              *** May be superseded by input for fcut1 on second line.
              *** Not yet implemented.
      mcut2   Cutoff for two-electron integrals (eV).
              =-1 No such cutoff.
              = 0 Use default value of mcut2=20.
              = n Cutoff 10**(-n) eV.
              *** May be superseded by input for fcut2 on second line.
              *** Not yet implemented.
      mcutr   Cutoff for interatomic distances (Angstrom).
              =-1 No such cutoff.
              = 0 Use default value of mcutr=10000.
              = n Cutoff of 0.1*n Angstrom.
                  Two-center integrals are not computed if the
                  corresponding distance exceeds the cutoff.
              *** May be superseded by input for fcutr on second line.
              *** Not yet implemented.

      ***** Second line (inp24>1) *****

      The integer-based cutoffs defined on the first line may be replaced
      individually by explicit input of the real-valued cutoffs.

      Option  No. Columns Format  Short description

      fcutf   20    1-10  g10.5   Cutoff for Fock matrix (eV).
      fcutp   21   11-20  g10.5   Cutoff for density matrix.
      fcut1   22   21-30  g10.5   Cutoff for one-electron integrals (eV).
      fcut2   23   31-40  g10.5   Cutoff for two-electron integrals (eV).
      fcutr   24   41-50  g10.5   Cutoff for interatomic distances (Angstrom).

      If a given input value is zero, the corresponding integer-based cutoff
      from the first line is used.

      If a given input value is negative, the corresponding absolute value
      is used in atomic units (rather than eV or Angstrom).


      2.5 ***** Integral evaluation and SCF treatment ***** inp25>0 ****

      IN PREPARATION ... PRELIMINARY ... PARTLY IMPLEMENTED

      In standard applications, this input section may be skipped.
      The program will then use reasonable default values for all options.

      Specific input can be requested by the user (inp25>0).
      One line  of input is  expected for inp25=1.
      Two lines of input are expected for inp25=2.
      16 INTEGER options (first line), and 8 REAL options (second line).

      ***** First line *****

      Option  No. Columns Format  Short description

      imode   211   1-5     i5    Handling of two-electron MNDO-type integrals.
      inout   212   6-10    i5    Storage of data during SCF treatment.
      ivbse   213  11-15    i5    Interface to valence bond treatment.
      ivbovr  214  16-20    i5    Option for overlap in VB treatment.
      ifermi  215  21-25    i5    Electronic temperature for Fermi smearing.
      nfloat  216  21-25    i5    Number of orbitals with floating occupation.
      ndocc   217  26-30    i5    Number of doubly occupied (non-floating) MOs.
      iop218  218  36-40    i5    Not used presently.
      iop219  219  41-45    i5    Not used presently.
      iop220  220  46-50    i5    Not used presently.
      icutzs  221  51-55    i5    GTO integrals: range of small arguments.
      icutsm  222  56-60    i5    GTO integrals: range of medium arguments.
      icutml  223  61-65    i5    GTO integrals: range of large arguments.
      maxfmt  224  66-70    i5    GTO integrals via interpolation.
      limfmt  225  71-75    i5    GTO integrals via asymptotic formulas.
      ihcorr  226  76-80    i5    Option for H bonding corrections.


      Option  Full description

      imode   Handling of two-electron MNDO-type integrals (iop.le.0)
              and choice of subroutine for fock matrix.
              *** Option for testing and debugging.
              =-n Integrals are stored in memory as a matrix -
                  no alternative storage is considered if memory is too small.
                  Fock matrix from subroutine fock if vector length lm6.ge.n,
                  otherwise fock matrix from subroutine fockx.
              =-2 Integrals are stored in memory as a matrix -
                  no alternative storage is considered if memory is too small.
                  Fock matrix from subroutine fock.
              =-1 Integrals are stored in memory as a matrix -
                  no alternative storage is considered if memory is too small.
                  Fock matrix from subroutine fockx.
              = 0 Integrals are stored in memory as a matrix by default.
                  However, if memory is too small, a treatment using imode=1
                  is attempted first. If memory is still too small, the
                  integrals are handled via imode=10.
                  Fock matrix from the most appropriate subroutine as
                  determined internally:
                  - fock or fockx for imode=0,
                  - fock1/fock2 for imode.gt.0.
              = 1 Integrals are stored in memory as a linear array of unique
                  integrals which requires about half the buffer of the
                  storage as a matrix. Stop if memory is too small.
                  Fock matrix from subroutines fock1 and fock2.
              = n Disk input/output of two-electron integrals is enforced
                  using a buffer of 512*n words (n.gt.1).
                  Fock matrix from subroutines fock1 and fock2.
              *** Option imode=0 is recommended since it will choose the
              *** optimum treatment for a given memory size.
      inout   Storage of data during SCF treatment.
              *** Option for testing and debugging.
              =-1 All relevant matrices are stored in memory.
                  Data may be recomputed to avoid memory contention.
                  Presently, several specific OM2 matrices are recomputed.
              = 0 All relevant matrices are stored in memory.
                  If memory is too small, the program will attempt a treatment
                  using first inout=1, then inout=2.
              = 1 The density matrix is stored on disk.
                  Several specific OM2 matrices are also stored on disk.
              = 2 The core hamiltonian matrix, the fock matrix, and the
                  difference density matrix are stored on disk.
              *** Option imode=0 is recommended since it will choose the
              *** optimum treatment for a given memory size.
              Note that the memory requirements can be also reduced by certain
              other input options:
              - nstart=-1 turns off the extrapolation in the SCF iterations
                which may be tolerable in many applications.
              - ifast=2 and idiag=1 enforce the use of slower diagonalization
                routines which is, however, not recommended.
      ivbse   Interface to valence bond (VB) program.
              = 0 Do not use the VB interface.
              = 1 Provide integrals and other relevant input for a
                  VB treatment carried out with a separate VB program.
                  Write these data on file nb3 and continue the run.
                  See code for contents of file nb3.
              =-1 Provide integrals and other relevant input for a
                  VB treatment carried out with a separate VB program.
                  Write these data on file nb3 and stop thereafter.
                  See code for contents of file nb3.
      ivbovr  Option for overlap in VB treatment.
              = 0 Basis functions are assumed to be orthogonal.
                  Use unit matrix for overlap in VB treatment.
                  Use original one-electron and two-electron integrals.
              = 1 Basis functions are assumed to be non-orthogonal.
                  Use full overlap matrix in VB treatment.
                  Use original one-electron and two-electron integrals.
              = 2 Basis functions are assumed to be non-orthogonal.
                  Use full overlap matrix in VB treatment.
                  Use transformed one-electron integrals (OAO -> AO).
                  Use original two-electron integrals.
              = 3 Basis functions are assumed to be non-orthogonal.
                  Use full overlap matrix in VB treatment.
                  Use transformed one-electron integrals (OAO -> AO).
                  Use transformed two-electron integrals (only NDDO).
              = 4 Basis functions are assumed to be non-orthogonal.
                  Use full overlap matrix in VB treatment.
                  Use transformed one-electron integrals (OAO -> AO).
                  Use transformed two-electron integrals (all, N**4).
      ifermi  Electronic temperature (K) for Fermi smearing (abs(iuhf)=5).
              For ifermi.le.0 the default value of 20000 will be used.
      nfloat  Number of molecular orbitals with floating occupation
              for floating occupation number SCF by Granucci and Toniolo
              (iuhf=-6). For nfloat.le.0, the value will default to
              all orbitals. Combination with GUGA-CI (kci=5) is mandatory
              to obtain a physically meaningful electronic energy.
              The defaults will be ici1=nfloat and ici2=0.
      ndocc   For floating occupation number SCF by Granucci and Toniolo
              (iuhf=-6), the number of doubly occupied molecular orbitals
              with fixed (non-floating) occupation.
              Default (nelec-nfloat)/2.
      icutzs  Evaluation of error function F(m,t) for small arguments.
              = 0 Use F(m,0) only for zero argument t=0.
              = n Use F(m,0) for arguments t < 10**(-n).
              *** The default is recommended.
      itolfm  Evaluation of error function F(m,t) for medium arguments.
              Desired accuracy computed from the asymptotic expansion
              which is applied for arguments t > cutsm.
              = n Target accuracy 10**(-n), cutsm selected internally
                  by testing values between 20 and 10.
              = 0 Use default itolfm=9 and cutsm=10.
              *** Option itolfm determines the choice of cutsm
              *** which may only adopt values between 10 and 20.
              *** The default is recommended.
      icutml  Evaluation of error function F(m,t) for large arguments.
              = n Use simple asymptotic formula for t > icutml.
              = 0 Use default icutml=42.
              *** The default is recommended.
      maxfmt  Evaluation of error function F(m,t) via interpolation.
              = n Number of precomputed interpolation points.
              = 0 Use default maxfmt=400.
              *** Maximum value allowed in this version: maxfmt=400.
              *** Choose maxfmt < 0 to avoid interpolation:
              *** this will enforce explicit integral computation
              *** which is more accurate and more expensive.
              *** The recommended default generates 400 equidistant
              *** interpolation points between t=0 and t=19.95.
      limfmt  Asymptotic expressions for Gaussian integrals.
              = n Use such expressions for arguments x > n.
              = 0 Use default limfmt=20.
              *** Choose limfmt=1000 to avoid such expressions:
              *** this will enforce explicit integral computation
              *** which is more accurate and more expensive.
      ihcorr  Option for hydrogen bond correction
              = 0  Do not include hydrogen bond corrections.
              = 1  Include hydrogen bond correction H4 from Hobza
                   (see JCTC 8, 141 (2012)).


      3.1 ***** Title line for the molecule ***************************

      Option  No. Columns Format  Short description

    * kharge  65    1-2     i2    Molecular charge.
    * imult   66    3-4     i2    Definition of multiplicity.
      ktrial  67    5-6     i2    Initial density matrix for SCF.
    * kgeom   68    7-8     i2    Geometry input for reaction paths and grids.
      ipubo   69    9-10    i2    Option for saving SCF results on file.
      iuhf    70   11-12    i2    Type of SCF treatment (RHF/UHF).
    * kitscf  71   13-16    i4    Maximum number of SCF iterations.
    * nprint  72   17-18    i2    Printing flag for SCF.
      ifast   73   19-19    i1    Option for pseudo-diagonalizations in SCF.
      idiag   74   20-20    i1    Option for standard diagonalizations in SCF.
    * ksym    75   21-22    i2    Input of symmetry conditions.
      numsym  76   23-24    i2    Symmetry number for partition function.
    * kci     77   25-26    i2    Choice of correlation treatment.
      nstart  78   27-28    i2    First SCF cycle with extrapolation.
      nstep   79   29-30    i2    SCF extrapolation every nstep SCF cycles.
    * ktitle   -   31-78    a48   Title for the molecule.


      Option  Full description

      kharge  Molecular charge.
              =99 To terminate the job.
      imult   Definition of multiplicity.
              *** Options for RHF calculations.
              = 0 Closed-shell singlet.
              = 1 Open-shell singlet with two singly occupied orbitals.
                  This usually corresponds to an excited singlet state.
              = 2 Doublet.
              = 3 Triplet.
              *** Options for UHF calculations.
              = 0 Singlet.
              = 1 Singlet (same as imult=0).
              = 2 Doublet.
              = 3 Triplet.
              = 4 Quartet (etc).
              *** Note on RHF and UHF calculations.
              By default, RHF for imult=0 and UHF for imult.gt.0
              which may be changed using option iuhf (see below).
              imult.gt.3 is possible for UHF only.
      ktrial  Initial density matrix for SCF.
              = 0 Standard diagonal matrix.
                  The electrons are distributed such that each atom is
                  initially neutral. For main-group elements, electrons
                  are distributed evenly over s and p orbitals without
                  populating d AOs. For transition-metal elements,
                  only s and d AOs are populated.
              = 1 Simplified diagonal matrix.
                  The electrons are distributed evenly over all orbitals.
              = 2 Modified diagonal matrix.
                  The electrons are distributed such that each atom is
                  initially neutral. They are then distributed evenly
                  over the available orbitals at each atom.
                  Equivalent to ktrial=0 for an sp basis.
              =11 Density matrix will be read in from file nb11.
              =12 Eigenvectors will be read in from file nb12
                  to compute density matrix.
              =13 RHF density matrix will be read in from file nb11
                  to form initial alpha and beta UHF density matrices.
              =20 From standard SCF calculation without external charges,
                  external fields or COSMO solvation terms, using the
                  chosen semiempirical method (iop).
              =21 Analogous to ktrial=20 using MNDOC.
              =22 Analogous to ktrial=20 using AM1.
              =23 Analogous to ktrial=20 using MNDO/H
              =24 Analogous to ktrial=20 using MNDO.
              =25 Analogous to ktrial=20 using OM1.
              =26 Analogous to ktrial=20 using OM2.
              =27 Analogous to ktrial=20 using PM3.
              =30 Block-diagonal density matrix from separate RHF-SCF
                  calculations on user-defined fragments (section 3.5)
                  using the same convergence criteria as in the molecular
                  calculation. Some variables are fixed internally:
                  inout=0, iuhf=-1, ifast=2, nstart=-1.
              =31 Same as ktrial=30, only 1 SCF cycle.
              =32 Same as ktrial=30, only 2 SCF cycles.
              =33 Same as ktrial=30, only 3 SCF cycles.
              =34 Same as ktrial=30, only 4 SCF cycles.
              =35 Same as ktrial=30, only 5 SCF cycles.
              =36 Same as ktrial=30, only 6 SCF cycles.
              =37 Same as ktrial=30, only 7 SCF cycles.
              =38 Same as ktrial=30, only 8 SCF cycles.
              =39 Same as ktrial=30, only 9 SCF cycles.
              *** Molecule-specific options ktrial=30-39 prevail over
              *** the general option linfrg=0 (see section 2).
              =41 Use initial guess charges from file CHR.dat to accelerate
                  convergence of SCC-DFTB electron density optimizations.
                  Use of any other value of ktrial>0 is disabled with
                  SCC-DFTB (IOP=5,6) and terminates execution of MNDO99.
      kgeom   Geometry input for reaction paths and grids.
              = 0 Standard.
              = 1 Additional input for reaction path.
                  See chapter 3.4 for more information.
              = 2 Additional input for reaction grid.
                  See chapter 3.4 for more information.
              = 3 Additional input for reaction grid.
                  See chapter 3.4 for more information.
              = 4 Additional input for interpolating on pathways.
                  See chapter 3.4 for more information.
              =-1 Program terminates after computing coordinates
                  and distances (useful for checking the input data).
      ipubo   Save SCF results on file.
              = 0 Do not save.
              = 1 Save density matrix on file nb11.
              = 2 Save eigenvectors on file nb12.
              = 3 Save density matrix on file nb11
                  and  eigenvectors on file nb12.
      iuhf    Type of SCF calculation.
              =-N Always RHF.
              = 0 Without correlation treatment (abs(kci).eq.0):
                  - RHF for closed-shell systems,
                  - UHF for open-shell systems.
                  With correlation treatment (abs(kci).gt.0):
                  - RHF for closed-shell systems,
                  - half-electron ROHF for open-shell systems.
              = N Always UHF.
              The input value of N=abs(iuhf) may be used to define
              the occupations of the molecular orbitals.
              N=0 Standard occupations (implicitly).
              N=1 Standard occupations (implicitly).
              N=2 Standard occupations (explicitly), only useful
                  for testing the code employing occupation numbers.
              N=3 Occupation numbers are read in for each irreducible
                  representation. See chapter 3.6 for details.
              N=4 Average occupation numbers are defined internally
                  for quasi-degenerate levels (see subroutine OCCDEF).
                  The user may also consider to provide corresponding
                  own code in subroutines OCCDEF and/or HECOR for an
                  explicit definition of occupation numbers.
                  *** Experimental option ***
                  *** Not recommended for general use ***
              N=5 Determine fractional occupation numbers using the
                  Fermi smearing technique. The default electronic
                  temperature is 20000 K. It can be changed using
                  option ifermi.
              N=6 Fractional occupation numbers are determined using
                  the floating occupation number SCF procedure by
                  Granucci and Toniolo, see CPL 325, 79 (2000).
                  nfloat and ndocc may be used to select the number
                  of orbitals with floating and fixed occupation.
                  The default of 5.442 eV (0.2 au) for the half-width
                  of the Gaussians may be changed using option domega
                  which sets the half-width in eV.
                  To obtain a physically meaningful electronic energy,
                  a full CI calculation including all orbitals with
                  floating occupation in the active space is required.
                  By default, the program sets the options to perform
                  a full CI calculation: ici1=nfloat and ici2=0.
                  *** Not implemented for UHF (do not use iuhf=6).
                  *** Available for RHF (please use iuhf=-6 and kci=5).
              For N > 1, the program uses ifast=2 internally (see below)
              which slows down the calculation. Hence, N > 1 should be
              avoided in standard applications.
      kitscf  Maximum number of SCF iterations. Default 200.
              =-1 No SCF iterations: perform one energy evaluation using
                  a given density matrix which needs to be provided in a
                  suitable manner (for example via ktrial=11, see above).
                  A subsequent gradient calculation is also possible.
                  MO eigenvectors are not computed so that half-electron
                  and CI calculations are not feasible for ktrial=-1.
                  This option may be useful in QM/MM treatments.
              =-2 No SCF iterations: perform one energy evaluation using
                  given MO eigenvectors which need to be provided in a
                  suitable manner (for example via ktrial=12, see above).
                  A subsequent gradient calculation is also possible.
                  Half-electron and CI calculations can be carried out.
                  This option may be useful in QM/MM treatments.
              =-3 No SCF iterations: evaluate only energy and gradient
                  contributions arising from the electrostatic coupling
                  of the QM system to external MM point charges, using
                  a given density matrix which needs to be provided in a
                  suitable manner (for example via ktrial=11, see above).
                  This option is useful only in QM/MM treatments.
      nprint  Printing flag for SCF.
              =-5 Prints no SCF information.
              =-1 Prints eigenvalues, SCF energies, net charges, and
                  dipole moment.
              = 0 Prints eigenvalues, eigenvectors, SCF energies,
                  symmetry labels, net charges, and dipole moment.
              = 1 Also prints density matrix, and UHF spin densities.
              = 2 Also prints SCF iterations, core hamiltonian, and
                  final fock matrix.
                  For nsav16.gt.0 (see above) also prints MOPAC-style
                  bond orders and Mulliken populations.
              = 5 Debug printing.
              For nprint.gt.0, the eigenvalues and eigenvectors are printed
              in a format which is suitable for 80-column screens, at the
              expense of more lines of output.
      ifast   Fast diagonalizations in SCF.
              = 0 Allowed (whenever possible).
              = 1 Allowed after initial full diagonalizations.
              = 2 Not allowed (for ifast.gt.1).
      idiag   Standard diagonalizations in SCF.
              See documentation for details.
              = 0 In most program versions treated as idiag=9 (evvrsp).
              = 1 Using subroutine tdiag for linear fock matrix (eispack),
                  calls to tred3,tql2,trbak3.
              = 2 Using subroutines tred2 and tql2 for square fock matrix
                  (eispack).
              = 3 Using subroutine dspev for linear fock matrix (lapack).
              = 4 Using subroutine dspevx for linear fock matrix (lapack).
              = 5 Using subroutine dsyev for square fock matrix (lapack).
              = 6 Using subroutine dsyevx for square fock matrix (lapack).
              = 7 Using subroutine dspevd for linear fock matrix (lapack).
              = 8 Using subroutine dsyevd for packed fock matrix (lapack).
              = 9 Using subroutine evvrsp for square fock matrix
                  (eispack-based), calls to tred1,eqlrat,einvit,trbak1.
      ksym    Input of symmetry conditions.
              = 0 No symmetry conditions.
              = 1 Read symmetry conditions.
                  See chapter 3.3 for more information.
      numsym  Symmetry number for calculation of thermodynamic properties.
              = 0 Automatic determination of the symmetry number by the
                  program. This works for most point groups, but may fail
                  in some complicated cases (e.g. Dn, Dnd with even n).
                  Explicit input is then required.
              = 1 C1,Ci,Cs,C0v.
              = 2 C2,C2v,C2h,D0h.
              = 3 C3,C3v,C3h,S6.
              = 4 C4,C4v,C4h,D2,D2d,D2h.
              = 5 C5,C5v,C5h.
              = 6 C6,C6v,C6h,D3,D3d,D3h.
              = 8 D4,D4d,D4h.
              =10 D5,D5d,D5h.
              =12 D6,D6d,D6h,T,Td.
              =24 Oh.
      kci     Correlation treatment.
              = 0 None.
              = 1 Minimal configuration interaction involving two RHF MOs.
                  See chapter 3.7 for more information.
              = 2 Brillouin-Wigner perturbation method
                  with one main configuration. BWEN.
                  See chapter 3.8 for more information.
              = 3 Brillouin-Wigner perturbation method
                  with two main configurations. BWEN1.
                  See chapter 3.8 for more information.
              = 4 Brillouin-Wigner perturbation method
                  with two main configurations. BWEN2.
                  See chapter 3.8 for more information.
              = 5 General configuration interaction based on the
                  graphical unitary group approach (GUGA-CI).
                  See chapter 3.9 for more information.
              = 6 Configuration interaction with single excitations and
                  spin-flip CIS. Dedicated module for use with large
                  active MO spaces. See chapter 3.10 for more information.
              = 7 Spin-adapted spin-flip CIS methods (including SF-XCIS,
                  i.e. spin-flip extended CIS) using dedicated code.
                  See chapter 3.10 for more information.
              = 8 Random phase approximation (RPA) method using dedicated
                  code. See chapter 3.10 for more information.
              For negative kci, geometry optimizations are done at the
              SCF level, followed by a single correlated calculation at
              the final geometry, according to abs(kci).
      nstart  First SCF cycle with extrapolation or damping of density matrix.
              =-1 No extrapolation or damping.
                  The program also sets nstart=-1 if nstart.gt.kitscf.
              = 0 Use nstart=4 by default, unless DIIS is requested
                  (idiis.gt.0) which leads to nstart=-1 by default.
              = n Start extrapolation or damping in the n-th SCF cycle,
                  even if DIIS is requested.
      nstep   Choice between extrapolation or damping and input of
              additional information.
              = n Perform SCF extrapolations every n SCF cycles
                  (after cycle nstart).
              =-n Perform damping in every SCF cycle starting with SCF
                  cycle nstart and using the damping factor n/10.
              = 0 Use nstep=4 by default.
                  Extrapolation is selected by default.
                  Damping requires input for nstep.
       title  Title for the molecule.


      3.2 ***** Molecular geometry ***** One line per atom *************

      The input in this section is either formatted (option iform=0)
      or in free format (option iform.gt.0). The column numbers and the
      formats given below refer to the option iform=0. Alternatively,
      it is possible to read a formatted PDB file (option ingeom=1,
      see description at the end of this chapter).

      Depending on the value of variable igeom (see first line), the
      geometry may be defined in internal coordinates or in cartesian
      coordinates. The geometrical data are stored in a(j,i) where i
      is the number of the atom and j the type of coordinate as given
      in the following table.
      j   internal coordinate   cartesian coordinate
      1   bond length           x-coordinate
      2   bond angle            y-coordinate
      3   dihedral angle        z-coordinate

      In the case of internal coordinates, each atom i is defined with
      respect to three reference atoms na(i),nb(i),nc(i) as follows.
      1   bond length      i-na(i)
      2   bond angle       i-na(i)-nb(i)
      3   dihedral angle   i-na(i)-nb(i)-nc(i)
      For the first three atoms, there are special conventions.
      Atom 1 is put into the origin, no geometry input needed.
      Atom 2 is put on the positive x-axis, bond length 2-1 as input.
      Atom 3 is put into the xy-plane with positive y-coordinate,
      bond length 3-na(3) and bond angle 3-na(3)-nb(3) as input,
      with default values na(3)=2 and nb(3)=1.

      In the case of cartesian coordinates, reference atoms are not
      needed for the definition of the geometry.

      Cartesian coordinates and bond lengths are given in Angstrom,
      and angles in degree.

      Variable Columns Format Description

      nat(i)     1-2     i2   Atomic number of atom (i).
                              =99 for a dummy atom which only assists
                                  in the definition of the geometry.
                              =86 for a specially parametrized link
                                  atom called connection atom and
                                  used in QM/MM hybrid treatments;
                                  currently available for MNDO, MNDO/d,
                                  AM1 and PM3 (published) as well as
                                  for OM1 and OM2 (unpublished).
                              = 0 to end input of geometry.
      a(1,i)    11-20  f10.5  First coordinate.
      la        23-24    i2   Optimization of first coordinate.
                              = 0 a(1,i) is not optimized.
                              = 1 a(1,i) is optimized.
      a(2,i)    31-40  f10.5  Second coordinate.
      lb        43-44   i2    Optimization of second coordinate.
                              = 0 a(2,i) is not optimized.
                              = 1 a(2,i) is optimized.
      a(3,i)    51-60  f10.5  Third coordinate.
      lc        63-64   i2    Optimization of third coordinate.
                              = 0 a(3,i) is not optimized.
                              = 1 a(3,i) is optimized.
      na(i)     71-72   i2    Number of first  reference atom.
      nb(i)     73-74   i2    Number of second reference atom.
      nc(i)     75-76   i2    Number of third  reference atom.

      End input of geometry by nat(i).le.0. In the case of formatted
      input a blank line may be used for this purpose.

      NOTE:
      la = 0 for the first atom in internal coordinates.
      lb = 0 for the first and second atom in internal coordinates.
      lc = 0 for the first, second and third atom in internal coordinates.

      ***** Alternative input from PDB file ***** ingeom=1 ************

      It is possible to read a standard PDB file as part of a standard
      input file. Only the data on the ATOMS records are evaluated.
      The following information from these records is processed.

      record     1-6    a6    Identifier.
                              'ATOM  '  Read this record.
                              'END   '  Terminate PDB input.
                              For any other identifier, skip this line.
      res       18-20   a3    Residue name.
      ires      23-26   i4    Residue sequence number.
      x         31-38  f8.3   Cartesian x coordinate (Angstrom).
      y         39-46  f8.3   Cartesian y coordinate (Angstrom).
      z         47-54  f8.3   Cartesian z coordinate (Angstrom).
      elem      77-78   a2    Element symbol, right-justified.

      One END record must be present at the end for proper termination.

      The PDB input provides data for sections 3.2 and 3.5 (see below).
      When using the PDB input option, it is currently not possible to
      read symmetry data (3.3) or reaction path data (3.4).


      3.3 ***** Symmetry data ***** ksym=1 *****************************

      The input in this section is either formatted (option iform=0)
      or in free format (option iform=1). The column numbers and the
      formats given below refer to the option iform=0.

      Symmetry may be imposed by specifying a reference atom L1, a
      symmetry relation number L2, and up to 10 dependent atoms L3.
      The symmetry relation number L2 defines the coordinates
      a(j,L3) of the dependent atoms in terms of the coordinate
      a(k,L1) of the reference atom.

      The type of the coordinates involved is defined implicitly
      by the symmetry relation number L2 (see below). Notation:
      j   internal coordinate   cartesian coordinate
      1   bond length           x-coordinate
      2   bond angle            y-coordinate
      3   dihedral angle        z-coordinate

      There are 33 predefined symmetry relations available, for L2
      values between 1 and 33, which are listed below.

      Variable Columns Format Description

      L1         1-2     i2   Number of the reference atom.
      L2         3-5     i3   Number of symmetry relation.
                              = 1 implies a(1,L3)= a(1,L1)
                              = 2 implies a(2,L3)= a(2,L1)
                              = 3 implies a(3,L3)= a(3,L1)
                              = 4 implies a(3,L3)=  90-a(3,L1)
                              = 5 implies a(3,L3)=  90+a(3,L1)
                              = 6 implies a(3,L3)= 120-a(3,L1)
                              = 7 implies a(3,L3)= 120+a(3,L1)
                              = 8 implies a(3,L3)= 180-a(3,L1)
                              = 9 implies a(3,L3)= 180+a(3,L1)
                              =10 implies a(3,L3)= 240-a(3,L1)
                              =11 implies a(3,L3)= 240+a(3,L1)
                              =12 implies a(3,L3)= 270-a(3,L1)
                              =13 implies a(3,L3)= 270+a(3,L1)
                              =14 implies a(3,L3)=-a(3,L1)
                              =15 implies a(1,L3)= a(1,L1)*0.5
                              =16 implies a(2,L3)= a(2,L1)*0.5
                              =17 implies a(2,L3)= 180-a(2,L1)
                              =18 implies a(1,L3)= a(1,L1)*depfac
                              =19 implies a(1,L3)= a(1,L1)*0.763932022
                              =20 implies a(1,L3)= a(1,L1)/sqrt(2.0)
                              =21 implies a(1,L3)=-a(1,L1)
                              =22 implies a(2,L3)=-a(2,L1)
                              =23 implies a(3,L3)=-a(3,L1)
                              =24 implies a(2,L3)= a(1,L1)
                              =25 implies a(1,L3)= a(2,L1)
                              =26 implies a(3,L3)= a(1,L1)
                              =27 implies a(1,L3)= a(3,L1)
                              =28 implies a(3,L3)= a(2,L1)
                              =29 implies a(2,L3)= a(3,L1)
                              =30 implies a(2,L3)= 180+a(2,L1)
                              =31 implies a(3,L3)= a(3,L1)*0.5
                              =32 implies a(3,L3)= a(3,L1)*2.0
                              =33 implies a(3,L3)= 120-a(3,L1)*2.0
                              The most useful symmetry relations are
                              L2=1,2,3,14. The relations L2=4-13 are
                              used only for internal coordinates, and
                              L2=24-29 only for cartesian coordinates.
      L3(1)     20-22    i3   Number of dependent atom.
      L3(2)     25-27    i3   Number of dependent atom.
      L3(3)     30-32    i3   Number of dependent atom.
      L3(4)     35-37    i3   Number of dependent atom.
      L3(5)     40-42    i3   Number of dependent atom.
      L3(6)     45-47    i3   Number of dependent atom.
      L3(7)     50-52    i3   Number of dependent atom.
      L3(8)     55-57    i3   Number of dependent atom.
      L3(9)     60-62    i3   Number of dependent atom.
      L3(10)    65-67    i3   Number of dependent atom.
                              For definition of n dependent atoms,
                              L3(1) up to L3(n) must be nonzero.

      End input of symmetry by L1.le.0 or by a blank line.

      The symmetry relation L2=18 requires additional input of the
      factor depfac, immediately after the line containing L2=18.
      The input is in free format for iform.ne.0.

      depfac     1-10  f10.5  Factor to be used with L2=18 (see above).
                              Only one such factor can be defined for
                              a given molecule.


      3.4 ***** Reaction path or grid ***** kgeom=1-4 ******************

      The input in this section is either formatted (option iform=0)
      or in free format (option iform=1). The column numbers and the
      formats given below refer to the option iform=0.

      Option kgeom=1 selects a one-dimensional reaction path.
      Option kgeom=2 selects a two-dimensional reaction grid.
      Option kgeom=3 selects a two-dimensional reaction grid.
      Option kgeom=4 selects a linear interpolation between geometries.

      Comments on kgeom=2 and kgeom=3:
      The first grid variable is incremented in the outer loop,
      and the second one in the inner loop. The first grid variable
      always changes from its lower limit to its upper limit.
      For kgeom=2, this also holds for the second grid variable.
      For kgeom=3, the second grid variable changes from its lower
      to its upper limit for odd values of the outer loop counter,
      and in the opposite direction for even values of this counter.
      The transition from one outer loop to the next should be
      smoother for kgeom=3.

      Comments on kgeom=4:
      Two consecutive complete input files are required to define the
      two geometries that serve as the end points for the interpolation.
      Input files for optimized geometries can be generated by using
      the option nsav7 in geometry optimization runs.
      Input files for optimized Cartesian coordinates in the principical
      axis system are available from force constant runs via nsav7=7.
      Linear interpolation is applied between the two input structures
      to generate the coordinates for the in-between points.
      Single-point calculations are performed at these points.

      All options require additional input for the path/grid variables.

      *** First line for kgeom=1-3 ***

      Variable Columns Format Description

      l1         1-5     i5   Atom on which the reaction path variable
                              or the first grid variable is located.
      l2         6-10    i5   Type of path/grid variable.
                              l2   internal coord   cartesian coord
                              1    bond length      x-coordinate
                              2    bond angle       y-coordinate
                              3    dihedral angle   z-coordinate
      l3        11-15    i5   Number of points on the reaction path
                              or along the first grid direction,
                              in addition to the initial point.
                              Maximum 199 for a path, kgeom=1.
                              Maximum  24 for a grid, kgeom=2.
      step      16-24  f10.5  Step size for path/grid variable.
                              The initial point rc(1) is available
                              from the geometry input for a(l2,l1).
                              The other points rc(i) with i=2,..,l3+1
                              are computed from rc(1)+(i-1)*step.
                              In the case of step=0, explicit input
                              for rc(i) with i=2,..,l3+1 is required
                              on the following line(s).

      *** Second line for kgeom=1-3 (only for step=0) ***

      rc(i)      1-80 8f10.5  l3 values for the path/grid variable.
                              Use more than one line for l3.gt.8.

      At this point, the input for a reaction path calculation is done.
      In the case of a two-dimensional grid calculation, an analogous
      input for the second grid variable follows.

      *** Only line for kgeom=4 ***

      l1         1-5     i5   Total number of points including the two
                              end points. Default 11 (corresponding to
                              ten steps of interpolation)
      lx         6-10    i5   Phase factor for x coordinate. Default 1.
                              Only relevant when input files for the
                              end points are optimized Cartesians in
                              the principal axis system obtained from
                              diagonalization (arbitrary phase).
      ly        10-15    i5   Phase factor for y coordinate. Default 1.
      lz        15-20    i5   Phase factor for z coordinate. Default 1.


      3.5 **** Definition of fragments ***** ktrial=30-39 **************

      The input in this section is formatted.

      It is used to generate a block-diagonal initial density matrix
      for large molecules, especially for CG-DMS calculations.
      It is needed if the following three conditions are satified:
      - linfrg.gt.0 or ktrial=30-39 (requests use of fragments)
      - inpfrg.ge.0                 (requests input of fragments)
      - ingeom.ne.1                 (input not available from PDB file)
      This input section is skipped if any of these conditions is not
      satisfied.

      *** First and following lines ***

      nfrags(i)  1-50   10i5  Number of fragment containing atom i.
                              Use as many lines as necessary.

      *** Subsequent lines ***

      i          1-5     i5   Number of atom bearing a formal charge.
                              = 0 End of this section of input.
      ndum       6-10    i5   Formal charge of atom i, nchrgs(i)=ndum.
                              The array nchrgs is initialized to zero.
                              Only nonzero values are needed from input.


      3.6 ***** MO occupations ***** abs(iuhf)=3 ***********************

      This option has not yet been tested extensively and should only
      be used with caution (see the remarks in the documentation).

      The input in this section is either formatted (option iform=0)
      or in free format (option iform=1). The column numbers and the
      formats given below refer to the option iform=0.

      Occupation numbers can be defined for the following seven Abelian
      point groups (msub=1-7), with irreducible representations ordered
      as shown below.

      msub   group       order of irreducible representations
                         1   2   3   4   5   6   7   8
       1     Cs          A'  A''
       2     C2          A   B
       3     C2v         A1  A2  B1  B2
       4     D2h         Ag  Au  B1g B1u B2g B2u B3g B3u
       5     C2h         Ag  Bg  Au  Bu
       6     D2          A   B1  B2  B3
       7     Ci          Ag  Au

      *** First line ***

      msub       1-5     i5   Point group (see above).

      *** Second line ***

      mocca(i)   1-40   8i5   Occupation numbers for all irreducible
      (i=1,8)                 representations (ordered as above).
                              RHF: Values for doubly occupied MOs.
                              UHF: Values for alpha-spin MOs.

      *** Third line *** Only for cases that are not closed-shell ***

      moccb(i)   1-40   8i5   Occupation numbers for all irreducible
      (i=1,8)                 representations (ordered as above).
                              RHF: Values for singly occupied MOs.
                              UHF: Values for beta-spin MOs.
                              Omit this line for closed-shell RHF.


      3.7 ***** Configuration interaction ***** abs(kci)=1 *************

      The input in this section is either formatted (option iform=0)
      or in free format (option iform=1). The column numbers and the
      formats given below refer to the option iform=0.

      Variable Columns Format Description

      k          1-5     i5   Number of MO involved in CI (see below).
      l          6-10    i5   Number of MO involved in CI (see below).
      nc        11-15    i5   Number of configurations involved in CI.
                              Default values are defined below.
                              Explicit input is possible only for
                              singlets with imult=0 (see below).
      lroot     16-20    i5   CI state whose geometry is optimized.
                              Default 1.

      Three types of minimal configuration interaction are possible
      which, in each case, involve two RHF MOs k and l.

      imult=0, singlet, closed-shell RHF MOs, 2*2 CI or 3*3 CI.
      k is an   occupied MO (default HOMO).
      l is an unoccupied MO (default LUMO).
      Default. nc=3, 3*3 CI with configurations kk,ll,kl.
      Input of nc=2 leads to a 2*2 CI with configurations kk,ll.

      imult=1, singlet, open-shell half-electron RHF MOs, 3*3 CI.
      k and l are the two singly occupied RHF MOs.
      nc=3, 3*3 CI with configurations kk,kl,ll.
      These default values cannot be changed via input.

      imult=2, doublet, open-shell half-electron RHF MOs, 2*2 CI.
      Case a. k singly occupied MO, l unoccupied MO (default LUMO).
      Case b. l singly occupied MO, k   occupied MO (default HOMO-1).
      Case a  is the default case.


      3.8 ***** Perturbation treatment ***** abs(kci)=2-4 **************

      The input in this section is either formatted (option iform=0)
      or in free format (option iform=1). The column numbers and the
      formats given below refer to the option iform=0.

      *** First line ***

      Option  No. Columns Format  Short description

      ici1    131   1-4     i4    Number of active occupied orbitals.
      ici2    132   5-8     i4    Number of active unoccupied orbitals.
      ioutci  133   9-12    i4    Printing flag for perturbation section.
      movo    134  13-16    i4    Explicit definition of active orbitals.
      mpert   135  17-20    i4    Selection of perturbation treatment.
      jci1    151  21-24    i4    Total number of occupied pi orbitals.
      jci2    152  25-28    i4    Total number of unoccupied pi orbitals.
      pipop   153  29-32    i4    Population threshold to identify pi-MOs.

      Option  Full description

      ici1    Total number of occupied orbitals in the active space.
              Default all, up to a maximum of 20.
              Higher ici1 values (ici1.gt.20) are not
              selected by default and must be read in.
      ici2    Total number of unoccupied orbitals in the active space.
              Default all, up to a maximum of 20.
              Higher ici2 values (ici2.gt.20) are not
              selected by default and must be read in.
      ioutci  Printing flag for perturbation section.
              =-5 No output.
              = 0 Standard output.
              = 5 Debug print.
      movo    Definition of orbitals involved in the active space.
              Default 0.
              = 0 Use ici1 highest  occupied orbitals
                  and ici2 lowest unoccupied orbitals.
              = 1 Read orbital numbers on extra lines (see below).
              *** Options movo=-1,-2,-3 are designed for correlating the
              *** pi electrons, with automatic definition of the pi-MOs.
              =-1 Include pi-MOs in active space, px corresponds to pi-AO.
                  For details see description in GUGA section 3.9.
              =-2 Include pi-MOs in active space, py corresponds to pi-AO.
                  For details see description in GUGA section 3.9.
              =-3 Include pi-MOs in active space, pz corresponds to pi-AO.
                  For details see description in GUGA section 3.9.
              =-4 Include MOs with highest d-population in active space.
                  For details see description in GUGA section 3.9.
              *** Option movo=-4 is designed for correlating the d electrons
              *** in transition metals, with automatic definition of d-MOs.
      mpert   Selection of second-order perturbation treatment.
              Default 0 corresponds to mpert=1.
              = 0 BWEN treatment (see below).
              > 0 Four-digit option to choose perturbation treatment.
                  Four perturbation treatments are available:
                  i=1 RSMP, i=2 RSEN, i=3 BWMP, i=4 BWEN.
                  RS Rayleigh-Schroedinger treatment.
                  BW Brillouin-Wigner treatment.
                  MP Moller-Plesset denominators.
                  EN Epstein-Nesbet denominators.
                  The digits 1-4 of mpert define the array ipert(i):
                  ipert(1) = mod(mpert/1000,10)  - column 17.
                  ipert(2) = mod(mpert/100,10)   - column 18.
                  ipert(3) = mod(mpert/10,10)    - column 19.
                  ipert(4) = mod(mpert,10)       - column 20.
                  Conventions:
                  ipert(i) > 0 : Perturbation treatment (i) performed.
                  ipert(i) = 1 : Perturbation energy (i) added to total energy.
                  Examples:
                  = 2222  Evaluate all four perturbation energies.
                  = 1000  Evaluate RSMP = MP2 energy and add to total energy.
                  = 0001  Evaluate BWEN energy and add to total energy.
              *** Note: MNDOC calculations are normally performed with the
              *** default BWEN treatment (no need for explicit mpert input).
      jci1    Total number of occupied pi-MOs or d-MOs.
              For details see description in GUGA section 3.9.
      jci2    Total number of unoccupied pi-MOs or d-MOs.
              For details see description in GUGA section 3.9.
      pipop   Population threshold to identify relevant MOs (movo < 0).
              For details see description in GUGA section 3.9.

      *** Second line (omit if movo.le.0) ***

      imoci(i)   1-80   20i4  Numbers of the active occupied orbitals.
      (i=1,ici1)              The numbering refers to the SCF output.
                              Use more than one line for input, if necessary.

      *** Third  line (omit if movo.le.0) ***

      imoci(i)   1-80   20i4  Numbers of the active unoccupied orbitals.
      (i=ici1+1,              The numbering refers to the SCF output.
         ici1+ici2)           Use more than one line for input, if necessary.


      3.9 ***** GUGA configuration interaction ***** abs(kci)=5 ********

      The input in this section is either formatted (option iform=0)
      or in free format (option iform=1). The column numbers and the
      formats given below refer to the option iform=0.

      *** First line *** General options ***

      Option  No. Columns Format  Short description

      ici1    131   1-4     i4    Number of active occupied orbitals.
      ici2    132   5-8     i4    Number of active unoccupied orbitals.
      ioutci  133   9-12    i4    Printing flag for GUGA-CI.
      movo    134  13-16    i4    Explicit definition of active orbitals.
      mpert   135  17-20    i4    Not used here. Perturbation treatment.
      nciref  136  21-24    i4    Number of reference occupations.
      mciref  137  25-28    i4    Definition of reference occupations.
      levexc  138  29-32    i4    Maximum excitation level wrt any reference.
      iroot   139  33-36    i4    Total number of lowest CI states computed.
      lroot   140  37-40    i4    Defines the CI state of interest.
      cichg   141  41-44    i4    Total charge of CI state.
      multci  142  45-48    i4    Spin multiplicity of CI states.
      ncisym  143  49-52    i4    Symmetry of CI state treated.
      cidir   144  53-56    i4    Direct CI and algorithmic features.
      cidiag  145  57-60    i4    Diagonalization of CI Hamiltonian matrix.
      iuvcd   146  61-64    i4    Spectroscopic properties: UV, CD.
      imcd    147  65-68    i4    Spectroscopic properties: MCD.
      ipop    148  69-72    i4    Population analysis for GUGA-CI.
      ciplot  149  73-76    i4    Control plotting of Shavitt graphs.
      cilead  150  77-80    i4    Identify leading configurations for output.


      Option  Full description

      ici1    Total number of occupied orbitals in the active CI space.
              Default 1 for imult=0 and imult=2,
              default 2 for imult=1 and imult=3.
      ici2    Total number of unoccupied orbitals in the active CI space.
              Default 1 for imult=0 and imult=2,
              default 0 for imult=1 and imult=3.
      ioutci  Printing flag.
              =-10 No output.
              =  0 Small standard output.
              =  1 Also print energies and leading CSFs of all states.
              =  2 Also print execution times for the different GUGACI
                   stages and some information on the diagonalization,
                   e.g. Davidson iterations.
              =  3 Also print CSFs as linear combinations of Slater
                   determinants and complete eigenvectors of all states.
              =  4 Also print CI Hamiltonian.
              =  5 Also print some debug information.
              =  6 Huge debug print including details of integral evaluation.
      movo    Definition of orbitals involved in the active CI space.
              Default 0.
              = 0 Use ici1 highest  occupied orbitals
                  and ici2 lowest unoccupied orbitals.
              = 1 Read numbers of active orbitals.
                  Details see below (third line).
              = 2 This option is no longer supported.
                  Read pairs of orbital numbers to be interchanged
                  for definition of the active CI space.
              = 3 Read numbers of active orbitals (third line)
                  with a given symmetry (fourth line).
              *** Special options for specific systems.
              *** Options movo=-1,-2,-3 are designed for correlating the
              *** pi electrons, with automatic definition of the pi-MOs.
              =-1 Include pi-MOs in active space, px corresponds to pi-AO.
                  First calculate sums of px populations to select pi-MOs.
                  Use pipop, jci1, and jci2 to determine the relevant pi-MOs.
                  Use ici1 highest occupied and ici2 lowest unoccupied pi-MOs.
                  If ici1 or ici2 are greater than the number of occupied or
                  unoccupied pi-MOs found, add the relevant number of highest
                  occupied or lowest unoccupied sigma-MOs to the active space.
              =-2 Include pi-MOs in active space, py corresponds to pi-AO.
                  First calculate sums of py populations to select pi-MOs.
                  Use pipop, jci1, and jci2 to determine the relevant pi-MOs.
                  Use ici1 highest occupied and ici2 lowest unoccupied pi-MOs.
                  If ici1 or ici2 are greater than the number of occupied or
                  unoccupied pi-MOs found, add the relevant number of highest
                  occupied or lowest unoccupied sigma-MOs to the active space.
              =-3 Include pi-MOs in active space, pz corresponds to pi-AO.
                  First calculate sums of pz populations to select pi-MOs.
                  Use pipop, jci1, and jci2 to determine the relevant pi-MOs.
                  Use ici1 highest occupied and ici2 lowest unoccupied pi-MOs.
                  If ici1 or ici2 are greater than the number of occupied or
                  unoccupied pi-MOs found, add the relevant number of highest
                  occupied or lowest unoccupied-sigma MOs to the active space.
              *** Option movo=-4 is designed for correlating the d electrons
              *** in transition metals, with automatic definition of d-MOs.
              =-4 Include MOs with highest d-population in active space.
                  First calculate sums of d populations to select the d-MOs.
                  Use pipop, jci1, and jci2 to determine the relevant d-MOs.
                  Use ici1 highest occupied and ici2 lowest unoccupied d-MOs.
                  If ici1 or ici2 are greater than the number of occupied or
                  unoccupied d-MOs found, add the relevant number of highest
                  occupied or lowest unoccupied other MOs to the active space.
              *** Option movo=-5 is designed for selecting the active space
              *** in non-planar conjugated systems, by identifying the
              *** orbitals that most closely correspond to the pi-MOs of the
              *** system in its planar form.
              =-5 Include "pi-like" MOs in the active space. All atoms with
                  p orbitals are assumed to form part of the conjugated
                  system (unless the conjugated system is defined explicitly
                  using the nconj keyword). For each atom, a local "pi plane"
                  is generated based on the positions of its two nearest
                  conjugated neighbours. The pi population for each atom is
                  calculated along the normal vector to this plane. The
                  relevant MOs are then determined using pipop, jci1 and jci2
                  in the same way as for movo=-1/-2/-3.
      mpert   Option for perturbation treatment (see chapter 3.8).
              Not used here.
      nciref  Number of reference occupations.
              = 0 None. Full CI in the active space.
              = n Chosen number, maximum 20.
              Reference configurations are generated automatically for a
              given occupation. There may be more than one configuration
              for open-shell reference occupations.
      mciref  Definition of reference occupations.
              = 0 Chosen by default, no further input.
                  This automatic selection is available only for:
                * nciref=1: SCF configuration, provided that the spin
                  multiplicity is the same for the SCF and CI calculations.
                * nciref=2: SCF configuration and doubly excited HOMO-LUMO
                  configuration, after closed-shell SCF treatment.
                * nciref=3: closed-shell, singly and doubly excited
                  configurations for two active orbitals (kk, kl, ll),
                  after closed-shell or open-shell singlet SCF treatment
                  (k,l=HOMO,LUMO or singly occupied, respectively).
              = 1 Read occupancies of the orbitals in the active space.
                  Details see below (fourth line).
              = 2 Read excitation indices relative to the SCF configuration
                  and define the reference occupations accordingly.
                  Numbering according to the SCF output.
                  Details see below (fourth line).
              = 3 Starting from the reference occupations corresponding to
                  mciref=0, add further references so that their fraction
                  in all CI roots is at least 85%, and repeat the CI
                  calculation once.
              = 4 Starting from the reference occupations read from the
                  input (see mciref=1), add further references so that
                  their fraction in all CI roots is at least 85%, and
                  repeat the CI calculation once.
      levexc  Maximum excitation level relative to any of the reference
              configurations.
              = 1 CIS, only single excitations.
              = 2 CISD, up to double excitations.
              = 3 CISDT, up to triple excitations.
              = 4 CISDTQ, up to quadruple excitations.
              = n Up to n-fold excitations.
              *** Default 2 for nciref.gt.0.
              *** Not used  for nciref.eq.0.
      iroot   Total number of lowest CI states computed.
              Default 1 (or iroot=lroot for lroot.gt.1).
              For iroot=-1 an additional input line is read with the requested
              number of states for each symmetry.
      lroot   If positive, lroot is the number of the CI state of interest,
              e.g. during a geometry optimization.
              If negative, lroot labels the state in which the CSFs
              corresponding to reference (-lroot) have the largest
              coefficients (norm) compared to the other states.
              Default 1.
      cichg   Total charge of CI state.
              =   0 Same charge as in SCF calculation.
              =   n Value of charge.
              =9999 Zero charge.
      multci  Spin multiplicity of CI states.
              =-1 Varying multiplicity (requires icross=1-5, ncigrd=2)
              = 0 Same multiplicity as specified by imult (default).
              = 1 Singlet.
              = 2 Doublet.
              = 3 Triplet.
              = n State with n-1 unpaired electrons.
      ncisym  Symmetry of CI state that is treated.
              =-1 Do not use any symmetry during CI.
              = 0 Symmetry not specified.
              = n Irreducible representation of CI state.
                  Conventions for these numerical labels
                  are the same as in section 3.6.
                  Restricted to Abelian point groups.
                  n=1-2 for Cs , C2 , Ci.
                  n=1-4 for C2v, C2h, D2.
                  n=1-8 for D2h.
              *** WARNING: If derivatives are calculated numerically,
              the symmetry may temporarily be lowered and the selection
              of a state by symmetry may not work.
      cidir   Direct CI and algorithmic features.
              = 0 Default. Treated as cidir=1.
              = 1 Keep coupling coefficients and CI Hamiltonian in memory.
                  Coupling coefficients for all requested irreducible
                  representations are computed by the shape-driven
                  algorithm and stored in memory at the same time.
                  The CI Hamiltonian is calculated and stored blockwise
                  for negative iroot.
              = 2 Keep coupling coefficients and CI Hamiltonian in memory
                  during CI for a requested irreducible representation.
                  Coupling coefficients are computed by the shape-driven
                  algorithm. For the computation of the density matrices
                  for the analytic gradient and the spectroscopic properties,
                  use the direct algorithm (cidir=3). For a non-negative
                  iroot, cidir=2 is treated like cidir=1.
              = 3 Recompute coupling coefficients by the shape-driven
                  algorithm as needed.
              =-N Like cidir=N, but coupling coefficients are computed
                  by the loop-driven algorithm.
      cidiag  Diagonalization for CI Hamiltonian matrix.
              The same choices are available as in the case of option idiag,
              see section 3.1. In addition, the Davidson diagonalizer can be
              selected (cidiag=10-15).
              = 0 Default, treated as cidiag=4 (dspevx) for in-core
                  calculation and as cidiag=10 (Davidson) for direct CI.
              = 1 Using subroutine tdiag for linear CI matrix (eispack),
                  calls to tred3,tql2,trbak3.
              = 2 Using subroutines tred2 and tql2 for square CI matrix
                  (eispack).
              = 3 Using subroutine dspev for linear CI matrix (lapack).
              = 4 Using subroutine dspevx for linear CI matrix (lapack).
              = 5 Using subroutine dsyev for square CI matrix (lapack).
              = 6 Using subroutine dsyevx for square CI matrix (lapack).
              = 7 Using subroutine dspevd for linear CI matrix (lapack).
              = 8 Using subroutine dsyevd for packed CI matrix (lapack).
              = 9 Using subroutine evvrsp for square CI matrix
                  (eispack-based), calls to tred1,eqlrat,einvit,trbak1.
              =10 Using original Davidson diagonalizer for sparse CI matrix:
                  E. R. Davidson, J. Comp. Phys. 17, 87-94 (1975);
                  P. D. Dacre, Theor. Chim. Acta 43, 197 (1976).
                  The iroot lowest eigenstates of the chosen symmetry
                  (ncisym) are computed.
              =11 Using Davidson diagonalizer for sparse CI matrix with
                  the modifications by W. Butscher and W. E. Kammer,
                  see J. Comp. Phys. 20, 313-325 (1976).
                  *** For positive lroot:
                  Compute only the lroot-th CI state of the chosen symmetry.
                  *** For negative lroot:
                  Choose the initial-guess vector among the initial
                  eigenvectors such that the abs(lroot)-th reference
                  configuration has the largest coefficient, and ignore
                  the value of iroot.
              =12 Using an appropriate implementation of Davidson diagonalizer
                  for sparse CI matrix with the modifications by B. Liu
                  (see B. Liu, in: Numerical Algorithms in Chemistry:
                  Algebraic Methods; C. Moler, I. Shavitt, Eds.;
                  Lawrence Berkeley Laboratory, Berkeley (1978), 49-53).
                  The iroot lowest eigenstates of the chosen symmetry
                  (ncisym) are computed.
                  *** CONVENTION FOR GPU COMPUTING AND IN-CORE CI:
                  cidiag=12 is reset to cidiag=14 if GPU computing is
                  supported by the distribution and a CUDA-capable GPU
                  with a compute capability of at least 2.0 is detected.
                  Otherwise, cidiag=12 is reset to cidiag=13.
              =13 Using Fortran implementation of Davidson diagonalizer
                  with the modifications by B. Liu (see cidiag=12).
                  This variant may be used with in-core or direct CI.
              =14 Using C++ implementation for GPU of Davidson diagonalizer
                  with the modifications by B. Liu (see cidiag=12).
                  This variant may be used with in-core CI only.
              =15 Using C++ implementation for CPU of Davidson diagonalizer
                  with the modifications by B. Liu (see cidiag=12).
                  This variant may be used with in-core CI only.
              *** GENERAL WARNING for cidiag=10-15:
                  See comments for ncisym on symmetry lowering.
      iuvcd   Evaluation of spectroscopic properties for UV and CD spectra.
              = 0 No such evaluation (default).
              = 1 Evaluate spectroscopic properties.
                  Print permanent dipole moments of all states calculated.
              = 2 Also print oscillator strengths, rotational strengths,
                  and transition moments for transitions originating from
                  ground state.
              = 3 Also print electric and magnetic transition moments
                  between excited states.
              = 4 Debug print.
      imcd    Evaluation of spectroscopic properties for MCD spectra.
              = 0 No such evaluation (default).
              *** MCD not implemented in current version.
      ipop    Population analysis for GUGA-CI wavefunction.
              = 0 No such evaluation (default).
              = 1 Population analysis for state lroot.
              = 2 Population analysis for all states calculated previously.
      ciplot  Produce postscript graphics as output.
              = 0 No graphics.
              = 1 Plot Shavitt graph.
              = 2 As ciplot=1, in addition plot all configurations as
                  directed walks.
              = 3 As ciplot=2, in addition plot all off-diagonal matrix
                  elements as loops.
              *** Use the debug options ciplot=2,3 with care. Although
                  individual *.ps-files are small, there are many of them.
      cilead  Define threshold for printing coefficients c(i) of the
              leading configurations, in units of 0.0001.
              = 0 Use default value of 1000 (print c(i) if abs(c(i)).ge.0.1).


      *** Second line *** General options ***

      Option  No. Columns Format  Short description

      jci1    151   1-4     i4    Total number of occupied pi orbitals.
      jci2    152   5-8     i4    Total number of unoccupied pi orbitals.
      pipop   153   9-12    i4    Population threshold to identify pi-MOs.
      inatur  154  13-16    i4    Natural orbital analysis for GUGA-CI.
      ciselt  155  17-20    i4    Selection threshold for CI references.
      imomap  156  21-24    i4    Active orbitals in consecutive CI runs.
      icimap  157  25-28    i4    Reference CSFs in consecutive CI runs.
      keepci  158  29-32    i4    Keeping CI options for next molecule.
      ncigrd  159  33-36    i4    Number of CI gradients to be computed.
      icross  160  27-40    i4    Choice of multi-surface treatment.
      mindav  161  41-44    i4    Minimum dimension of Davidson subspace.
      maxdav  162  45-48    i4    Maximum dimension of Davidson subspace.
      kitdav  163  49-52    i4    Maximum number of Davidson iterations.
      nrmdav  164  53-56    i4    Davidson convergence criterion: norm of q.
      maxmap  165  57-60    i4    Maximum number of attempts to map MOs.
      mapthr  166  61-64    i4    Threshold for successful MO mapping.
      nconj   167  65-68    i4    Number of conjugated atoms for movo=-5.
      iciocc  168  69-72    i4    Number of occupied MOs for movo=4-6.
      icivir  169  73-76    i4    Number of unoccupied MOs for movo=4-6.
      ldroot  170  77-80    i4    CI state considered for movo=4,6.

      Option  Full description

      jci1    Total number of occupied pi-MOs or d-MOs.
              = 0 Include all relevant MOs in the active space, up to a
                  limit of ici1 (default).
              = n Include n relevant MOs in the active space (n.le.ici1)
              An MO is relevant if it has a pi population (movo=-1,-2,-3,-5)
              or d population (movo=-4) above the threshold defined by pipop.
              For jci1=n, the threshold may be reduced to ensure that there
              are n relevant MOs.
      jci2    Total number of unoccupied pi-MOs or d-MOs.
              = 0 Include all relevant MOs in the active space, up to a
                  limit of ici2 (default).
              = n Include n relevant MOs in the active space (n.le.ici2)
              An MO is relevant if it has a pi population (movo=-1,-2,-3,-5)
              or d population (movo=-4) above the threshold defined by pipop.
              For jci2=n, the threshold may be reduced to ensure that there
              are n relevant MOs.
      pipop   Population threshold to identify relevant MOs (movo < 0).
              = 0 Equivalent to n=4000 (default).
              = n Every orbital with a target population greater than
                  n/10000 is considered to be relevant.
              *** If the number of relevant MOs is greater than the
                  number requested according to jci1/jci2, the MOs are
                  selected counting outwards from the HOMO/LUMO.
              *** If jci1/jci2 is greater than the number of relevant
                  MOs, the pipop threshold is reduced until enough
                  relevant MOs are found. If there are not enough
                  MOs with non-negligible pi character, jci1/jci2 will be
                  reset to the number available.
      inatur  Natural orbital analysis for GUGA-CI wavefunction.
              = 0 No such evaluation (default).
              = 1 Natural orbital analysis for state lroot.
              = 2 Natural orbital analysis for all states calculated.
              = 3 Same as inatur=2, with debug print.
      ciselt  Threshold for the automatic selection of CI reference
              configurations, in percent.
              Default 85, corresponding to a combined weight of the
              reference configurations of at least 85%.
      imomap  Definition of active orbitals in consecutive CI runs,
              for example during geometry optimization or dynamics.
              =-1 Only track MO phase.
              = 0 Keep original definition of MO labels according to movo.
              = 1 Track MO character through an overlap criterion and
                  adapt MO labels such that the orbitals retain their
                  character as much as possible.
              *** Both options are accepted for numerical computation
              *** of derivatives.
              = 2 Track MO character using the same criterion as imomap=1,
                  but reject optimization step if the overlap for
                  any active orbital falls below a threshold defined by
                  mapthr. The optimization routine will attempt a smaller
                  step or halt as appropriate.
              *** imomap=2 is currently implemented for the optimizers
                  defined by jop=0, ief.ge.0 (lsub=0 only for ief=0),
                  including conical intersection searches using those
                  optimizers. It is also implemented for excited state
                  dynamics (icross=6), please see the ADAPT_MAP keyword
                  in section K.
              = 3 Track MO character via file I/O (imomap.dat) for use
                  with single-point calculations, usually when driven
                  by external programs (e.g. ChemShell).
                  The single-point job will fail if the overlap for
                  any active orbital falls below a threshold defined by
                  mapthr.
                  If imomap.dat is not present or is inconsistent with
                  the input file, the MOs will not be mapped, but a new
                  file imomap.dat will still be saved at the end of the
                  calculation.
              *** imomap=3 is available for jop<0. When using imomap=3,
                  the options ici1, ici2, movo, nciref, mciref and
                  ncisym should be consistent between runs. The active
                  space definition should be left unchanged and will be
                  overwritten by information from imomap.dat.
      icimap  Definition of reference configurations in consecutive CI
              runs, for example during geometry optimization or dynamics.
              = 0 Keep original definition of CSFs according to movo.
              = n Update definition of reference CSFs gurations in each
                  new CI run by applying the procedure specified for
                  movo=n (n=4-6, see description of option movo).
              *** The current definition of CSFs is never changed during
              *** the numerical computation of derivatives.
      keepci  Continued use of current CI options for the next input,
              for example in multiple calculations on the same molecule.
              =-1 Not done, define everything from scratch.
              = 0 Not done, define everything from scratch.
              = 1 Use current CI options again, especially with regard
                  to the active orbitals and reference configurations.
              *** Experimental option, use at own risk.
      ncigrd  Number of CI gradients to be computed.
              = 0 Calculate at most one CI gradient, for CI state lroot.
                  Default case, no further input required.
              = n Compute CI gradients for n CI states which are specified
                  on an extra line of input (seventh line).
                  Minimum n=2, maximum n=4.
              *** Needed for surface crossings and conical intersections
              *** and ignored if icross=0.
      icross  Choice of multi-surface treatment.
              = 0 No such treatment.
              = 1 Calculate energies and gradients for the states
                  specified by ncigrd.
              = 2 As icross=1, but also calculate all interstate coupling
                  gradients between the specified states.
              *** Options 1-2 are intended for single-point multi-surface
              *** calculations, in particular for interfacing with external
              *** optimisation/dynamics drivers.
              *** If desired they can also be used in conjuction with a
              *** single surface optimisation. The state to be optimised
              *** (specified by lroot) must be in the list of ncigrd gradients.
              = 3 Determine conical intersections between two CI states
                  using the penalty function algorithm of Ciminelli et al.
              = 4 Determine conical intersections between two CI states
                  using the gradient projection algorithm of Bearpark et al.
              = 5 Determine conical intersections between two CI states
                  using the Lagrange-Newton algorithm of Yarkony.
              *** Options 3-5 are intended for use with the internal (MNDO99)
              *** optimization routines to locate conical intersections.
              *** For icross=3, the options ief=0, nrst=-1 and ldrop=100
              *** are recommended.
              *** For icross=4, the default optimizer must be used (ief=0).
              *** For icross=5, ief>0 must be specified because the Yarkony
              *** optimizer is based on the pure Newton-Raphson routine
              *** available through the Eigenvector Following option.
              *** If icross=5 and ief=1, the options llamda=2 and
              *** lnoupd=1 are automatically chosen.
              = 6 Perform excited state dynamics with surface hopping
                  using the semiclassical aproach of Tully and the
                  included dynamics driver.
              *** For icross=6, further input is necessary in the form of
              *** a namelist "dynvar.in".
              = 7 As icross=2, but use the full expression to calculate the
                  non-adiabatic coupling matrix elements between the
                  specified states.
      mindav  Minimum dimension of subspace for Davidson diagonalization.
              For cidiag=10 and cidiag=12-15, the mindav lowest energy
              configuration state functions are included in the initial set
              of trial vectors in addition to the reference configuration
              state functions.
              Default twice the number of requested CI roots, at most 30.
              *** WARNING: If symmetry is not used (ncisym.le.0) and
              mindav is chosen too small, some states may be missed.
      maxdav  Maximum dimension of subspace for Davidson diagonalization.
              Default mindav+30 for cidiag=10, the number of reference CSFs
              plus 30 for cidiag=11, mindav+15 plus 15 times the number of
              requested CI roots for cidiag=12-15.
      kitdav  Maximum number of iterations for Davidson diagonalization.
              Default 40 times the number of requested CI roots.
      nrmdav  Convergence criterion for norm of q vector in Davidson
              diagonalization: 10**(-nrmdav).
              Default 7.
      nconj   Number of atoms in the conjugated part of the system
              (primarily for movo=-5, but can be used with any movo<0).
              = 0 Assume all atoms are conjugated (default).
              = n Read n atom numbers to specify conjugated atoms.
                  Details see below (third line).
              *** For movo=-5, the conjugated part of the system must
                  contain at least 3 atoms.
      maxmap  Maximum number of failed attempts to map active MOs for the
              case imomap=2. If MO mapping fails during an optimization step
              (as defined by mapthr), the optimizer will halve the step
              size taken and attempt to map the MOs again. After maxmap
              failed attempts, the optimization is abandoned.
	      Default 5.
      mapthr  Threshold for MO mapping overlap criterion to be considered
              a success, in percent. Only applicable for the case imomap=2.
              Default 90.
      iciocc  Number of occupied MOs used with movo=4-6 for automatic
              selection of active orbitals (see description for movo).
              Default: use all occupied MOs up to a maximum of 60.
      icivir  Number of unoccupied MOs used with movo=4-6 for automatic
              selection of active orbitals (see description for movo).
              Default: use all unoccupied MOs up to a maximum of 60.
      ldroot  Target state used with movo=4,6 in minimal 3*3 singlet CI
              calculations during automatic selection of active orbitals
              (see description for movo). Default 2 (S1 state).

      *** Third line (for movo=1 or movo=3) ***

      jmoci(i)   1-80   20i4  Numbers of orbitals in the active space.
      (i=1,ici1+ici2)         The numbering refers to the SCF output.
                              If present, the order must be consistent with
                              mocisy (fourth line) and iciref (fifth line).
                              Otherwise the order is irrelevant since the
                              orbitals are sorted before the CI calculation.
                              Use more than one line for input, if there are
                              more than 20 active orbitals.

      *** Fourth line (omit if movo.ne.3) ***

      mocisy(i)  1-80   20i4  Symmetry of orbitals in the active space.
      (i=1,ici1+ici2)         Use more than one line for input, if
                              there are more than 20 active orbitals.

      *** Fifth line (for nciref.gt.0 .and. mciref.eq.1 or 4) ***

        * Definition of the reference configurations: Option to define
          reference occupations which are then used to generate the
          corresponding reference configuration state functions.
          The dimensions in the current version allow for up to
          10 reference occupations and up to 60 active orbitals.
          Typically there is one line of input for each reference.

        * Option mciref=1:

      iciref(i)  1-80   20i4  For each reference, read occupancies
                              of the orbitals in the active CI space.
                              * Default convention: The occupancies
                                are assigned to the active orbitals
                                in the order of increasing energy.
                              * Case movo.ne.0: The occupancies
                                are assigned to the active orbitals
                                in the order as they appear in the
                                input array imoci(i), see above.
                              Use more than one line for input, if
                              there are more than 20 active orbitals.

      *** Sixth line (omit if iroot.ge.0) ***

      iroota(i)  1-80    8i4  Requested number of CI roots of symmetry i.
                              If the input is specified in free format,
                              any missing entries have to be filled with
                              zeros so that there are always eight numbers
                              on this line.

      *** Seventh line (for movo.lt.0, omit if nconj.eq.0) ***

      iconj(i)   1-80   20i4  List of atom numbers that together form
      (i=1,nconj)             the conjugated part of the system.
                              Use more than one line for input if
                              there are more than 20 conjugated atoms.


      3.9.1 *** Multi-state treatment *** abs(kci)=5 and icross>0 ******

      *** First line (only for icross=1-7) ***

      This line is read only for ncigrd.gt.0.
      Suitable default values are used for ncigrd=0 (see below).

      igrst(i)   1-80   20i4  CI gradients are computed for the ncigrd
                              CI states identified by their labels
                              igrst(i) on the energy scale.

      For icross=3-5, this line contains ncigrd=2 entries.
      The corresponding states are involved in a conical intersection.

      For ncigrd=0, the following default values are used (no input):
      ncigrd=2, igrst(1)=1, igrst(2)=2.

      For icross=1-2 and icross=7, no further input is required.
      For icross=3-5, further input is required on subsequent lines
      (see below).
      For icross=6, further input is specified in the namelist "dynvar.in"
      (see below).


      *** Second line (only for multci=-1) ***

      istmul(i)   1-8    2i4  Spin multiplicity of CI state i

      Note that multci=-1 implies icross=1-5, ncigrd=2.

      Multiplicities are specified in the same way as multci.
      If istmul(1) = istmul(2), multci is reset equal to istmul(1)
      and a standard calculation is performed.


      *** Third and subsequent lines (only for icross=3-5) ***

      This line is read only for ncigrd.gt.0.
      Suitable default values are used for ncigrd=0 (see below).

      See TCA paper: Theor.Chem.Acc. 118, 837-844 (2007)
      for further details on algorithms and options.

      * For icross=3, penalty function search for conical intersection:

      c1         1-10  f10.5  Factor c1 in penalty function.
                              See eq.(4) in TCA paper.
                              Default 5.0 (kcal/mol)**(-1).

      c2        11-20  f10.5  Factor c2 in penalty function.
                              See eq.(4) in TCA paper.
                              Default 5.0 (kcal/mol).

      * For icross=4, gradient projection search for conical intersection:

      c3         1-10  f10.5  Prefactor c3 in target gradient.
                              See eq.(8) in TCA paper.
                              Effectively of no significance if using
                              the default initial Hessian guess.
                              Default 1.0.

      c4        11-20  f10.5  Factor c4 in target gradient.
                              See eq.(8) in TCA paper.
                              Default 0.9.

      trad      21-30  f10.5  Static trust radius for Newton step.
                              (applied after 'scale' below)
                              See section 2.2 of TCA paper.
                              Default is switched off (0.0).
                              Recommended value: 0.1

      scale     31-40  f10.5  Scaling of Newton step.
                              See section 2.2 of TCA paper.
                              Default is switched off (0.0).
			      Recommended value: off (0.0).

      * For icross=5, Lagrange-Newton search for conical intersection:

      t1         1-10  f10.5  Threshold (in kcal/mol) below which
                              orthogonalisation of the gradient
                              difference and coupling vectors is
                              switched on.
                              See section 2.3 of TCA paper.
                              Default 0.0001.

      t2        11-20  f10.5  Threshold (in kcal/mol) above which
                              orthogonalisation is switched off again.
                              See section 2.3 of TCA paper.
                              Default 1.0.

      * For icross=5 only, subsequent lines specify geometrical constraints:

      Next line:

      nygeom      1-4     i4  Number of geometrical constraints.
                              If nygeom=0, no further input is necessary.
                              Each constraint is specified with a two-line
                              input as follows:

      --- First line of constraint input:

      iylgc(1,i)  1-2     i2  Type of gradient constraint:
                              1 = bond length
                              2 = bond angle
                              3 = dihedral angle

      iylgc(j,i) 3-14    4i3  List of atom numbers defining the constraint.
                              2 atom numbers (j=2-3) for bond length,
                              3 atom numbers (j=2-4) for bond angle,
                              4 atom numbers (j=2-5) for dihedral angle.

      ---  Second line of constraint input:

      ylgct(i)   1-10  f10.5  Target value for constraint (in Angstroms or
                              degrees).

      * For icross=6, molecular dynamics/surface hopping runs:

      The dynamics options are specified using the auxiliary input file
      "dynvar.in", in the form of a Fortran namelist, which is described
      separately in section K (see below).


      3.10 ***** CIS and RPA excited-state module ***** abs(kci)=6-8 ********

      The input in this section is either formatted (option iform=0)
      or in free format (option iform=1). The column numbers and the
      formats given below refer to the option iform=0.

      *** First line ***

      Option  No. Columns Format  Short description
      ici1    131   1-4     i4    Number of active occupied orbitals.
      ici2    132   5-8     i4    Number of active unoccupied orbitals.
      ioutci  133   9-12    i4    Printing flag.
      nciref  136  21-24    i4    Selects between SASFCIS and SF-XCIS.
      iroot   139  33-36    i4    Total number of lowest CI states computed.
      lroot   140  37-40    i4    Defines the CI state of interest.
      multci  142  45-48    i4    Spin multiplicity of CI states.
      ncisym  143  49-52    i4    Suppress printing symmetry of states.
      cidiag  145  57-60    i4    Treatment of overlap matrix for NAC.
      iuvcd   146  61-64    i4    Spectroscopic properties: UV, CD.

      Option  Full description

      ici1    Total number of occupied orbitals in the active CI space.
              Default is the number of alpha electrons.
      ici2    Total number of unoccupied orbitals in the active CI space.
              Default is the total number of orbitals minus the number
              of alpha electrons.
      ioutci  Printing flag.
              =-10 No output.
              =  0 Small standard output.
              =  1 ...
              =  2 Increasing output size.
              =  3 ...
              =  5 Debug print.
              =  6 More debug print.
      nciref  Selection between spin-flip methods for abs(kci)=7.
              =  1 Spin-adapted spin-flip CIS (SASFCIS).
              =  3 Spin-flip extended CIS (SF-XCIS, default).
                   SF-XCIS is actually done for any nciref.ne.1.
      iroot   Total number of lowest CI states computed.
              Default 6.
      lroot   Index of the CI state of interest (1 for the ground
              state, 2 for the first excited state, etc.), e.g.
              during a geometry optimization. Default 1.
      multci  Spin multiplicity of CI states.
              =-1 Varying multiplicity (requires icross=1-5, ncigrd=2)
              = 0 Same multiplicity as specified by imult (default).
              = 1 Singlet.
              = 3 Triplet.
      ncisym  Flag whether to print symmetry of states.
              = 0 Do not print (actually for any ncisym.le.0).
              = 1 Print (actually for any ncisym.gt.0).
      cidiag  Treatment of the derivative of the negative one halfth power
              of the overlap matrix during calculation of the non-adiabatic
              coupling matrix elements.
              = 0 Default: Approximation using Eq. (46) in
                  Liu et al., J. Chem. Phys. 148, 244108 (2018).
              = 1 Numerical computation using finite differences,
                  actually for any cidiag.gt.0.
      iuvcd   Evaluation of spectroscopic properties for UV and CD spectra.
              = 0 No such evaluation (default).
              = 1 Evaluate spectroscopic properties.
                  Print permanent dipole moments of all states calculated.
              = 2 Also print oscillator strengths, rotational strengths,
                  and transition moments for transitions originating from
                  ground state.

      *** Second line ***

      imomap  156  21-24    i4    Indicate active MO mapping failure.
      ncigrd  159  33-36    i4    Number of CI gradients to be computed.
      icross  160  27-40    i4    Choice of multi-surface treatment.
      maxdav  162  57-60    i4    Maximum number of attempts to map MOs.
      kitdav  163  49-52    i4    Maximum number of Davidson iterations.
      nrmdav  164  53-56    i4    Davidson convergence criterion: norm of q.
      mapthr  166  61-64    i4    Threshold for successful MO mapping.

      Option  Full description

      imomap  Indicate active MO mapping failure setting ICALL to -1.
              = 0 Do not indicate active MO mapping failure (default).
              = 1 Indicate active MO mapping failure.
      ncigrd  Number of CI gradients to be computed.
              = 0 Calculate at most one CI gradient, for CI state lroot.
                  Default case, no further input required.
              = n Compute CI gradients for n CI states which are specified
                  on an extra line of input (seventh line).
                  Minimum n=2, maximum n=4.
              *** Needed for surface crossings and conical intersections
              *** and ignored if icross=0.
      icross  Choice of multi-surface treatment.
              = 0 No such treatment.
              = 1 Calculate energies and gradients for the states
                  specified by ncigrd.
              = 2 As icross=1, but also calculate all interstate coupling
                  gradients between the specified states.
              *** Options 1-2 are intended for single-point multi-surface
              *** calculations, in particular for interfacing with external
              *** optimisation/dynamics drivers.
              *** If desired they can also be used in conjuction with a
              *** single surface optimisation. The state to be optimised
              *** (specified by lroot) must be in the list of ncigrd gradients.
              = 3 Determine conical intersections between two CI states
                  using the penalty function algorithm of Ciminelli et al.
              = 4 Determine conical intersections between two CI states
                  using the gradient projection algorithm of Bearpark et al.
              = 5 Determine conical intersections between two CI states
                  using the Lagrange-Newton algorithm of Yarkony.
              *** Options 3-5 are intended for use with the internal (MNDO99)
              *** optimization routines to locate conical intersections.
              *** For icross=3, the options ief=0, nrst=-1 and ldrop=100
              *** are recommended.
              *** For icross=4, the default optimizer must be used (ief=0).
              *** For icross=5, ief>0 must be specified because the Yarkony
              *** optimizer is based on the pure Newton-Raphson routine
              *** available through the Eigenvector Following option.
              *** If icross=5 and ief=1, the options llamda=2 and
              *** lnoupd=1 are automatically chosen.
              = 6 Perform excited state dynamics with surface hopping
                  using the semiclassical aproach of Tully and the
                  included dynamics driver.
              *** For icross=6, further input is necessary in the form of
              *** a namelist "dynvar.in".
              = 7 As icross=2, but use the full expression to calculate the
                  non-adiabatic coupling matrix elements between the
                  specified states.
      maxdav  Maximum dimension of subspace for Davidson diagonalization.
              Default iroot * kitdav.
      kitdav  Maximum number of iterations for Davidson diagonalization.
              Default 50.
      nrmdav  Convergence criterion for norm of q vector in Davidson
              diagonalization.
              Default 7.
      mapthr  Threshold for MO mapping overlap criterion to be considered
              a success, in percent. Default 80.


      3.10.1 *** Multi-state treatment *** abs(kci)=6-8 and icross>0 ***

      Options for icross are identical to those for GUGACI (abs(kci)=5).
      For icross=1-7, additional input is needed (see section 3.9.1).
      The input description is not repeated here (see section 3.9.1).


      3.11 ***** Input of reference data **** inrefd nonzero ***********

      The input in this section is either formatted (option iform=0)
      or in free format (option iform=1). The column numbers and the
      formats given below refer to the option iform=0.

      *** Warning: Input in free format not yet implemented.

      There is one line of input for each reference datum.

      Variable Columns Format Description

      id1        1-2     i2   Definition of reference property.
                              = 0 End of this input section.
                              = 1 Heat of formation (kcal/mol)
                              = 2 Bond length (A)
                              = 3 Bond angle (deg)
                              = 4 Dihedral angle (deg)
                              = 5 Ionization potential (eV)
                              = 6 Excitation energy (eV)
                              = 7 Dipole moment (D)
                              = 8 Polarisability: alpha (A**3)
                              = 9 Polarisability: beta (10D-30 esu)
                              =10 Polarisability: gamma (10D-36 esu)
                              =11 Enthalpy change at 298 K (kcal/mol)
                              =12 Dissociation energy (kcal/mol)
                              =13 Activation enthalpy at 298 K (kcal/mol)
                              =14 Ionization energy (kcal/mol)
                              =15 Electron affinity (kcal/mol)
                              =16 Vibrational wavenumber (cm-1)
                              =17 Atomic charge (e)
                              =18 Population (e)
                              =19 S**2 expectation value
                              =20 Gradient component (kcal/mol*A)
                              =21 Internal gradient norm (kcal/mol*A)
                              =22 Cartesian gradient norm (kcal/mol*A)
                              =23 IPs: Higher ionization (eV)
                              =24 IPs: Difference (eV)
                              =25 Dipole moment: non-ZDO (D)
                              =26 Number of imaginary frequencies
                              =27 Wavenumber difference (cm-1)
                              =28 Solvation energy: adiabatic (kcal/mol)
                              =29 Solvation energy: vertical (kcal/mol)
                              =30 NMR chemical shift: gas phase (ppm)
                              =31 NMR chemical shift (ppm)
                              =32 NICS chemical shifts (ppm)
                              =33 CI transition energy (eV)
                              =34 CI rotational strength (DBM)
                              =35 CI oscillator strength (au)
                              =36 CI dipole or transition moment (D)
                              =37 CI dip/tr moment angle: phi (deg)
                              =38 CI dip/tr moment angle: theta (deg)
                              =39 CI dipole moment components (D)
                              =40 Orbital energy (eV)
                              =41 Interaction energy (kcal/mol)
                              =42 Atomization energy at 0 K w/o ZPVE (kcal/mol)
                              =43 Proton affinity (kcal/mol)
                              =44 Reaction energy (kcal/mol)
                              =45 Adiabatic excitation energy (eV)
                              =46 Overall distance criterion (A)
                              =47 Atomization enthalpy at 298 K (kcal/mol)
                              =48 Relative energy at 0 K w/o ZPVE (kcal/mol)
                              =49 Barrier at 0 K w/o ZPVE (kcal/mol)
      id2        3-5     i3   Assignment to a user-chosen group.
                              Irrelevant for the present program.
                              Used as input in a separate evaluation
                              program where a negative value excludes
                              the reference datum from the statistics.
                              Note: Negative id2 values below -90 are
                              used internally and are therefore not
                              allowed as input values.
      id3        6-8     i3   Assignment to a user-chosen subgroup.
                              Irrelevant for the present program.
                              Used as input in a separate evaluation
                              program where a negative value excludes
                              the reference datum from the statistics.
      id4        9-11    i3   Definition of reference datum (see below).
      id5       12-14    i3   Definition of reference datum (see below).
      id6       15-17    i3   Definition of reference datum (see below).
      id7       18-20    i3   Definition of reference datum (see below).
      xi        21-30  f10.5  Reference value (usually from experiment).
      erri      31-40  f10.5  Quoted error of this reference value.
                              Irrelevant for the present program.
                              Used here only for printing purposes.
      wi        41-45   f5.1  Weight of this reference datum.
                              Irrelevant for the present program.
                              Used here only for printing purposes.
      liti      46-50    i5   User-chosen label of literature reference.
                              Irrelevant for the present program.
                              Used here only for printing purposes.
      komi      51-80   a30   Comment on reference datum.
                              Used only for printing purposes.

      For a given property (id1) the reference data can be defined more
      precisely by specifying the input variables id4-id7. Conventions:

              id4 id5 id6 id7

      id1= 1   0   0   0   0  Heat of formation.
                              N4 is not allowed to be
                              non-zero for the ODM2 and ODM3 methods.
               N4  0   0   0  Heat of formation of the current molecule
                              (MOL) relative to a previously calculated
                              molecule (INDEX), with
                              INDEX=N4     for positive N4 ( N4.LT.MOL),
                              INDEX=MOL+N4 for negative N4 (-N4.LT.MOL).
               N4  N5  0   0  Heat of formation of the current molecule
                              relative to two other molecules.
                              Analogous conventions as above (N4,N5).
                              Heat of dimerization for N4=N5.
               N4  N5  N6  0  Heat of formation of the current molecule
                              relative to three other molecules.
                              Analogous conventions as above (N4-N6).
               N4  N5  N6  N7 Heat of formation of the current molecule
                              relative to four other molecules.
                              Analogous conventions as above (N4-N7).
               0   N5  N6  N7 Special option only for atoms.
                              Heat of formation of a configuration with
                              occupation numbers N5, N6, and N7 for
                              the s, p, and d orbitals, respectively.
                              Evaluated from the one-center parameters.
                              Special conventions:
                              N5=N6=N7=0 refers to the configuration
                              used in the SCF calculation (default).
                              This input can thus not be employed for
                              the s0p0d0 configuration (no electrons)
                              which is selected by N5=3, N6=N7=0.
      id1= 2   N4  N5  0   0  Bond length between atoms N4-N5
                              in the full list (including dummy atoms).
                              Allowed range of values: 1 ... NATOMS
      id1= 3   N4  N5  N6  0  Bond angle between atoms N4-N5-N6
                              in the full list (including dummy atoms).
                              Allowed range of values: 1 ... NATOMS
      id1= 4   N4  N5  N6  N7 Dihedral angle between atoms N4-N5-N6-N7
                              in the full list (including dummy atoms).
                              Allowed range of values: 1 ... NATOMS
      id1= 5   0   0   0   0  Lowest vertical ionization potential.
                              Evaluated from Koopmans' theorem.
                              Any input for id4-id7 is ignored.
      id1= 6   N4  N5  N6  0  Vertical excitation energy.
                              Evaluated from the Hartree-Fock energy of
                              a singly excited configuration built from
                              ground-state closed-shell MOs.
                              N4: Initial MO (default HOMO).
                              N5: Final   MO (default LUMO).
                              N6: Multiplicity (default singlet, N6=1).
                              id7 is used internally for counting the
                              excited states treated.
      id1= 7   0   0   0   0  Total dipole moment.
                              Evaluated in ZDO approximation.
               N4  0   0   0  Principal-axis dipole moment component.
                              N4: 1,2,3 for A,B,C axis.
                              Any input for id5-id7 is ignored.
      id1= 8   N4  0   0   0  Polarisability: alpha.
                              N4: 0 from energy derivatives.
                              N4: 1 from dipole moment derivatives.
                              Any input for id5-id7 is ignored.
      id1= 9   N4  0   0   0  First hyperpolarisability: beta.
                              N4: 0 from energy derivatives.
                              N4: 1 from dipole moment derivatives.
                              Any input for id5-id7 is ignored.
      id1=10   N4  0   0   0  Second hyperpolarisability: gamma.
                              N4: 0 from energy derivatives.
                              N4: 1 from dipole moment derivatives.
                              Any input for id5-id7 is ignored.
      id1=11   N4  N5  N6  N7 Enthalpy change at 298 K.
                              Identical conventions as for id1=1.
                              Only difference: Property name (output).
               0   N5  N6  N7 Special option only for atoms.
                              Energy of an atomic configuration with
                              occupation numbers N5, N6, and N7 for
                              the s, p, and d orbitals, respectively,
                              relative to the neutral ground state.
      id1=12   N4  N5  N6  N7 Dissociation energy.
                              Identical conventions as for id1=1.
                              Only differences from id1=11:
                              Opposite sign and property name (output).
      id1=13   N4  N5  N6  N7 Activation enthalpy at 298 K
                              (conformational or reactive).
                              Identical conventions as for id1=1.
                              Main difference: Property name (output).
      id1=14   N4  0   0   0  Adiabatic ionization energy.
                              Evaluated as a relative energy.
                              There are no checks whether the partners
                              are matching (molecule and its cation).
                              Analogous conventions as for id1=1.
      id1=15   N4  0   0   0  Adiabatic electron affinity.
                              Evaluated as a relative energy.
                              There are no checks whether the partners
                              are matching (molecule and its anion).
                              Analogous conventions as for id1=1.
      id1=16   N4  0   0   0  Vibrational wavenumber.
                              N4: Index of vibration for wavenumbers
                              in ascending order (1 ... 3*N).
               N4  -1  0   0  N4: Index of vibration for wavenumbers
                              in descending order (highest: N4=1).
               N4  N5  0   0  N4: Index of vibration for wavenumbers
                              in descending order, for a given symmetry
                              or degeneracy.
                              *** For nondegenerate point groups.
                              N5: Label for irreducible representation.
                              See chapter 3.6 for possible N5 values
                              in this version of the program.
                              Example: N4=N5=1 specifies the highest
                              wavenumber of the totally symmetric modes.
                              *** For degenerate point groups.
                              N5: Degeneracy number (1 or 2 or 3).
                              Example: N4=N5=1 specifies the highest
                              wavenumber of the nondegenerate modes.
                              Note: For the doubly (triply) degenerate
                              modes, the highest wavenumber refers to
                              N4=1-2 (1-3), the second highest one to
                              N4=3-4 (4-6), etc.
      id1=17   N4  0   0   0  Atomic charges.
                              N4: Number of atom.
      id1=18   N4  N5  0   0  Subshell populations.
                              N4: Number of atom.
                              N5: 1 for s, 2 for p, 3 for d.
      id1=19   0   0   0   0  Spin expectation value S**2 (UHF only).
                              Any input for id4-id7 is ignored.
                              Generated by default for UHF.
      id1=20   N4  0   0   0  Gradient norm.
                              Irrelevant for the present program.
                              Used here only for printing purposes.
                              Used elsewhere to define reference data
                              for parametrizations with fixed geometry.
                0  0   0   0  Internal gradient norm of all optimized
                              variables included in the reference data,
               -1  0   0   0  Cartesian gradient norm of all (3*NUMAT)
                              variables included in the reference data.
               N4  0   0   0  Gradient component of optimized variable
                              N4 (N4>0) included in the reference data.
      id1=21   0   0   0   0  Internal gradient norm.
                              Irrelevant for the present program.
                              Used here only for printing purposes.
                              Any input for id4-id7 is ignored.
      id1=22   0   0   0   0  Cartesian gradient norm.
                              Irrelevant for the present program.
                              Used here only for printing purposes.
                              Any input for id4-id7 is ignored.
                              Generated by default.
      id1=23   N4  0   0   0  Higher vertical ionization potential.
                              Evaluated from Koopmans' theorem.
                              N4: Label for the ionized orbital.
                              Standard ascending order. Default HOMO.
               N4  -1  0   0  N4: Label for the ionized orbital.
                              Descending order of occupied orbitals,
                              with N4=1 for HOMO, N4=2 for HOMO-1, etc.
                              Default HOMO.
               N4  N5  0   0  N4: Label for the ionized orbital.
                              Descending order of occupied orbitals,
                              for a given symmetry or degeneracy.
                              *** For nondegenerate point groups.
                              N5: Label for irreducible representation.
                              See chapter 3.6 for possible N5 values
                              in this version of the program.
                              Example: N4=N5=1 specifies the highest
                              totally symmetric occupied orbital.
                              *** For degenerate point groups.
                              N5: Degeneracy number (1 or 2 or 3).
                              Example: N4=N5=1 specifies the highest
                              nondegenerate occupied orbital.
                              Note: For the doubly (triply) degenerate
                              orbitals, the highest eigenvalue refers to
                              N4=1-2 (1-3), the second highest one to
                              N4=3-4 (4-6), etc.
                              Default: Highest orbital of a given type.
      id1=24   N4  N5  0   0  Difference of ionization potentials.
                              Evaluated from Koopmans' theorem.
                              Ionizations from orbitals N4 and N5.
                              N4 must be greater than N5. The resulting
                              difference is defined to be positive.
                              Default N4=HOMO and N5=HOMO-1.
      id1=25   0   0   0   0  Total dipole moment.
                              Evaluated after Loewdin transformation.
               N4  0   0   0  Principal-axis dipole moment component.
                              N4: 1,2,3 for A,B,C axis.
                              Any input for id4-id7 is ignored.
      id1=26   0   0   0   0  Number of imaginary frequencies.
                              Any input for id4-id7 is ignored.
      id1=27   N4  N5  N6  N7 Difference of vibrational wavenumbers.
                              N4 and N5 define the first wavenumber
                              in complete analogy to the conventions
                              for id1=16 (see above).
                              N6 and N7 define the second wavenumber
                              in complete analogy to the conventions
                              for id1=16 (see above).
                              Default. Difference between the two
                              highest wavenumbers.
      id1=28   N4  N5  0   0  Adiabatic solvation energy.
                              Evaluated as energy difference between
                              solution (COSMO treatment) and gas phase,
                              with separate geometry optimizations.
                              There are no checks whether the partners
                              are matching (in the input file).
                              N4: Analogous conventions as with id1=1.
                              N5: Value for option icosmo in COSMO.
                                  See description in chapter 1 above.
                                  Values between 0 and 4 are allowed.
                                  Default (N5=0): N5 is set equal to
                                  the global input value for icosmo
                                  (see chapter 1) if icosmo = 1..4,
                                  otherwise N5 is set equal to 1.
                              Any input for N6 and N7 is ignored.
      id1=29   0   N5  0   0  Vertical solvation energy.
                              Evaluated as energy difference between
                              solution (COSMO treatment) and gas phase,
                              at the optimized gas phase geometry (or
                              at the input geometry for jop.lt.0).
                              N5: Value for option icosmo in COSMO.
                                  See description in chapter 1 above.
                                  Values between 0 and -4 are allowed.
                                  Default (N5=0): N5 is set equal to
                                  the global input value for icosmo
                                  (see chapter 1) if icosmo = -1..-4,
                                  otherwise N5 is set equal to -1.
                              Any input for N4, N6, and N7 is ignored.
      id1=30   N4  N5  0   0  NMR chemical shifts with respect to
                              gas-phase reference data.
                              N4: Number of the atom for which the NMR
                                  chemical shift is given.
                                  The numbering refers to the list of
                                  real atoms (without dummy atoms).
                              N5: In the experimental reference data,
                                  atom N4 is equivalent to atom N5.
                                  The theoretical shifts are averaged.
      id1=31   N4  N5  0   0  NMR chemical shifts with respect to
                              liquid-phase reference data.
                              N4: Number of the atom for which the NMR
                                  chemical shift is given.
                                  The numbering refers to the list of
                                  real atoms (without dummy atoms).
                              N5: In the experimental reference data,
                                  atom N4 is equivalent to atom N5.
                                  The theoretical shifts are averaged.
      id1=32   N4  0   0   0  NICS chemical shifts.
                              N4: Number of the NICS point for which
                                  the chemical shift is given.
                                  The numbering refers to the input
                                  list of NICS points.
      id1=33   N4  N5  0   0  CI energy for transition originating from
                              the ground state.
                              N4: If N5.EQ.0, number of excited state,
                                  i.e.: 2 for the first excited state.
                                  If N5.GT.0, only states with this
                                  symmetry are counted.
                              N5: Symmetry number of excited state
                                  or 0 if symmetry does not matter.
      id1=34   N4  N5  0   0  CI dipole-velocity rotational strength for
                              transition originating from ground state.
                              N4: Analogous to id1=33.
                              N5: Analogous to id1=33.
      id1=35   N4  N5  N6  0  CI oscillator strength for transition
                              originating from the ground state.
                              N4: Analogous to id1=33.
                              N5: Analogous to id1=33.
                              N6: 0 default (treated as N6=1),
                                  1 dipole-length formalism,
                                  2 dipole-velocity formalism,
                                  3 mixed formalism.
      id1=36   N4  N5  N6  0  CI dipole or transition moment.
                              N4: If N5.EQ.0, number of state, i.e.:
                                  1 for ground state,
                                  2 for first excited state, etc.
                                  If N5.GT.0, only states with this
                                  symmetry are counted.
                              N5: Symmetry number of excited state
                                  or 0 if symmetry does not matter.
                              N6: 0 permanent dipole moment,
                                  1 transition moment for transitions
                                    originating from the ground state
                                    (dipole-length formalism),
                                  2 transition moment for transitions
                                    originating from the ground state
                                    (dipole-velocity formalism),
                                  3 difference (N6=1) minus (N6=2).
      id1=37   N4  N5  N6  0  CI dipole or transition moment angle phi.
                              N4: Analogous to id1=36.
                              N5: Analogous to id1=36.
                              N6: Analogous to id1=36.
                              *** Convention:
                                  If the dominant component of the
                                  dipole-length dipole transition moment
                                  is in the xy plane, the phase factor
                                  of the excited state is adjusted such
                                  that the angle with the x axis (phi)
                                  is between -90 and +90 deg.
      id1=38   N4  N5  N6  0  CI dipole or transition moment angle theta.
                              N4: Analogous to id1=36.
                              N5: Analogous to id1=36.
                              N6: Analogous to id1=36.
                              *** Convention:
                                  If the dominant component of the
                                  dipole-length dipole transition moment
                                  is on the z axis, the phase factor
                                  of the excited state is adjusted such
                                  that the angle with the z axis (theta)
                                  is between 0 and +45 deg.
      id1=39   N4  N5  N6  0  CI dipole moment components.
      id1=40   N4   0  0   0  Orbital energy.
                              N4: Label for the orbital.
                              Standard ascending order. Default HOMO.
                              *** Comparison with id1=23: both occupied
                              *** and unoccupied orbitals are covered,
                              *** opposite sign for occupied levels.
                              *** The following conventions generalize
                              *** the options offered by id1=23,24.
               N4  -1  0   0  N4: Label for an occupied orbital.
                              Descending order of occupied orbitals,
                              with N4=1 for HOMO, N4=2 for HOMO-1, etc.
                              Default HOMO.
               N4  N5  0   0  N4: Label for an occupied orbital.
                              Descending order of occupied orbitals,
                              for a given symmetry or degeneracy.
                              Default: Highest orbital of a given type.
                              *** For nondegenerate point groups.
                              N5: Label for irreducible representation.
                              See chapter 3.6 for possible N5 values
                              in this version of the program.
                              Example: N4=N5=1 specifies the highest
                              totally symmetric occupied orbital.
                              *** For degenerate point groups.
                              N5: Degeneracy number (1 or 2 or 3).
                              Example: N4=N5=1 specifies the highest
                              nondegenerate occupied orbital.
                              Note: For the doubly (triply) degenerate
                              orbitals, the highest eigenvalue refers to
                              N4=1-2 (1-3), the second highest one to
                              N4=3-4 (4-6), etc.
               0   0   N6  -1 N6: Label for an unoccupied orbital.
                              Ascending order of unoccupied orbitals,
                              with N6=1 for LUMO, N6=2 for LUMO+1, etc.
                              No default defined, explicit input needed.
               0   0   N6  N7 N6: Label for an unoccupied orbital.
                              Ascending order of unoccupied orbitals,
                              for a given symmetry or degeneracy.
                              No default defined, explicit input needed.
                              *** For nondegenerate point groups.
                              N6: Label for irreducible representation.
                              See chapter 3.6 for possible N5 values
                              in this version of the program.
                              Example: N6=N7=1 specifies the lowest
                              totally symmetric unoccupied orbital.
                              *** For degenerate point groups.
                              N6: Degeneracy number (1 or 2 or 3).
                              Example: N6=N7=1 specifies the lowest
                              nondegenerate unoccupied orbital.
                              Note: For the doubly (triply) degenerate
                              orbitals, the lowest eigenvalue refers to
                              N6=1-2 (1-3), the second highest one to
                              N6=3-4 (4-6), etc.
               N4  N5  N6  N7 Energy difference between an unoccupied
                              (N6,N7) and an occupied (N4,N5) orbital.
                              This difference is defined to be positive.
                              The two orbitals are specified according
                              to the given conventions (N4,N5,N6,N7),
                              N5=-1 and N7=-1 may be used.
      id1=41   N4  0   0   0  Interaction energy of two fragments at
                              the given input geometry.
                              The first fragment consists of the first
                              N4 atoms, the second one of the remaining
                              atoms (N4+1...NUMAT). This input must be
                              followed by two inputs for the fragments
                              specifying single-point calculations;
                              input coordinates of the fragments will
                              be overwritten by those from the geometry
                              of the whole system.
                              Any input for id5-id7 is ignored.
      id1=42   0   0   0   0  Atomization energy at 0 K without ZPVE.
                              Any input for id4-id7 is ignored.
      id1=43   N4  0   0   0  Proton affinity.
                              N4 is reference to non-protonated form.
                              ** Traditional conventions (iaterg=1)
                              No input for calculating the heat of
                              formation of the proton is necessary,
                              because the experimental value of 367.171
                              kcal/mol is used (HoF at 298 K), see
                              JANAF Thermochemical Tables, 1982 Supplement,
                              J. Phys. Chem. Ref. Data 11, 695 (1982);
                              doi: 10.1063/1.555666.
                              ** Conventions ODM2 and ODM3 (iaterg=-1)
                              Computed from difference of total energies
                              and corrected for the difference between
                              experimental and semiempirical ionization
                              potential of the hydrogen atom.
                              ** Identical conventions as for id1=1.
                              ** Any input for id5-id7 is ignored.
      id1=44   N4  0   0   0  Energy change of any generic reaction.
                              N4 is the stoichiometric coefficient
                              of the current molecule (integer only).
                              Coefficients are positive for products
                              and negative for reactants.
                              Subsequent extra lines are used for input
                              of other chemical species involved in the
                              reaction (see section 3.11.1).
      id1=45   N4  0   0   0  Adiabatic excitation energy.
                              Identical conventions as for id1=1.
                              Differences: Property name (output),
                              units (eV rather than kcal/mol).
                              Any input for id5-id7 is ignored.
      id1=46   0   0   0   0  Square root of the normalized squared
                              sum of all interatomic distances.
                              ** Experimental option.
                              ** Reference value determined from
                              ** experimental or theoretical geometry.
                              ** May be used to assess deviation of
                              ** computed optimized geometry from
                              ** the reference geometry.
      id1=47   0   0   0   0  Atomization enthalpy at 298 K.
                              Any input for id4-id7 is ignored.
      id1=48   N4  N5  N6  N7 Relative energy at 0 K without ZPVE.
                              Identical conventions as for id1=1.
               0   N5  N6  N7 Special option only for atoms.
                              Energy of an atomic configuration with
                              occupation numbers N5, N6, and N7 for
                              the s, p, and d orbitals, respectively,
                              relative to the neutral ground state.
      id1=49   N4  N5  N6  N7 Barrier at 0 K (conformational or reactive).
                              Identical conventions as for id1=1.

      End input of reference data with id1=0.
      In the case of formatted input a blank line may be used.

      3.11.1 ***** Input of reaction partners **** id1=44 **************

      Warning: Input in free format not yet implemented.

      There is one line of input for each reaction partner.
      Input is possible for up to 20 reaction partners.

      Variable Columns Format Description

      icoefs     9-11    i3   Stoichiometric coefficient.
      imol      12-14    i3   The current molecule index.

      Option  Full description

      icoefs  Stoichiometric coefficient.
              Positive for products, negative for reactants.
      imol    The current molecule index (MOL) relative to a
              previously calculated molecule (INDEX), with
              INDEX=IMOL     for positive IMOL ( IMOL.LT.MOL),
              INDEX=MOL+IMOL for negative IMOL (-IMOL.LT.MOL).

      End input of this section with icoefs=0.


      3.12 ***** Input of COSMO data ******** abs(icosmo).gt.2 *********

      The input in this section is either formatted (option iform=0)
      or in free format (option iform=1). The column numbers and the
      formats given below refer to the option iform=0.

      *** First line ***

      Option  No. Columns Format  Short description

      nspa    231   1-5     i5    Number of segments on the unit sphere.
      nvdw    232   6-10    i5    Choice of van-der Waals radii.
      ipot    233  11-15    i5    Choice of electrostatic potential.
      nitro   234  16-20    i5    Empirical correction for nitro group.
      modcsm  235  21-25    i5    Memory allocation for COSMO calculation.
      epsi     16  31-40   f10.5  Dielectricity constant.
      rsolv    17  41-50   f10.5  Effective radius of solvens molecule.
      delsc    18  51-60   f10.5  Distance between surfaces (SAS-charges).
      disex    19  61-70   f10.5  COSMO cutoff parameter.

      Option  Full description

      nspa    Number of segments on the unit sphere.
              Default 42. Minimum 12, maximum 1082.
      nvdw    Choice of van-der Waals radii (Angstrom).
              = 0 Use Bondi values by default.
                  A. Bondi, J.Phys.Chem. 68, 441 (1964).
              =-1 Use Emsley values for radii.
              =-2 Use same values as in MOPAC.
              = n Number of additional lines of input to read non-standard
                  van-der-Waals radii, with one line per element (see below).
      ipot    Choice of electrostatic potential used to compute the
              electrostatic interactions.
              = 0 Use default value (ipot=2).
              = 1 Not implemented. Currently treated as ipot=2.
              = 2 Classical Coulomb potential generated by the atomic
                  monopoles, dipoles, and quadrupoles (no additive terms).
                  Used in the original COSMO code.
              = 3 Semiempirical potential.
              = 4 Parametrized semiempirical potential.
              = 5 Parametrized semiempirical potential.
              = 6 Parametrized semiempirical potential.
              = 6 Parametrized semiempirical potential.
              *** The semiempirical potentials ipot=3-6 are described in
              *** section 3.13 for mmpot=3-6. The conventions for ipot
              *** are analogous to those for mmpot.
      nitro   Empirical additive correction for nitro compounds,
              see A. Gelessus, Ph.D. Thesis, University of Zurich, 1997.
              = 0 No such correction.
              = 1 Apply the correction.
              *** Experimental option, not recommended.
      modcsm  Memory allocation for COSMO calculation.
              = 0 Determined automatically.
              = 1 Reduce memory requirements by the use of linearly packed
                  matrices.
              = 2 Reduce memory requirements further by storing intermediate
                  data on disk. NOT SUPPORTED IN THIS VERSION.
              The default is recommended (modcsm=0).
      epsi    Dielectricity constant.
              Default value: 78.4 (for water).
      rsolv   Effective radius of solvens molecule (in Angstrom) to define
              the distance between the van-der-Waals surface and the solvent
              accessible surface.
              Default value: 1.0
      delsc   Distance between the solvent accessible surface and the surface
              containing the screening charges (in Angstrom).
              Default: delsc=rsolv (screening charges located on the
              van-der-Waals surface).
      disex   Parameter to determine the square (disex2, in Angstrom**2)
              of the distance beyond which the interactions are evaluated
              using a single charge per segment.
              Default for disex: 2.0
              Definition of disex2 in the code:
              rds    = max(delsc,0.1)
              disex2 = (4*(1.5+rsolv-rds)*disex)**2/nspa
              By default (see above):
              rds    = max(rsolv,0.1) = rsolv
              disex2 = (6*disex)**2/nspa
              disex2 = 3.4 Angstrom**2
              This yields solvation energies which are usually within 1 %
              of the values obtained from a full (and much more expensive)
              calculation with a large input value for disex (e.g. 100.0).
              Note that any redefinition of nspa affects disex2 (see above).


      *** Following (nvdw) lines *** one line per element ***

      ivdw       1-5     i5   Atomic number of the element for which
                              the van-der-Waals radius is redefined.
      rivdw      6-15  f10.5  New van-der-Waals radius (Angstrom).
                              Default values are taken from
                              A. Bondi, J.Phys.Chem. 68, 441 (1964).


      3.13 ***** Input of external points ***** mminp=1-2 **************

      The input in this section is either formatted (option iform=0)
      or in free format (option iform=1). The column numbers and the
      formats given below refer to the option iform=0.

      Option mminp=1: Properties are evaluated at the external points.
      In the current version, the electrostatic potential is always
      calculated (according to the value of option mmpot, see below).
      The electric field is the negative gradient of the electrostatic
      potential and is therefore also governed by option mmpot.
      The electric field is currently evaluated only for mmcoup>2.
      For a discussion of semiempirical electrostatic potentials see:
      (1) D. Bakowies and W.Thiel, J.Comp.Chem. 17, 87 (1996).
      (2) G.P. Ford and B. Wang, J.Comp.Chem. 14, 1101 (1993).
      (3) P.L. Cummins and J.E. Gready, Chem.Phys.Lett. 174, 355 (1990).
      (4) M.J. Field et al, J.Comp.Chem. 11, 700 (1990).

      Option mminp=2: A quantum-chemical (QM) calculation is carried out
      for a combined QM/MM hybrid treatment. The actual computation
      depends on the coupling model (as determined by option mmcoup).
      mmcoup=1 : Standard QM calculation.
      mmcoup>1 : QM calculation with external point charges.
      mmcoup>2 : The electric field at the MM atoms is also computed.
      For a discussion of the relevant coupling models see:
      D. Bakowies and W.Thiel, J.Phys.Chem. 100, 10580 (1996).

      *** First line ***

      Option  No. Columns Format  Short description

      numatm  120   1-5     i5    Number of external points.
      mmcoup  121   6-10    i5    Coupling model in QM/MM calculations.
      mmpot   122  11-15    i5    Definition of the electrostatic potential.
      mmlink  123  16-20    i5    Link atom treatment.
      nlink   124  21-25    i5    Number of link atoms.
      mmfile  125  26-30    i5    Input file for external points and charges.
      mcharg  126  31-35    i5    Definition of external charges.
      mmskip  127  36-40    i5    Skip gradient for fixed MM atoms.

      Option  Full description

      numatm  Number of external points.
      mmcoup  Coupling model in QM/MM calculations.
              = 0 No QM/MM treatment.
              = 1 Model A, mechanical embedding.
              = 2 Model B, electronic embedding.
              = 3 Model C, electronic embedding with MM polarization.
      mmpot   Definition of the electrostatic potential and the electric
              field (by implication).
              = 0 Use default value (mmpot=4).
              = 1 Obtained classically from the net atomic charges in the
                  QM region (Coulomb law, monopoles only).
              = 2 Obtained classically from the monopoles, dipoles, and
                  quadrupoles at the QM atoms (no additive terms).
                  This corresponds to the default in the COSMO treatment.
              = 3 Obtained semiempirically from the standard integral
                  approximations and standard parameters.
              = 4 Obtained semiempirically from a special parametrization
                  with a one-parametric core-core function.
                  Omega parameters from ref.1 above.
              = 5 Obtained semiempirically from a special parametrization
                  with a two-parametric core-core function.
                  Omega and delta parameters from ref.1.
              = 6 Obtained semiempirically from a special parametrization
                  with a two-parametric core-core function.
                  Omega and delta parameters from ref.2.
              = 7 Obtained semiempirically, ref. 4.
              = 8 Obtained semiempirically, ref. 3.
              *** The external test charge is treated classically for
                  mmpot=3-6, and as a hydrogen atom for mmpot=8.
              *** Standard parameters (omega=alpha, delta=0) are used for
                  mmpot=4-6, whenever special parameters are not available
                  from ref. 1 or 2.
      mmlink  Link atom treatment.
              Normally only relevant for QM/MM studies.
              = 0 Use default value (mmlink=1).
              = 1 Standard semiempirical approach:
                  Link atoms do not see the MM atoms.
              = 2 Alternative semiempirical approach:
                  Link atoms do see all MM atoms.
                  This leads to excessive interactions unless charges at
                  neighbor atoms are set to zero (responsibility of user).
                  Recommendation: Use zero MM charges in the nearest
                  "charge group".
              See program documentation for details.
      nlink   Number of link atoms.
              Normally only relevant for QM/MM studies.
      mmfile  Definition of input file for external points and charges.
              =-1 Do not read such data from file.
                  These data are defined elsewhere.
              = 0 Read data from standard input.
              = 1 Read data from file nb20.
      mcharg  Definition of external charges.
              = 0 Read charges from input.
              = n Other options not yet implemented.
      mmskip  Gradient calculation for fixed MM atoms.
              = 0 Full calculation for all atoms.
              = 1 Skip gradient calculation for fixed MM atoms
                  which are identified by positive values of the
                  flags ISELCT(I) in common block QMMM6.

      *** Second line *** only for nlink.gt.0 ***

      link(i)    1-80   16i5  Numbers of link atoms in the list of all
                              atoms (QM atoms including dummy atoms).
                              There are nlink input data.
                              Use more than one line, if necessary.

      *** Third and following lines *** only for mmfile.ge.0 ***

      One line per external point to define its Cartesian coordinates
      (in Angstrom) and its charge (in e).

      cm(1,m)    1-12  f12.7  x coordinate.
      cm(2,m)   13-24  f12.7  y coordinate.
      cm(3,m)   25-36  f12.7  z coordinate.
      qm(m)     37-44   f8.4  External point charge.
      iselct(i) 45-47     i3  Flag (see mmskip), read only for mmskip.eq.1.
                              For mmskip.eq.0, any item after qm(m) on the
                              same line will be ignored.


      3.14 **** Data for NMR ***** nmrnuc=6 ****************************

      Explicit input for NMR computations consists of a set of control
      records which have the following format:

      icmd       1-3     i3   Control flag.
      parms      4-80   a77   Internal file for associated data.
                              Depending on the value of the control flag
                              the input for parms is interpreted as:
                       15i5   icmd = 2, 3, 12, 13, 102, 103, 104, or
                     3f10.5   icmd = 101.

      The following table specifies the available control records.

      icmd   Description of the control record.

         0   End of NMR control records.
         1   Exclude all atoms from NMR computation.
         2   Exclude specified centers from NMR computation:
             parms contains the list of the atoms to be excluded.
             The numbering in this list includes any dummy atoms.
         3   Exclude specified elements from NMR computation: parms
             contains atomic numbers of the elements to be excluded.
        11   Include all atoms in NMR computation.
        12   Include specified centers in NMR computation:
             parms contains the list of the atoms to be included.
             The numbering in this list includes any dummy atoms.
        13   Include specified elements in NMR computation: parms
             contains atomic numbers of the elements to be included.
       101   Compute chemical shift for points in space (NICS):
             parms defines these points by specifying their Cartesian
             coordinates in Angstrom.
       102   Compute chemical shift for points in space (NICS):
             parms defines these points by specifying the numbers of
             the corresponding dummy atoms in the list of all atoms.
       103   Compute chemical shift for points in space (NICS):
             parms defines these points by specifying the numbers of
             two atoms (nics1,nics2) which limit a range of reference
             atoms (nics1 - nics2). The Cartesian coordinates of the
             NICS point are computed as the nonweighted mean of the
             Cartesian coordinates of these reference atoms.
       104   Compute chemical shift for points in space (NICS):
             parms defines these points by specifying the numbers of
             the reference atoms in the list of all atoms (including
             dummy atoms). The Cartesian coordinates of the NICS
             point are computed as the nonweighted mean of the
             Cartesian coordinates of these reference atoms.
      >900   Obsolete options for debugging which are not described.

      Note:  Requests from the control records are handled sequentially,
             as these records appear in the input file.
      Note:  Whenever a center is specified in the list of atoms, the
             numbering includes dummy atoms (icmd=2,12,102-104).
      Note:  Up to MXNICS points may be defined (icmd=101-104).
      Note:  Input from this section is completed when icmd=0 or an
             end-of-file is encountered.


      3.15 **** Definition of masses ***** jop=2-6 and kmass>0 *********

      The input in this section is either formatted (option iform=0)
      or in free format (option iform=1). The column numbers and the
      formats given below refer to the option iform=0.

      imass(i)   1-80   20i4  Mass of atom i in vibrational analysis.
                              = 0 Use mass of principal isotope.
                              = m Use mass of isotope with m nucleons.
                              The following isotopes are available.
                              H-2,H-3,Li-6,B-10,C-13,N-15,O-17,O-18,
                              Mg-25,Mg-26,Si-29,Si-30,S-33,S-34,Cl-37.
                              If imass(i) does not correspond to one
                              of these isotopes, the default mass of
                              the principal isotope is taken.

                              Use more than one line, if necessary.

      For kmass=n>1, there are n such definitions which are read to
      define n isotopomers.


      3.16 **** Data for HDLC optimizer ***** ief<0 ********************

      A detailed input description is given in section J.

      Special data for the HDLC optimizer can be read either from the
      standard input file (this section) or from an external file.
      The same input conventions apply in both cases (see section J).
      The input mode is determined by input option ihdlc3:
      ihdlc3 = 0   Read from external input file.
      ihdlc3 = 1   Read from standard input file nb5.


      4. ***** Input for the next molecule *****************************

      At this point, the next molecule can be read.

      In the case of standard input, the options from chapters 1 and 2
      remain valid so that only the data from chapter 3 are needed for
      the next molecule (starting with the title line, chapter 3.1).

      The job is terminated if kharge=99 is read in columns
      1-2 of the title line or if an end-of-file is encountered.

      ******************************************************************
      ******************************************************************

 E.   Outline of keyword-oriented input.

      The keyword input and the MOPAC input (see overview in section B)
      share the same overall input structure and will therefore both
      be discussed in this section. More detailed descriptions of
      the MNDO keywords and the MOPAC keywords will be given in
      sections F and G, respectively.

      The input of keywords is case-insensitive. Internally, keywords
      are represented by upper-case characters. Lower-case characters
      from input are converted automatically.

      The keyword input consists of the following parts.
      (a) MNDO keywords to define the input options from
          chapters 1, 2, 2.1-2.4, 3.1, 3.8 (first line), 3.9 (first
          two lines), 3.10 (two lines), 3.12 (first line), and 3.13
          (first line) of the standard input (see sections C and D).
          The order of the keywords is arbitrary.
          There is at least one line of input with keywords.
          An additional line of input with keywords is read when there
          is a continuation keyword (' &' or ' +') on the current line.
          Up to ten lines of input with keywords are allowed.
      (b) Two lines with text to identify the calculation.
          This text is printed as a header in several output sections.
      (c) Standard input as specified in chapters 3.2 - 3.16 (except
          lines covered by keyword input, see above) of section D,
          in this order.

      The MOPAC input consists of the following parts.
      (a) MOPAC and MNDO keywords to define the input options from
          chapters 1, 2, 2.1-2.4, 3.1, 3.8 (first line), 3.9 (first
          two lines), 3.10 (two lines), 3.12 (first line), and 3.13
          (first line) of the standard input (see sections C and D).
          The order of the keywords is arbitrary.
          A second line of input with keywords is read when there is
          a continuation keyword ( & or + ) on the first line.
          A third line of input with keywords is read when there is
          a continuation keyword ( & or + ) on the second line.
          Hence, up to three lines of input with keywords are allowed.
      (b) Two lines with text to identify the calculation.
          This text is printed as a header in several output sections.
      (c) MOPAC-type input to specify the data from chapters 3.2, 3.3,
          3.4, 3.7, and 3.15 of the standard input (i.e., for geometry,
          symmetry data, reaction paths, configuration interaction,
          and atomic masses, respectively).
          This MOPAC-type input is defined in the MOPAC(6.0) manual.
          The current implementation follows the MOPAC(6.0) conventions
          in order to allow the direct use of MOPAC input files.
      (d) Standard input as specified in chapters 3.6, 3.8, 3.9, 3.11,
          3.12, 3.13 and 3.14 (except lines covered by keyword input,
          see above) of the standard input (i.e. for occupation numbers,
          perturbative correlation treatments, GUGACI options, reference
          data, COSMO solvation treatment, external points charges, and
          NMR data, respectively), in this order.
          Standard input is used for these data because there is no
          equivalent in MOPAC(6.0). This is done to make all options
          of MNDO accessible also when using MOPAC-type input.

      Input for the next molecule: In the case of keyword input or
      MOPAC-type input, a complete set of data must be read for each
      molecule, starting with the keywords (a).

      The job is terminated if an end-of-file is encountered when
      reading the new keywords or if kharge=99 is used as input.

      ******************************************************************
      ******************************************************************

 F.   Description of MNDO input keywords.

      The general format of MNDO keywords is <keyword>=<value>.
      <keyword>   Name of any input variable in the standard input,
                  as defined in this input description (section D).
                  See chapters 1, 2, 2.1-2.4, 3.1, 3.8-3.10, 3.12, 3.13.
      <value>     Actual value of this input variable.

      Input through MNDO keywords is equivalent to standard input.
      MNDO keywords can be employed in two modes of input:

      Keyword input: There are only MNDO keywords (no MOPAC keywords)
                     and possibly continuation keywords ( + or  &).
                     There is at least one line of keywords and at most
                     ten such lines, any additional line requiring a
                     continuation keyword on the preceding line.
      MOPAC   input: MNDO keywords can be combined with MOPAC keywords
                     on the keyword line(s) of MOPAC input.

      Note: A list of all available keywords is printed for jprint=7.
            This list covers both MNDO and MOPAC keywords.


      ******************************************************************
      ******************************************************************

 G.   Description of MOPAC input keywords in this program.

      This section gives a complete list of the MOPAC(6.0) keywords and
      specifies the response of the program when encountering a given
      keyword. This specification includes the following information.

      Availability     yes      Keyword fully implemented.
                       no       Keyword not implemented.
                       partly   Similar option is available.
      Basic action     okay     Use equivalent standard input option.
                       stop     Stop the calculation.
                       ignore   Continue and ignore the keyword.
                       similar  Use a similar standard input option.
      Translation      iop=..   Definition of standard input options
                                used to implement the keyword.
                                See detailed descriptions above.

      Additional remarks are usually given for each keyword. The list
      of keywords below is ordered alphabetically.

      Keyword     Avail-   Basic    Trans-      Remarks
                  ability  action   lation

      &           yes      okay                 next line has keywords
      +           yes      okay                 extra line of keywords
      1electron   partly   similar  nprint= 2   print final hcore matrix
      0scf        yes      okay     kgeom =-1   for checking input data
      1scf        yes      okay     jop   =-1   do one SCF and stop
      aider       no       stop                 read ab initio gradients
      aigin       yes      okay                 read ab initio geometry
                                                as Gaussian Z-matrix
      aigout      no       stop                 print ab initio geometry
                                                in Gaussian format
      am1         yes      okay     iop   =-2   use AM1 method
      analyt      yes      okay     ipsana= 1   analytic gradients
      author      yes      okay                 print author of program
      bar=n.n     no       stop                 option for *saddle*
      biradical   yes      okay     imult = 1   half-electron 3*3 CI
                                    kci   = 1   for singlet states
      bonds       yes      okay     nsav16= 2   MOPAC bond orders
                                    nprint= 2   print bond orders
      c.i.=n      partly   okay     kci   = 1   if n=2, minimal CI
                           stop                 if n.ne.2
      camp        no       stop                 use camp-king method
                                                for SCF convergence
      charge=n    yes      okay     kharge= n   molecular charge
      compfg      no       ignore               printing in compfg
      connolly    no       stop                 option for *esp*
      cycles=n    yes      okay     maxrtl= n   no. of cycles in nllsq
      dcart       no       ignore               printing in dcart
      debug       no       ignore               allow debug keywords
      debugpulay  partly   similar  nprint= 2   option for *pulay*
      denout      yes      okay     ipubo = 1   save p matrix on file 1
      density     partly   similar  nprint= 1   print final p matrix
      dep         no       stop                 generate new code for
                                                blockdata section
      depvar=n    yes      okay     depfac= n   special symmetry input
                                                for relation L2=18
      deriv       no       ignore               printing in deriv
      dforce      yes      okay     jop   = 5   do force constants
                                    jop   = 6   if *nllsq* is specified
                                    lprint= 1   printing in force
      dfp         yes      okay     idfp  = 1   DFP update in flepo
      dipole      no       stop                 fit ESP to total dipole
      dipx        no       stop                 fit ESP to dipole (in x)
      dipy        no       stop                 fit ESP to dipole (in y)
      dipz        no       stop                 fit ESP to dipole (in z)
      dmax=n.nn   yes      okay     dmax  = ..  trust radius for *ef*
      doublet     yes      okay     imult = 2   doublet, RHF or UHF
      drc         no       stop                 dynamic reaction coord.
      dump=n      no       ignore               restart file is saved
                                                automatically
      echo        yes      okay                 echo input data to user
      ef          yes      okay     ief   = 1   eigenvector following
      eiginv      no       ignore               old option for *ef*
      eigs        no       ignore               printing in iter
      enpart      no       stop                 energy partitioning
      esp         no       stop                 electrostatic potential
      esprst      no       stop                 option for *esp*
      esr         no       stop                 unpaired spin density
                                                RHF - not available
                                                UHF - *esr* not needed
      excited     yes      okay     lroot = 2   optimize geometry for
                                    kci   = 1   second-lowest singlet
                                    imult = 1   CI state
      external    yes      okay     iparok= 1   read external parameters
      fill=n      no       stop                 force population of MOs
      flepo       partly   similar  iprint= 1   printing in flepo
      fmat        partly   similar  kprint= 1   printing in fmat
      fock        partly   similar  nprint= 2   print final fock matrix
      force       yes      okay     jop   = 5   do force constants
                                    jop   = 6   if *nllsq* is specified
      fulscf      yes      okay     igrad = 1   full finite-difference
                                                gradients always
      geo-ok      no       ignore               check on distances
      gnorm=n.n   yes      okay     iconv =3    convergence criterion
                                    iprec =-10  on gradient norm
      gradients   yes      okay     jop   =-2   do one SCF + gradients
      graph       yes      okay     nsav13= 1   save file for graphics
      hcore       no       ignore               printing in hcore
      hess=n      yes      okay     igthes= n   hessian for *ef*
      h-prio      no       stop                 option for *drc*
      hyperf      no       stop                 hyperfine couplings
      interp      no       stop                 option for *camp*,*king*
      irc         no       stop                 intrinsic reaction coord
      isotope     yes      okay     middle= 0   save force constants
                                                on file for restart
      iter        no       ignore               printing in iter
      itry=n      yes      okay     kitscf= n   no. of SCF iterations
      iupd=n      yes      okay     iupd=n      hessian update for *ef*
      k=(n.nn,n)  no       stop                 brillouin zone structure
      kinetic     no       stop                 option for *drc*
      king        no       stop                 use camp-king method
                                                for SCF convergence
      large       no       ignore               printing option
      let         yes      okay                 override safety checks
                                    jop   = 2   for force constants and
                                                for input gradient norm
      linmin      partly   similar  iprint= 1   printing in linmin
      localize    no       stop                 find localized MOs
      locmin      partly   similar  iprint= 1   same as *linmin*
      max         yes      okay                 grid size 23*23
      mindo/3     yes      okay     iop   = 1   use MINDO/3 method
      meci        no       ignore               printing in CI treatment
      micros      no       stop                 special CI input
      mmok        yes      okay     immok = 1   mm correction, CONH
      mndo        yes      okay     iop   = 0   use MNDO method
      mode        yes      okay     mode  = n   mode to follow in *ef*
      moldat      no       ignore               printing in input part
      ms=n        no       stop                 spin component in CI
      mullik      yes      okay     nsav16= 2   mulliken populations
                                    nprint= 2   print these populations
      nllsq       yes      okay     jop   = 1   minimize gradient norm
                                    jop   = 4   when used with *optfor*
                                    jop   = 6   when used with *force*
      noanci      yes      okay     ipsana=-1   non-analytic CI derivs
      nodiis      no       ignore               no DIIS in optimization
      nointer     no       ignore               do not print distances
      nolog       no       ignore               no entry in LOG file
      nomm        yes      okay                 no mm correction, CONH
      nonr        yes      okay     lnonr = 1   no NR in *ef*
      nothiel     yes      okay     lsub  = 1   no FSTMIN line search
      noxyz       no       ignore               do not print x,y,z coord
      nsurf       no       stop                 option for *esp*
      oldens      yes      okay     ktrial= 1   read initial p matrix
      oldgeo      yes      okay                 keep previous geometry
      opci        no       ignore               printing in CI part
      open        partly   okay     imult =1-3  RHF open-shell input
                                                for ielec=ilevel=1-2,
                  partly   stop                 other more complicated
                                                RHF open-shell input
      oride       no       ignore               old option for *ef*
      parasok     yes      okay     iparok=-1   use some MNDO parameters
                                                in AM1 or PM3
      pi          no       ignore               sigma/pi analysis for p
      pl          partly   similar  nprint= 2   print pl in iter
      pm3         yes      okay     iop   =-7   use PM3 method
      point=n     yes      okay                 number of points on path
      point1=n    yes      okay                 number of points on grid
      point2=n    yes      okay                 number of points on grid
      polar       yes      okay                 polarizabilities
      potwrt      no       stop                 option for *esp*
      powsq       no       stop                 print option for *sigma*
      precise     partly   similar  iprec =100  increase precision of
                                                various criteria
      pulay       yes      okay     idiis = 1   use pulay method for
                                                SCF convergence
      quartet     partly   similar  imult = 4   quartet, UHF only
      quintet     partly   similar  imult = 5   quintet, UHF only
      recalc=n    yes      okay     ireclc= n   hessian recalc for *ef*
      restart     yes      okay     middle= 1   continue previous job
      root=n      partly   okay     lroot = n   if n.le.3, minimal CI
                           stop                 if n.gt.3
      rot=n       yes      okay     numsym= n   symmetry number
      s1978       yes      okay     iparok= 4   use 1978 S parameters
      saddle      no       stop                 special ts search
      scale=n.nn  no       stop                 option for *esp*
      scfcrt=.n   yes      okay     iscf  = n   SCF criterion on energy
      scincr=n.nn no       stop                 option for *esp*
      search      partly   similar  iprint= 1   same as *linmin*
      setup       yes      okay                 read keywords from file
      sextet      partly   similar  imult = 6   sextet, UHF only
      shift=n     no       stop                 level shifting in SCF
      si1978      yes      okay     iparok= 4   use 1978 Si parameters
      sigma       no       stop                 use *nllsq* instead
      singlet     yes      okay     imult = 0   closed-shell singlet
      slope       no       stop                 option for *esp*
      spin        partly   similar  nprint= 1   print UHF spin matrix
      step=n.nn   yes      okay                 step size in path
      step1=n     yes      okay                 two-dimensional grid
      step2=n     yes      okay                 two-dimensional grid
      sto3g       no       stop                 option for *esp*
      symavg      no       stop                 option for *esp*
      symmetry    yes      okay     ksym  = 1   impose symmetry
      t=n         yes      okay     limit = n   time limit for job
      thermo      yes      okay     ntemp = 0   thermodynamics after
                                                force calculation at
                                                default temperatures
      thermo(nnn) yes      okay     ntemp1= n   *thermo* at temperatures
                                    ntemp2= k   specified by (nnn) =
                                                (n) or (n,m) or (n,m,k)
      times       no       ignore               print internal timings
      t-prio      no       stop                 option for *drc*
      trans       no       ignore               not needed, only real
                                                vibrational modes are
                                                included by default
      triplet     yes      okay     imult = 3   triplet, RHF or UHF
      ts          yes      okay     ief   = 1   locate transition state
                                                by *ef* procedure
      uhf         yes      okay     iuhf  = 1   do UHF calculation
      vectors     partly   similar  nprint= 0   print final eigenvectors
      velo        no       stop                 option for *drc*
      williams    no       stop                 option for *esp*
      x-prio      no       stop                 option for *drc*
      xyz         yes      okay                 use x,y,z coordinates
                                                with MOPAC input in
                                                internal coordinates

      Further information on the treatment of the MOPAC keywords may be
      obtained from subroutine keydef which governs the response of this
      program to any given MOPAC keyword.

      When using at least one of the above MOPAC keywords (IMOPAC=1),
      the default values for certain variables differ from the standard
      values (defined for the standard input), in order to stay as close
      as possible to the conventions in MOPAC(6.0), e.g. limit=3600,
      ipl=4, iuhf=-1, and nprint=-1 (see subroutines zlimit, method,
      and start). Note, in particular, that odd-electron systems are
      treated as doublets (imult=2) by default when using MOPAC input
      (IMOPAC=1), whereas imult=2 must be specified when using standard
      input (to avoid an input error).

      Some additional keywords have been defined which are listed below.
      In the notation of this input description, the following keywords
      are regarded as MOPAC-type keywords although they are not defined
      in MOPAC(6.0).

      cndo        iop= 2     use CNDO/2 method
      cosmo       icosmo=1   use standard COSMO solvation treatment
      eofile      -          to indicate end of input for MNDO
      mndoc       iop=-1     use MNDOC  method with BWEN (kci=2)
      mndod       iop=-10    use MNDO/d method with d orbitals
      mndodh      iop=-13    use combination of MNDO/d and MNDO/H
      mndoh       iop=-3     use MNDO/H method for hydrogen bonds
      molden      nsav13=2   generate molden output file molden.dat
      om1         iop=-5     use OM1    method
      om2         iop=-6     use OM2    method
      om3         iop=-8     use OM3    method
      odm2        iop=-22    use ODM2   method
      odm3        iop=-23    use ODM3   method
      optfor      jop= 3     optimization followed by force calculation
                  jop= 4     when used with *nllsq*, ts search followed
                             by force calculation
      sybyl       nsav16=1   generate sybyl output file nb16, see nsav16

      The preceding MOPAC-type keywords can be replaced by MNDO
      keywords (see section F). They are kept for convenience and
      for compatibility with previous program versions (MNDO94).

      ******************************************************************
      ******************************************************************

 H.   File dictionary.

      1    Sequential disk file.
           Used to store density matrices during job, if inout.gt.0.
      2    Sequential disk file.
           Used to store the two-electron AO integrals in SCF  section.
           Used to store the two-electron MO integrals in pert section.
      3    Sequential disk file.
           Used to store the h,f matrices in SCF section, if inout.gt.1.
           Used to store ordered AO integrals in pert section.
           Used to store data for subsequent VB treatment, if ivbse.lt.0.
      4    Sequential disk file.
           Used to store information for job continuation in geometry
           optimizations and force constant calculations.
           This file must be permanent if job continuation is desired.
      5    Standard input  file.
      6    Standard output file.
      7    Sequential disk file.
           Used for generating a new input file which contains either
           the current input geometry in a different format or
           the final optimized geometry from the current job.
      8    Sequential disk file.
           Used for generating an output file which contains the
           final geometry of the current job and the atomic charges.
      9    Sequential disk file.
           Used for generating an output file which can be used as
           input for evaluation programs that accept the pdb format.
      10   Sequential disk file.
           Used to store the density matrix at the reference geometry
           in finite-difference gradient calculations.
      11   Sequential disk file.
           Used for input  of  density matrix, if ktrial=1.
           Used for output of  density matrix, if ipubo =1,3.
           Used for saving the density matrix, for job continuation.
      12   Sequential disk file.
           Used for input  of eigenvectors, if ktrial=2.
           Used for output of eigenvectors, if ipubo =2,3.
      13   Sequential disk file.
           Used to store data for graphical evaluations according to
           MOPAC conventions.
      14   Sequential disk file.
           Used for input of preliminary or alternative parameters.
           Available for all semiempirical methods implemented.
           Conventions and formats see following section.
      15   Sequential disk file.
           Used for saving data after energy and gradient evaluations.
           Suitable as an interface to other programs and for debugging.
      16   Sequential disk file.
           Used to store data for SYBYL postprocessing according to
           MOPAC conventions.
      17   Sequential disk file.
           Used to store the inverse A matrix and the B matrix during
           the COSMO treatment (for later use in the gradient section)
           if the DIIS converger is applied simultaneously.
      18   Sequential disk file.
           Used to store the OM2 arrays S, B, COR, HO evaluated at the
           reference geometry (for later use in the gradient section).
      19   Sequential disk file.
           Used to store the reference data.
      20   Sequential disk file.
           Used for input of data for calculations with external points,
           if mmfile=1.

      ------------------------------------------------------------------

      File  1 will be used only if the available buffer is insufficient
      (as determined by the program) or if requested by option inout.
      File  2 will be used only if the available buffer is insufficient
      (as determined by the program).
      File  3 will be used only if the available buffer is insufficient
      (as determined by the program) or if requested by option inout or
      by option ivbse.
      File  4 will be used in geometry optimizations and force constant
      calculations (for middle.ge.0).
      File  7 will be used if requested by input option nsav7.
      File  8 will be used if requested by input option nsav8.
      File  9 will be used if requested by input option nsav9.
      File 10 will be used in finite-difference calculations for the
      gradient and electric properties (always).
      File 11 will be used in geometry optimizations and force constant
      calculations (for middle.ge.0).
      File 11 will be used if requested by input option ktrial/ipubo.
      File 12 will be used if requested by input option ktrial/ipubo.
      File 13 will be used if requested by input option nsav13.
      File 14 will be used if requested by input option iparok.
      File 15 will be used if requested by input option nsav15.
      File 16 will be used if requested by input option nsav16.
      File 17 will be used if requested by input option modcsm (COSMO).
      File 18 will be used if requested by input option inout (OM2).
      File 19 will be used if requested by input option inrefd.
      File 20 will be used if requested by input option mmfile.

      When using MOPAC input, output on files can be requested through
      the following keywords: geosave for file 7, pdbsave for file 9,
      graph for file 13, and sybyl for file 16.

      The numbers of the files can be redefined by changing the array
      nbf(20) in common block NBFILE, default values see BLOCKDATA
      BLOCK0: 1-20 for nbf(1)-nbf(20), convention nbi=nbf(i).

      ------------------------------------------------------------------

      Internally the program may use several other files whose numbers
      are not governed by common block NBFILE. Standard conventions:

      File     Standard   Related     Subroutine/program section
      unit      number     option     where the file is accessed

      nb90        90       inrefd     REFSAV, parameterizaton
      nb91        91       nsav16     GRAPH, SCF postprocessing
      nb92        92       setup      GETTXT, MOPAC input section
      nb93        93       nsav13     MOLDIN, MOLDEN input file
      iumix       95       ipsana     Analytical derivative code
      iurhs       96       ipsana     Analytical derivative code
      iuk         97       ipsana     Analytical derivative code
      iures       98       ipsana     Analytical derivative code
      iures+1     99       ipsana     Analytical derivative code

      The numbers of files 91, 92, and 93 cannot be changed via input.
      The input options iumix, iurhs, and iuk (see section 2.2)
      determine the corresponding file numbers (default values of
      95, 96, and 97, respectively). The remaining two files in the
      analytical derivative section are used only if the input value
      of iures is positive (recommended: iures=98, see section 2.2).

      ******************************************************************
      ******************************************************************

 I.   Input of external parameters.

      External parameters can be read from file nb14. This allows the
      definition of preliminary parameters for elements which do not yet
      have final parameters listed in the blockdata part and which are
      encountered in the input.

      File nb14 is read for iparok=1-3. Contents of file nb14:
      iparok=1  :  Keyword-oriented MOPAC(6.0) conventions.
      iparok=2,3:  Numerical input as described below. The options
                   differ only in details of the numbering scheme.

      ------------------------------------------------------------------

      iparok=1  :  One line of input for each parameter to be defined.
                   Each line is parsed for three items which must occur
                   in the order (partyp,elemnt,param).

        partyp     Parameter type which must match one of the predefined
                   character strings. The currently available choices
                   are given below under iparok=2 (95 parameter types).
                   Compared with MOPAC(6.0) the list of available
                   parameters types has been extended considerably.
        elemnt     Element symbol which must match one of the standard
                   chemical symbols (preceded by a blank character).
        param      Numerical input value.

                   End input with a blank line, with end-of-file, or
                   with the string END (case-insensitive) for partyp.

      iparok=1  :  Automatically selected for MOPAC-type input with
                   keyword EXTERNAL (sets iparok=1).
                   See MOPAC(6.0) manual for further details.

      ------------------------------------------------------------------

      iparok=2,3:  One line of input for each parameter to be defined.

        1-3   ipar      i3    Type of parameter. Conventions see below.
                              = 0  End of input.
        4-6   ielmnt    i3    Atomic number of element to which the
                              current parameter belongs.
       10-24  param    f15.8  Value of the parameter.

      iparok=2: Conventions for ipar (notation see below).
      iparok=2: First numbering scheme.
        1 USS  ,   2 UPP  ,   3 ZS   ,   4 ZP   ,   5 BETAS,   6 BETAP,
        7 ALPHA,   8 BETPI,   9 BETSH,  10 BETPH,  11 ALPS ,  12 ALPP ,
       13 ALPPI,  14 ALPSH,  15 ALPPH,  16 FVAL1,  17 FVAL2,  18 GVAL1,
       19 GVAL2,  20 FG   ,  21 UDD  ,  22 ZD   ,  23 BETAD,  24 ZSN  ,
       25 ZPN  ,  26 ZDN  ,  27 POCOR,  28 GSCAL,  29 NUMAO,  30 XX30 ,
       31 FN11 ,  32 FN21 ,  33 FN31 ,  34 FN12 ,  35 FN22 ,  36 FN32 ,
       37 FN13 ,  38 FN23 ,  39 FN33 ,  40 FN14 ,  41 FN24 ,  42 FN34 ,
       43 SOLV1,  44 SOLV2,  45 SOLV3,  46 SOLV4,  47 SOLV5,  48 SOLV6,
       49 ZSCOR,  50 FSCOR,  51 BSCOR,  52 ASCOR,  53 DELTA,  54 OMEGA,
       55 XSCAL,  56 XOFFL,  57 XOFFG,  58 ZSSCF,  59 ZPSCF,  60 ZDSCF,
       61 BSSCF,  62 BPSCF,  63 BDSCF,  64 XUSS ,  65 XUPP ,  66 XUDD ,
       67 ZSNMR,  68 ZPNMR,  69 ZDNMR,  70 BSNMR,  71 BPNMR,  72 BDNMR,
       73 GSS  ,  74 GPP  ,  75 GSP  ,  76 GP2  ,  77 HSP  ,  78 HPP  ,
       79 EHEAT,  80 F0DD ,  81 F2DD ,  82 F4DD ,  83 F0SD ,  84 G2SD ,
       85 ALP01,  86 ALP06,  87 ALP07,  88 ALP08,  89 ALP09,  90 ALP14,
       91 ALP15,  92 ALP16,  93 ALP17,  94 ALP35,  95 ALP53,  96 PDDG1,
       97 PDDG2,  98 PDDG3,  99 PDDG4.

      iparok=3: Conventions for ipar (notation see below).
      iparok=3: Second numbering scheme (from parametrization program).
      iparok=3: Same list as for iparok=2 up to entry 72.
        1 USS  ,   2 UPP  ,   3 ZS   ,   4 ZP   ,   5 BETAS,   6 BETAP,
        7 ALPHA,   8 BETPI,   9 BETSH,  10 BETPH,  11 ALPS ,  12 ALPP ,
       13 ALPPI,  14 ALPSH,  15 ALPPH,  16 FVAL1,  17 FVAL2,  18 GVAL1,
       19 GVAL2,  20 FG   ,  21 UDD  ,  22 ZD   ,  23 BETAD,  24 ZSN  ,
       25 ZPN  ,  26 ZDN  ,  27 POCOR,  28 GSCAL,  29 NUMAO,  30 XX30 ,
       31 FN11 ,  32 FN21 ,  33 FN31 ,  34 FN12 ,  35 FN22 ,  36 FN32 ,
       37 FN13 ,  38 FN23 ,  39 FN33 ,  40 FN14 ,  41 FN24 ,  42 FN34 ,
       43 SOLV1,  44 SOLV2,  45 SOLV3,  46 SOLV4,  47 SOLV5,  48 SOLV6,
       49 ZSCOR,  50 FSCOR,  51 BSCOR,  52 ASCOR,  53 DELTA,  54 OMEGA,
       55 XSCAL,  56 XOFFL,  57 XOFFG,  58 ZSSCF,  59 ZPSCF,  60 ZDSCF,
       61 BSSCF,  62 BPSCF,  63 BDSCF,  64 XUSS ,  65 XUPP ,  66 XUDD ,
       67 ZSNMR,  68 ZPNMR,  69 ZDNMR,  70 BSNMR,  71 BPNMR,  72 BDNMR,
       73 PDDG1,  74 PDDG2,  75 PDDG3,  76 PDDG4,  77 C6   ,  78 R0   ,
       79 D3S6 ,  80 D3S8 ,  81 D3A1 ,  82 D3A2 ,  83      ,  84      ,
       91 GSS  ,  92 GPP  ,  93 GSP  ,  94 GP2  ,  95 HSP  ,  96 HPP  ,
       97      ,  98      ,  99 EHEAT, 100 CORE , 101      , 102      ,
      121 F0DD , 122 F2DD , 123 F4DD , 124 F0SD , 125 G2SD , 126 F0PD ,
      127 F2PD , 128 G1PD , 129 G3PD , 130      , 131      , 132      .
      201 ALP01, 202 ALP02, 203 ALP03, 204 ALP04, 205 ALP05, 206 ALP06,
      207 ALP07, 208 ALP08, 209 ALP09, 210 ALP10, etc up to  286 ALP86.

      Comments on notation:
      USS,UPP,UDD           One-center energies for s,p,d (eV)
      ZS,ZP,ZD              Orbital exponents for s,p,d (au)
      BETAS,BETAP,BETAD     Beta parameters for s,p,d (eV)
      ALP                   Alpha core-core parameter (1/Angstrom)
      BETPI,BETSH,BETPH     Additional beta parameters, OM1/OM2 (eV)
      ALPS,ALPP..ALPPH      Resonance integral parameters, OM1/OM2 (au)
      FVAL1,FVAL2           Prefactors for 2-center orthogonalization
                            terms in OM1/OM2 (dimensionless)
      GVAL1,GVAL2           Prefactors for 3-center orthogonalization
                            terms in OM2 (dimensionless)
      ZSN,ZPN,ZDN           Auxiliary MNDO/d exponents for s,p,d (au)
      POCOR                 Additive term for core (au), set equal to
                            additive term for ss if not read in
      GSCAL                 Scaling factor for the core-core repulsion
                            used in AM1/d-PhoT and AM1/d-CB1
      NUMAO                 Number of basis functions for given atom
                            Needed for spd-basis, use 9.0 in this case
      XX30                  Superseded by NUMAO, no longer supported
      FN11..FN34            AM1(PM3)-type core repulsion terms
      SOLV1..SOLV6          Parameters for solvation models
      ZSCOR                 Orbital exponent for 1s-core, OM2 (au)
      FSCOR                 One-center energy for 1s-core, OM2 (eV)
      BSCOR                 Beta parameter for 1s-core, OM2 (eV)
      ASCOR                 Resonance integral parameter (1s), OM2 (au)
      DELTA,OMEGA           Parameters for electrostatic potential
                            (Angstrom,1/Angstrom)
      XSCAL                 Scale factor for absolute NMR shieldings
      XOFFL,XOFFG           Offsets (ppm) for NMR shifts: Liquid, gas
      ZSSCF,ZPSCF,ZDSCF     Orbital exponents for s,p,d (au), NMR-SCF
      BSSCF,BPSCF,BDSCF     Beta parameters for s,p,d (eV), NMR-SCF
      XUSS,XUPP,XUDD        One-center energies for s,p,d (eV), NMR-SCF
      ZSNMR,ZPNMR,ZDNMR     Orbital exponents for s,p,d (au), NMR integs
      BSNMR,BPNMR,BDNMR     Beta parameters for s,p,d (eV), NMR integs
      GSS,GSP,GPP,GP2,HSP   One-center two-electron integrals (eV)
      EHEAT                 Exp heat of formation of the atom (kcal/mol)
      CORE                  Core charge of the atom (e)
      F0SD,G2SD,F0DD..G3PD  Slater-Condon parameters (eV), the current
                            code processes input only for F0SD and G2SD
      ALP01..ALPxy..ALP86   MNDO/d alpha bond parameters (1/Angstrom)
                            involving partner with atomic number xy
      PDDG1,PDDG2           PDDG-type core repulsion terms: prefactors
      PDDG3,PDDG4           PDDG-type core repulsion terms: distances
      D3S6,D3S8,D3A1,D3A2   Parameters for D3 dispersion correction


      ******************************************************************
      ******************************************************************

 J.   Input for HDLC optimizer.

      The following input options are relevant for HDLC optimizations:
      section D.1   - jop, igeom, ief;
      section D.2   - maxend, middle, iprint, iprec, iconv, nrst;
      section D.2   - ihdlc1, ihdlc2, ihdlc3;
      section D.2.1 - mode, ireclc, iupd;
      section D.2.1 - dmax, ddmin, ddmax, rmin, rmax, omin.
      These options are described as part of the standard input.

      Additional data are read whenever the HDLC optimizer is accessed
      (options jop=0,1,3,4 and ief.lt.0). These data are provided on an
      external file nb42 or as an appended input block in the standard
      input file nb5 (last section for a given molecule) depending on
      input option ihdlc3:
      ihdlc3 = 0   Read from external input file nb42.
      ihdlc3 = 1   Read from standard input file nb5.
      If the input file cannot be opened, default HDLC options are used,
      and normally an unconstrained geometry optimization is performed.
      If there is no symmetry and no dummy atom, an attempt is made to
      satisfy the constraints implied in the initial input geometry.

      The input of these additional data is keyword-driven, with the
      keyword aligned to the left, followed by an equal sign and a
      value, e.g.: NREMST=81. The order of keywords is arbitrary.

      Some keywords require additional input on the following line(s)
      which is always unformatted. If atom sequence numbers need to be
      provided as additional input, they always refer to the sequence
      of atoms in the input geometry excluding dummy atoms.

      Convention for the remainder of this section:
      n,i,j,k,l,irad denote integer input data.
      f,target,vrad denote real input data.

      The following keywords are defined:
      NFCART=n   Specify n frozen atoms.
                 The following line(s) must provide n integer sequence
                 numbers of the frozen atoms.
      NFCOMP=n   Specify n constrained Cartesian coordinates.
                 Each of the following n lines must provide one
                 constraint in the form (i,j,target):
                 i       Sequence number of the atom involved.
                 j       Type of coordinate (x 1, y 2, z 3)
                 target  Corresponding target value (Angstrom).
                 Special remark concerning target:
	         The input for target is optional and may be omitted in
                 the current program version which ignores any input of
                 target and employs the corresponding value from the
                 initial input geometry. Later program versions may use
                 the input for target (upward compatibility).
      NFBOND=n   Specify n constrained bond lengths.
                 Each of the following n lines must provide one
                 constraint in the form (i,j,target):
                 i,j     Sequence numbers of the two atoms involved.
                 target  Corresponding target value (Angstrom).
                 Special remark concerning target: See above (NFCOMP).
      NFANGL=n   Specify n constrained bond angles.
                 Each of the following n lines must provide one
                 constraint in the form (i,j,k,target):
                 i,j,k   Sequence numbers of the three atoms involved.
                 target  Corresponding target value (degree).
                 Special remark concerning target: See above (NFCOMP).
      NFDIHE=n   Specify n constrained dihedral angles.
                 Each of the following n lines must provide one
                 constraint in the form (i,j,k,l,target):
                 i,j,k,l Sequence numbers of the four atoms involved.
                 target  Corresponding target value (degree).
                 Special remark concerning target: See above (NFCOMP).
      NMRESI=n   Define a residue/fragment/molecule with n atoms.
                 The following line(s) must provide n integer sequence
                 numbers to assign these atoms.
                 Coordinates are delocalized within each residue only.
	         The maximum number of residues is unlimited.
                 Each residue must consist of at least two atoms.
      NRCORE=n   Specify the n-th residue as the reaction core.
                 A microiterative transition state search is performed.
                 The default number of geometrical variables in the
                 reaction core with nrc atoms is set to 3*nrc.
                 This default may be changed using NDFCOR (see below).
                 Internally the atoms are renumbered such that the
                 reaction core becomes the first residue.
      NDFCOR=n   Specify the number of geometrical variables in the
                 reaction core and thereby implicitly select the atoms
                 carrying the first n variables as the reaction core.
                 If NRCORE is not used, all atoms of the reaction core
                 must belong to the first residue of the input geometry.
                 A microiterative transition state search is performed.
	    =0   Default: all variables (ndf=3*nrc) in the case of a
                 transition state search (selected by jop=1,4), and
                 0 otherwise (no reaction core defined).
      XYZFAC=f   Weighting factor of the Cartesian coordinates for the
	         delocalization to hybrid delocalized coordinates HDLC.
	    =0   Weighting factor = 1.0/real(ndf), default value.
	    >0   Weighting factor = f
	    <0   Weighting factor = abs(f)/real(ndf)
                 ndf: number of degrees of freedom in given residue.
      MDCRAD=n   Type of covalent radii of the elements used for the
                 calculation of the connectivity.
	    =0   Default: all atoms are treated as hydrogen.
                 This produces a small set of redundant primitives
                 based on a connectivity dominated by the shortest
                 distance branched path.
	    =1   Use values for the covalent radii in the HDLC code:
                 one average value for each row in the periodic table.
	    =2   Use the covalent radii provided as input (see NCRAD).
      NCRAD=n    Read input values of n covalent radii.
                 Each of the following n lines must provide one
                 such radius in the form (irad,vrad):
                 irad   nuclear charge
                 vrad   covalent radius (Angstrom)
      NREMST=n   Number of remembered L-BFGS steps.
            =0   Default value = min(40,ndf)
                 ndf: number of degrees of freedom in given residue.
      NRSHDL=n   Option to force a periodic restart of the optimizer.
                 After every n energy and gradient evaluations, the
                 optimizer is restarted, and the Hessian of the
                 reaction core is recalculated if required.
            =0   Default: never force a restart.
                 Note: Restarts can still occur if the HDLC of a given
                 residue break down or if the L-BFGS history does not
                 ensure an efficient optimization anymore.

      Input is terminated when an end-of-file or an empty input line
      is encountered.


      ******************************************************************
      ******************************************************************

 K.   Input for molecular dynamics and surface hopping driver

      For molecular dynamics runs with the option icross=6, the dynamics
      options are specified using the auxiliary input file "dynvar.in",
      in the form of a Fortran namelist with the following general format:

      &DYNVAR
      option1 = value1,
      option2 = value2,
      /

      The option names are case-insensitive.

      If no input file "dynvar.in" is provided, the default options
      given below are used, and a default file "dynvar.in" is generated.

      The dynamics options are as follows:

      Variable     Type     Default        Description

      iout         Int      0              Print level (0-3)

      nstep        Int      10             Number of MD steps
      dt           Double   5.0D-5         Time step (in picoseconds)

      temp0        Double   300.0D0        Initial temperature (K)
      norot        Logical  TRUE           Flag to adjust initial velocities to remove
                                           overall angular momentum of the system
      notra        Logical  TRUE           Flag to adjust initial velocities to remove
                                           overall linear momentum of the system

      init_stat    Int      1              Initial state

      write_stats  Logical  TRUE           Flag for writing of statistics
      sunit        Int      30             Fortran unit for statistics file
      sfile        Char(20) stat.out       File name for statistics

      write_traj   Logical  TRUE           Flag for writing of trajectory
      xunit        Int      31             Fortran unit for trajectory file
      xfile        Char(20) traj.out       File name for trajectory

      write_vel    Logical  FALSE          Flag for writing of velocities
      vunit        Int      32             Fortran unit for velocity file
      vfile        Char(20) vel.out        File name for velocities

      ene_tol      Double   1.0D-2         Obsolete option

      fstat        Int      1              Frequency for saving statistics to file
                                             = 1  every step
                                             = n  every n steps
      avstat       Logical  See text       Flag for turning on statistics averaging
                                           over fstat = n steps
                                             If n > 1, the default is TRUE, else FALSE
      fsav         Int      1              Frequency for saving trajectory and
                                           velocities to file
                                             = 1  every step
                                             = n  every n steps

      restart      Logical  FALSE          Flag to indicate if restarting dynamics
                                           from a restart file
      write_rest   Logical  TRUE           Flag for writing a restart file
      rfile        Char(20) dynam.restart  Restart file name

      ehrenfest    Logical  FALSE          Flag to enable Ehrenfest dynamics
      tully_hop    Logical  FALSE          Flag to enable Tully surface hopping
      simhop       Int      0              Flag to enable simple hopping
                                             = 0   No simple hopping
                                             = 1   diabatic surface hopping
                                             = 2   diabatic surface hopping with
                                                   average value of coupling (AS1)
                                             = 3   average coupling compared with
                                                   random number
                                             = 4   average coupling compared with
                                                   random number + velocity
                                                   adjustment (AS2)
                                             = 5   average coupling compared with
                                                   random number, hop only with
                                                   negative coupling + velocity
                                                   adjustment
                                             = 6   average coupling correction;
                                                   average coupling compared with
                                                   random number + velocity
                                                   adjustment (AS3)
                                             ***   Note: ehrenfest,tully_hop and
                                                   simhop are mutually exclusive.

      einteg       Char(5)  UP3            Integration algorithm for use with the
                                           Tully electronic propagation
					      UP1  = Unitary exponential propagator
                                                     computed at midpoint. Eigenvalue
						     expansion used to build the
						     exponetial
					      UP2  = Unitary exponential propagator
                                                     computed at the beginning of
						     the interval. Eigenvalue
						     expansion used to build the
						     exponetial
				              UP3  = Unitary exponential propagator
                                                     computed at midpoint. Taylor
						     expansion used to build the
						     exponential
					      ABM5 = Adams-Bashforth-Moulton
					             5-th order predictor-corrector
						     with local truncation error
						     evaluation. Also iterative SCF
						     cycles are performed if error
						     is greater than 1.D-10
					      ABM4 = Adams-Bashforth-Moulton
					             4-th order predictor-corrector
						     with local truncation error
						     evaluation. Also iterative SCF
						     cycles are performed if error
						     is greater than 1.D-10
					      ABM2 = Adams-Bashforth-Moulton
					             5-th order predictor-corrector
                                              RK2  = second order Runge-Kutta
                                              RK4  = fourth order Runge-Kutta
                                              euler= Euler method (only for
                                                     testing purposes)
      ne           Int      200            Number of steps for integration of the
                                           Tully electronic equation
      dec_cor      Double   0.1D0          Decoherence correction
                                              0.1 = Granucci & Persico empirical decoherence
                                                    correction, standard value (hartree)
                                               -1 = Shenvi, Subotnik & Yang parameterless
                                                    decoherence correction
                                              0.0 = switch off decoherence
                                                    correction
      cuthop       Double   0.0D0          Do not allow hops at energy differences
                                           larger than cuthop (in kcal/mol) to avoid
                                           unphysical hops
                                              =0 : (standard) do not use this feature
                                              >0 : simple cut at cuthop value
                                              <0 : cut by gaussian scale of probability
                                                   centered at cuthop value

      num_cc       Logical  FALSE          Flag for calculation of numerical
                                           non-adiabatic couplings
      an_cc        Logical  TRUE           Flag for calculation of analytical
                                           non-adiabatic couplings
					   *** Note: num_cc and an_cc are not mutually
                                           exclusive, but if both are selected the
                                           analytical couplings are used in the Tully
                                           procedure. If only numerical couplings are
                                           selected, analytical couplings must still
                                           be calculated each time a hop occurs.
      nac_ph       Double   0.1D0          Obsolete option.
      rnd_gen      Char(8)  standard       Algorithm for generating random numbers
                                           for initial velocity assignment and for
                                           the Tully surface hopping algorithm
                                             standard = intrinsic Fortran subroutine
                                                        (RANDOM_NUMBER)
							NB: compiler-dependent
                                             PM_BD    = Park and Miller algorithm with
                                                        Bays-Durham shuffle
                                             knuth    = Knuth subtractive algorithm
      rnd_seed     Int      -1             Integer to seed the random number generator
                                             -1 = random seed (e.g. based on the
                                                  system clock)
                                             NB: For rnd_gen = standard, each member
                                                 of the seed array is set to rnd_seed

      fol_stat     Logical  TRUE           Flag to enable state following

      write_hop    Logical  See text       Flag for writing of hopping data
                                             Default is TRUE if Ehrenfest or Tully
					     dynamics are selected, FALSE otherwise
      hopunit      Int      33             Fortran unit for hopping data file
      hopfile      Char(20) hopping.out    File name for hopping data
      fhop         Int      1              Frequency for saving hopping data to file
                                             = 1  every step
                                             = n  every n steps

      vs           Logical  FALSE          DEPRECATED

      ene_cons     Logical  FALSE          Flag for total energy conservation. Deviations
                                           are handled by an exponential velocity scaling.
      ene_scal     Double   1.0D0          Scaling factor for energy conservation. The
                                           velocities are scaled, so that the energy
                                           difference between total energy and initial
                                           total energy is reduced by factor ene_scal in
                                           1 fs.

      thermostat   Int      0              Choice of thermostat.
                                             = 0  Do not use a thermostat
                                             = 1  Nose-Hoover (chain) thermostat
      thermo_T     Double   300.0D0        Target temperature for thermostat
      thermo_len   Int      1              Length of Nose-Hoover chain
                                             = 1  Nose-Hoover thermostat
                                             = n  Nose-Hoover chain thermostat with chain
                                                  length n.
      thermo_tau   Double   1.0D0          Characteristic time of Nose-Hoover thermostat
                                           in ps.
      thermo_equi  Int      0              Number of equilibration steps. The writing of the
                                           trajectory file will start after the equilibration
                                           ends.
      g0           Double   0.0D0          Damping coefficient. A positive value selects
                                           Langevin dynamics. Unit: 1/ps.

      ADAPTIVE TIME STEP REDUCTIONS:
      If one of the  criteria (adapt_ene or adapt_map) is activated, the MD simulaton will
      revert a calculation step and try a smaller time step, if these criteria are not
      fulfilled.
      adapt_map      Int      0              Threshold for orbital mapping procedure.
                                             If one mapping of active orbitalsis smaller than
                                             threshold, the step size gets reduced. High values
                                             can usually be selected (95 or higher)
                                               = 0    turn this criterium off
      adapt_ene      Double   0.0D0          Threshold for total energy conservation.
                                             If change is bigger than threshold, the step size
                                             gets reduced. Low values can usually be
                                             selected (0.0001 or lower for relative;
                                                         0.01 or lower for absolute)
                                               = 0.0  turn this criterium off
      adapt_ene_mode Int      0              Select if the energy threshold value in adapt_ene is
                                             relative or absolute
                                               = 0  adapt_ene is relative threshold (e.g. 0.01
                                                    corresponds to a maximum change of 1% between
                                                    two steps)
                                               = 1  adapt_ene is absolute threshold (in kcal/mol)
      adapt_tries    Int      7              Maximum number of reductions
      adapt_proceed  Logical  FALSE          Handling of points, where a time step reduction is
                                             not successful
                                               = T  The calculation will still proceed if one of
                                                    the criteria is not fulfilled after adapt_tries
                                                    reductions. mapthr is then internally set to 1
                                               = F  The calculation will stop after adapt_tries
                                                    reductions.

      File dictionary (with default Fortran units).

      30   Sequential disk file (default name: stat.out)
           Used to store statistics of the dynamics run.
      31   Sequential disk file (default name: traj.out)
           Used to store trajectory.
      32   Sequential disk file (default name: vel.out)
           Used to store velocities.
      33   Sequential disk file (default name: hopping.out)
           Used to store hopping data.

      In addition, there is a restart file (default name: dynam.restart)


      ******************************************************************
      ******************************************************************

 L.   Input for Born-Oppenheimer ground-state molecular dynamics

      For molecular dynamics runs with the option jop=-3, the dynamics
      options are specified using the auxiliary input file "dynvar.in",
      in the form of a Fortran namelist with the following general format:

      &DYNVAR
      option1 = value1,
      option2 = value2,
      /

      The option names are case-insensitive.

      If no input file "dynvar.in" is provided, the default options
      given below are used, and a default file "dynvar.in" is generated.

      The Born-Oppenheimer ground-state MD code has been generated by
      simplifying the general multi-state surface-hopping MD code.

      *** Nose-Hoover thermostat not available in the simplified code.
      *** Instead, the code only offers simple velocity scaling.

      *** Most options from section K kept, same meaning and defaults;
          their description is copied below for the sake of covenience.
      *** Options from section K removed that are no longer supported,
          including multi-state surface-hopping and thermostat options.
      *** New options for velocity scaling (vs, Tfix, fvs, vs_Emax).

      The dynamics options are as follows:

      Variable     Type     Default        Description

      iout         Int      0              Print level (0-3)

      nstep        Int      10             Number of MD steps
      dt           Double   5.0D-5         Time step (in picoseconds)

      temp0        Double   300.0D0        Initial temperature (K)
      norot        Logical  TRUE           Flag to adjust initial velocities to remove
                                           overall angular momentum of the system
      notra        Logical  TRUE           Flag to adjust initial velocities to remove
                                           overall linear momentum of the system

      init_stat    Int      1              Initial state

      write_stats  Logical  TRUE           Flag for writing of statistics
      sunit        Int      30             Fortran unit for statistics file
      sfile        Char(20) stat.out       File name for statistics

      write_traj   Logical  TRUE           Flag for writing of trajectory
      xunit        Int      31             Fortran unit for trajectory file
      xfile        Char(20) traj.out       File name for trajectory

      write_vel    Logical  FALSE          Flag for writing of velocities
      vunit        Int      32             Fortran unit for velocity file
      vfile        Char(20) vel.out        File name for velocities

      ene_tol      Double   1.0D-2         Obsolete option

      fstat        Int      1              Frequency for saving statistics to file
                                             = 1  every step
                                             = n  every n steps
      avstat       Logical  See text       Flag for turning on statistics averaging
                                           over fstat = n steps
                                             If n > 1, the default is TRUE, else FALSE
      fsav         Int      1              Frequency for saving trajectory and
                                           velocities to file
                                             = 1  every step
                                             = n  every n steps

      restart      Logical  FALSE          Flag to indicate if restarting dynamics
                                           from a restart file
      write_rest   Logical  TRUE           Flag for writing a restart file
      rfile        Char(20) dynam.restart  Restart file name

      rnd_gen      Char(8)  standard       Algorithm for generating random numbers
                                             standard = intrinsic Fortran subroutine
                                                        (RANDOM_NUMBER)
							NB: compiler-dependent
                                             PM_BD    = Park and Miller algorithm with
                                                        Bays-Durham shuffle
                                             knuth    = Knuth subtractive algorithm
      rnd_seed     Int      -1             Integer to seed the random number generator
                                             -1 = random seed (e.g. based on the
                                                  system clock)
                                             NB: For rnd_gen = standard, each member
                                                 of the seed array is set to rnd_seed

      vs           Logical  FALSE          DEPRECATED

      ene_cons     Logical  FALSE          Flag for total energy conservation. Deviations
                                           are handled by an exponential velocity scaling.
      ene_scal     Double   1.0D0          Scaling factor for energy conservation. The
                                           velocities are scaled, so that the energy
                                           difference between total energy and initial
                                           total energy is reduced by factor ene_scal in
                                           1 fs.

      Tfix         Double   temp0          Temperature to be reached by velocity scaling.
                                           Default temp0 is input via parameter list.
      fvs          Int      1              Frequency for performing velocity scaling
                                             = 1  every step
                                             = n  every n steps
      vs_Emax      Double   -1.0D0         Maximum kinetic energy correction allowed in
                                           velocity scaling
                                           Default of -1.0D0 implies: no limit.
      g0           Double   0.0D0          Damping coefficient. A positive value selects
                                           Langevin dynamics. Unit: 1/ps.

      File dictionary (with default Fortran units) - same as in section K:

      30   Sequential disk file (default name: stat.out)
           Used to store statistics of the dynamics run.
      31   Sequential disk file (default name: traj.out)
           Used to store trajectory.
      32   Sequential disk file (default name: vel.out)
           Used to store velocities.
      33   Sequential disk file (default name: hopping.out)
           Used to store hopping data.

      In addition, there is a restart file (default name: dynam.restart)
